//AUTOGENERATED CODE DO NOT EDIT
// This file is automatically generated from /internal/codegen/templates/aws_resource_file.tmpl
package ecs

type Task struct {
	Attachments           []*Attachment           `bson:"attachments,omitempty" ion:"attachments" dynamodbav:"attachments,omitempty" parquet:"name=attachments,type=MAP,convertedtype=LIST" json:"attachments,omitempty" diff:"attachments"`
	Attributes            []*Attribute            `bson:"attributes,omitempty" ion:"attributes" dynamodbav:"attributes,omitempty" parquet:"name=attributes,type=MAP,convertedtype=LIST" json:"attributes,omitempty" diff:"attributes"`
	AvailabilityZone      string                  `bson:"availability_zone,omitempty" ion:"availability_zone" dynamodbav:"availability_zone,omitempty" parquet:"name=availability_zone,type=BYTE_ARRAY,convertedtype=UTF8" json:"availability_zone,omitempty" diff:"availability_zone"`
	CapacityProviderName  string                  `bson:"capacity_provider_name,omitempty" ion:"capacity_provider_name" dynamodbav:"capacity_provider_name,omitempty" parquet:"name=capacity_provider_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"capacity_provider_name,omitempty" diff:"capacity_provider_name"`
	ClusterArn            string                  `bson:"cluster_arn,omitempty" ion:"cluster_arn" dynamodbav:"cluster_arn,omitempty" parquet:"name=cluster_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"cluster_arn,omitempty" diff:"cluster_arn"`
	Connectivity          string                  `bson:"connectivity,omitempty" ion:"connectivity" dynamodbav:"connectivity,omitempty" parquet:"name=connectivity,type=BYTE_ARRAY,convertedtype=UTF8" json:"connectivity,omitempty" diff:"connectivity"`
	ConnectivityAt        int64                   `bson:"connectivity_at,omitempty" ion:"connectivity_at" dynamodbav:"connectivity_at,omitempty" parquet:"name=connectivity_at,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"connectivity_at,omitempty" diff:"connectivity_at"`
	ContainerInstanceArn  string                  `bson:"container_instance_arn,omitempty" ion:"container_instance_arn" dynamodbav:"container_instance_arn,omitempty" parquet:"name=container_instance_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"container_instance_arn,omitempty" diff:"container_instance_arn"`
	Containers            []*Container            `bson:"containers,omitempty" ion:"containers" dynamodbav:"containers,omitempty" parquet:"name=containers,type=MAP,convertedtype=LIST" json:"containers,omitempty" diff:"containers"`
	Cpu                   string                  `bson:"cpu,omitempty" ion:"cpu" dynamodbav:"cpu,omitempty" parquet:"name=cpu,type=BYTE_ARRAY,convertedtype=UTF8" json:"cpu,omitempty" diff:"cpu"`
	CreatedAt             int64                   `bson:"created_at,omitempty" ion:"created_at" dynamodbav:"created_at,omitempty" parquet:"name=created_at,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"created_at,omitempty" diff:"created_at"`
	DesiredStatus         string                  `bson:"desired_status,omitempty" ion:"desired_status" dynamodbav:"desired_status,omitempty" parquet:"name=desired_status,type=BYTE_ARRAY,convertedtype=UTF8" json:"desired_status,omitempty" diff:"desired_status"`
	EnableExecuteCommand  bool                    `bson:"enable_execute_command,omitempty" ion:"enable_execute_command" dynamodbav:"enable_execute_command" parquet:"name=enable_execute_command,type=BOOLEAN" json:"enable_execute_command,omitempty" diff:"enable_execute_command"`
	EphemeralStorage      *EphemeralStorage       `bson:"ephemeral_storage,omitempty" ion:"ephemeral_storage" dynamodbav:"ephemeral_storage,omitempty" parquet:"name=ephemeral_storage" json:"ephemeral_storage,omitempty" diff:"ephemeral_storage"`
	ExecutionStoppedAt    int64                   `bson:"execution_stopped_at,omitempty" ion:"execution_stopped_at" dynamodbav:"execution_stopped_at,omitempty" parquet:"name=execution_stopped_at,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"execution_stopped_at,omitempty" diff:"execution_stopped_at"`
	Group                 string                  `bson:"group,omitempty" ion:"group" dynamodbav:"group,omitempty" parquet:"name=group,type=BYTE_ARRAY,convertedtype=UTF8" json:"group,omitempty" diff:"group"`
	HealthStatus          string                  `bson:"health_status,omitempty" ion:"health_status" dynamodbav:"health_status,omitempty" parquet:"name=health_status,type=BYTE_ARRAY,convertedtype=UTF8" json:"health_status,omitempty" diff:"health_status"`
	InferenceAccelerators []*InferenceAccelerator `bson:"inference_accelerators,omitempty" ion:"inference_accelerators" dynamodbav:"inference_accelerators,omitempty" parquet:"name=inference_accelerators,type=MAP,convertedtype=LIST" json:"inference_accelerators,omitempty" diff:"inference_accelerators"`
	LastStatus            string                  `bson:"last_status,omitempty" ion:"last_status" dynamodbav:"last_status,omitempty" parquet:"name=last_status,type=BYTE_ARRAY,convertedtype=UTF8" json:"last_status,omitempty" diff:"last_status"`
	LaunchType            string                  `bson:"launch_type,omitempty" ion:"launch_type" dynamodbav:"launch_type,omitempty" parquet:"name=launch_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"launch_type,omitempty" diff:"launch_type"`
	Memory                string                  `bson:"memory,omitempty" ion:"memory" dynamodbav:"memory,omitempty" parquet:"name=memory,type=BYTE_ARRAY,convertedtype=UTF8" json:"memory,omitempty" diff:"memory"`
	Overrides             *TaskOverride           `bson:"overrides,omitempty" ion:"overrides" dynamodbav:"overrides,omitempty" parquet:"name=overrides" json:"overrides,omitempty" diff:"overrides"`
	PlatformFamily        string                  `bson:"platform_family,omitempty" ion:"platform_family" dynamodbav:"platform_family,omitempty" parquet:"name=platform_family,type=BYTE_ARRAY,convertedtype=UTF8" json:"platform_family,omitempty" diff:"platform_family"`
	PlatformVersion       string                  `bson:"platform_version,omitempty" ion:"platform_version" dynamodbav:"platform_version,omitempty" parquet:"name=platform_version,type=BYTE_ARRAY,convertedtype=UTF8" json:"platform_version,omitempty" diff:"platform_version"`
	PullStartedAt         int64                   `bson:"pull_started_at,omitempty" ion:"pull_started_at" dynamodbav:"pull_started_at,omitempty" parquet:"name=pull_started_at,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"pull_started_at,omitempty" diff:"pull_started_at"`
	PullStoppedAt         int64                   `bson:"pull_stopped_at,omitempty" ion:"pull_stopped_at" dynamodbav:"pull_stopped_at,omitempty" parquet:"name=pull_stopped_at,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"pull_stopped_at,omitempty" diff:"pull_stopped_at"`
	StartedAt             int64                   `bson:"started_at,omitempty" ion:"started_at" dynamodbav:"started_at,omitempty" parquet:"name=started_at,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"started_at,omitempty" diff:"started_at"`
	StartedBy             string                  `bson:"started_by,omitempty" ion:"started_by" dynamodbav:"started_by,omitempty" parquet:"name=started_by,type=BYTE_ARRAY,convertedtype=UTF8" json:"started_by,omitempty" diff:"started_by"`
	StopCode              string                  `bson:"stop_code,omitempty" ion:"stop_code" dynamodbav:"stop_code,omitempty" parquet:"name=stop_code,type=BYTE_ARRAY,convertedtype=UTF8" json:"stop_code,omitempty" diff:"stop_code"`
	StoppedAt             int64                   `bson:"stopped_at,omitempty" ion:"stopped_at" dynamodbav:"stopped_at,omitempty" parquet:"name=stopped_at,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"stopped_at,omitempty" diff:"stopped_at"`
	StoppedReason         string                  `bson:"stopped_reason,omitempty" ion:"stopped_reason" dynamodbav:"stopped_reason,omitempty" parquet:"name=stopped_reason,type=BYTE_ARRAY,convertedtype=UTF8" json:"stopped_reason,omitempty" diff:"stopped_reason"`
	StoppingAt            int64                   `bson:"stopping_at,omitempty" ion:"stopping_at" dynamodbav:"stopping_at,omitempty" parquet:"name=stopping_at,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"stopping_at,omitempty" diff:"stopping_at"`
	Tags                  map[string]string       `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
	TaskArn               string                  `bson:"task_arn,omitempty" ion:"task_arn" dynamodbav:"task_arn,omitempty" parquet:"name=task_arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"task_arn,omitempty" diff:"task_arn,identifier"`
	TaskDefinitionArn     string                  `bson:"task_definition_arn,omitempty" ion:"task_definition_arn" dynamodbav:"task_definition_arn,omitempty" parquet:"name=task_definition_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"task_definition_arn,omitempty" diff:"task_definition_arn"`
	Version               int64                   `bson:"version,omitempty" ion:"version" dynamodbav:"version,omitempty" parquet:"name=version,type=INT64" json:"version,omitempty" diff:"version"`
	AccountId             string                  `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region                string                  `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime            int64                   `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID         string                  `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
}
