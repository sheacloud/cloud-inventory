//AUTOGENERATED CODE DO NOT EDIT
package ecs

import (
	"time"
)

type Attachment struct {
	Details []*KeyValuePair `bson:"details,omitempty" dynamodbav:"details,omitempty" json:"details,omitempty" diff:"details"`
	Id      string          `bson:"id,omitempty" dynamodbav:"id,omitempty" json:"id,omitempty" diff:"id"`
	Status  string          `bson:"status,omitempty" dynamodbav:"status,omitempty" json:"status,omitempty" diff:"status"`
	Type    string          `bson:"type,omitempty" dynamodbav:"type,omitempty" json:"type,omitempty" diff:"type"`
}

type KeyValuePair struct {
	Name  string `bson:"name,omitempty" dynamodbav:"name,omitempty" json:"name,omitempty" diff:"name"`
	Value string `bson:"value,omitempty" dynamodbav:"value,omitempty" json:"value,omitempty" diff:"value"`
}

type ClusterConfiguration struct {
	ExecuteCommandConfiguration *ExecuteCommandConfiguration `bson:"execute_command_configuration,omitempty" dynamodbav:"execute_command_configuration,omitempty" json:"execute_command_configuration,omitempty" diff:"execute_command_configuration"`
}

type ExecuteCommandConfiguration struct {
	KmsKeyId         string                          `bson:"kms_key_id,omitempty" dynamodbav:"kms_key_id,omitempty" json:"kms_key_id,omitempty" diff:"kms_key_id"`
	LogConfiguration *ExecuteCommandLogConfiguration `bson:"log_configuration,omitempty" dynamodbav:"log_configuration,omitempty" json:"log_configuration,omitempty" diff:"log_configuration"`
	Logging          string                          `bson:"logging,omitempty" dynamodbav:"logging,omitempty" json:"logging,omitempty" diff:"logging"`
}

type ExecuteCommandLogConfiguration struct {
	CloudWatchEncryptionEnabled bool   `bson:"cloud_watch_encryption_enabled,omitempty" dynamodbav:"cloud_watch_encryption_enabled" json:"cloud_watch_encryption_enabled,omitempty" diff:"cloud_watch_encryption_enabled"`
	CloudWatchLogGroupName      string `bson:"cloud_watch_log_group_name,omitempty" dynamodbav:"cloud_watch_log_group_name,omitempty" json:"cloud_watch_log_group_name,omitempty" diff:"cloud_watch_log_group_name"`
	S3BucketName                string `bson:"s3_bucket_name,omitempty" dynamodbav:"s3_bucket_name,omitempty" json:"s3_bucket_name,omitempty" diff:"s3_bucket_name"`
	S3EncryptionEnabled         bool   `bson:"s3_encryption_enabled,omitempty" dynamodbav:"s3_encryption_enabled" json:"s3_encryption_enabled,omitempty" diff:"s3_encryption_enabled"`
	S3KeyPrefix                 string `bson:"s3_key_prefix,omitempty" dynamodbav:"s3_key_prefix,omitempty" json:"s3_key_prefix,omitempty" diff:"s3_key_prefix"`
}

type CapacityProviderStrategyItem struct {
	CapacityProvider string `bson:"capacity_provider,omitempty" dynamodbav:"capacity_provider,omitempty" json:"capacity_provider,omitempty" diff:"capacity_provider"`
	Base             int32  `bson:"base,omitempty" dynamodbav:"base,omitempty" json:"base,omitempty" diff:"base"`
	Weight           int32  `bson:"weight,omitempty" dynamodbav:"weight,omitempty" json:"weight,omitempty" diff:"weight"`
}

type ClusterSetting struct {
	Name  string `bson:"name,omitempty" dynamodbav:"name,omitempty" json:"name,omitempty" diff:"name"`
	Value string `bson:"value,omitempty" dynamodbav:"value,omitempty" json:"value,omitempty" diff:"value"`
}

type Tag struct {
	Key   string `bson:"key,omitempty" dynamodbav:"key,omitempty" json:"key,omitempty" diff:"key"`
	Value string `bson:"value,omitempty" dynamodbav:"value,omitempty" json:"value,omitempty" diff:"value"`
}

type DeploymentConfiguration struct {
	DeploymentCircuitBreaker *DeploymentCircuitBreaker `bson:"deployment_circuit_breaker,omitempty" dynamodbav:"deployment_circuit_breaker,omitempty" json:"deployment_circuit_breaker,omitempty" diff:"deployment_circuit_breaker"`
	MaximumPercent           int32                     `bson:"maximum_percent,omitempty" dynamodbav:"maximum_percent,omitempty" json:"maximum_percent,omitempty" diff:"maximum_percent"`
	MinimumHealthyPercent    int32                     `bson:"minimum_healthy_percent,omitempty" dynamodbav:"minimum_healthy_percent,omitempty" json:"minimum_healthy_percent,omitempty" diff:"minimum_healthy_percent"`
}

type DeploymentCircuitBreaker struct {
	Enable   bool `bson:"enable,omitempty" dynamodbav:"enable" json:"enable,omitempty" diff:"enable"`
	Rollback bool `bson:"rollback,omitempty" dynamodbav:"rollback" json:"rollback,omitempty" diff:"rollback"`
}

type DeploymentController struct {
	Type string `bson:"type,omitempty" dynamodbav:"type,omitempty" json:"type,omitempty" diff:"type"`
}

type Deployment struct {
	CapacityProviderStrategy []*CapacityProviderStrategyItem `bson:"capacity_provider_strategy,omitempty" dynamodbav:"capacity_provider_strategy,omitempty" json:"capacity_provider_strategy,omitempty" diff:"capacity_provider_strategy"`
	CreatedAt                *time.Time                      `bson:"created_at,omitempty" dynamodbav:"created_at,unixtime,omitempty" json:"created_at,omitempty" diff:"created_at"`
	DesiredCount             int32                           `bson:"desired_count,omitempty" dynamodbav:"desired_count,omitempty" json:"desired_count,omitempty" diff:"desired_count"`
	FailedTasks              int32                           `bson:"failed_tasks,omitempty" dynamodbav:"failed_tasks,omitempty" json:"failed_tasks,omitempty" diff:"failed_tasks"`
	Id                       string                          `bson:"id,omitempty" dynamodbav:"id,omitempty" json:"id,omitempty" diff:"id"`
	LaunchType               string                          `bson:"launch_type,omitempty" dynamodbav:"launch_type,omitempty" json:"launch_type,omitempty" diff:"launch_type"`
	NetworkConfiguration     *NetworkConfiguration           `bson:"network_configuration,omitempty" dynamodbav:"network_configuration,omitempty" json:"network_configuration,omitempty" diff:"network_configuration"`
	PendingCount             int32                           `bson:"pending_count,omitempty" dynamodbav:"pending_count,omitempty" json:"pending_count,omitempty" diff:"pending_count"`
	PlatformFamily           string                          `bson:"platform_family,omitempty" dynamodbav:"platform_family,omitempty" json:"platform_family,omitempty" diff:"platform_family"`
	PlatformVersion          string                          `bson:"platform_version,omitempty" dynamodbav:"platform_version,omitempty" json:"platform_version,omitempty" diff:"platform_version"`
	RolloutState             string                          `bson:"rollout_state,omitempty" dynamodbav:"rollout_state,omitempty" json:"rollout_state,omitempty" diff:"rollout_state"`
	RolloutStateReason       string                          `bson:"rollout_state_reason,omitempty" dynamodbav:"rollout_state_reason,omitempty" json:"rollout_state_reason,omitempty" diff:"rollout_state_reason"`
	RunningCount             int32                           `bson:"running_count,omitempty" dynamodbav:"running_count,omitempty" json:"running_count,omitempty" diff:"running_count"`
	Status                   string                          `bson:"status,omitempty" dynamodbav:"status,omitempty" json:"status,omitempty" diff:"status"`
	TaskDefinition           string                          `bson:"task_definition,omitempty" dynamodbav:"task_definition,omitempty" json:"task_definition,omitempty" diff:"task_definition"`
	UpdatedAt                *time.Time                      `bson:"updated_at,omitempty" dynamodbav:"updated_at,unixtime,omitempty" json:"updated_at,omitempty" diff:"updated_at"`
}

type NetworkConfiguration struct {
	AwsvpcConfiguration *AwsVpcConfiguration `bson:"awsvpc_configuration,omitempty" dynamodbav:"awsvpc_configuration,omitempty" json:"awsvpc_configuration,omitempty" diff:"awsvpc_configuration"`
}

type AwsVpcConfiguration struct {
	Subnets        []string `bson:"subnets,omitempty" dynamodbav:"subnets,omitempty" json:"subnets,omitempty" diff:"subnets"`
	AssignPublicIp string   `bson:"assign_public_ip,omitempty" dynamodbav:"assign_public_ip,omitempty" json:"assign_public_ip,omitempty" diff:"assign_public_ip"`
	SecurityGroups []string `bson:"security_groups,omitempty" dynamodbav:"security_groups,omitempty" json:"security_groups,omitempty" diff:"security_groups"`
}

type LoadBalancer struct {
	ContainerName    string `bson:"container_name,omitempty" dynamodbav:"container_name,omitempty" json:"container_name,omitempty" diff:"container_name"`
	ContainerPort    int32  `bson:"container_port,omitempty" dynamodbav:"container_port,omitempty" json:"container_port,omitempty" diff:"container_port"`
	LoadBalancerName string `bson:"load_balancer_name,omitempty" dynamodbav:"load_balancer_name,omitempty" json:"load_balancer_name,omitempty" diff:"load_balancer_name"`
	TargetGroupArn   string `bson:"target_group_arn,omitempty" dynamodbav:"target_group_arn,omitempty" json:"target_group_arn,omitempty" diff:"target_group_arn"`
}

type PlacementConstraint struct {
	Expression string `bson:"expression,omitempty" dynamodbav:"expression,omitempty" json:"expression,omitempty" diff:"expression"`
	Type       string `bson:"type,omitempty" dynamodbav:"type,omitempty" json:"type,omitempty" diff:"type"`
}

type PlacementStrategy struct {
	Field string `bson:"field,omitempty" dynamodbav:"field,omitempty" json:"field,omitempty" diff:"field"`
	Type  string `bson:"type,omitempty" dynamodbav:"type,omitempty" json:"type,omitempty" diff:"type"`
}

type ServiceRegistry struct {
	ContainerName string `bson:"container_name,omitempty" dynamodbav:"container_name,omitempty" json:"container_name,omitempty" diff:"container_name"`
	ContainerPort int32  `bson:"container_port,omitempty" dynamodbav:"container_port,omitempty" json:"container_port,omitempty" diff:"container_port"`
	Port          int32  `bson:"port,omitempty" dynamodbav:"port,omitempty" json:"port,omitempty" diff:"port"`
	RegistryArn   string `bson:"registry_arn,omitempty" dynamodbav:"registry_arn,omitempty" json:"registry_arn,omitempty" diff:"registry_arn"`
}

type TaskSet struct {
	CapacityProviderStrategy []*CapacityProviderStrategyItem `bson:"capacity_provider_strategy,omitempty" dynamodbav:"capacity_provider_strategy,omitempty" json:"capacity_provider_strategy,omitempty" diff:"capacity_provider_strategy"`
	ClusterArn               string                          `bson:"cluster_arn,omitempty" dynamodbav:"cluster_arn,omitempty" json:"cluster_arn,omitempty" diff:"cluster_arn"`
	ComputedDesiredCount     int32                           `bson:"computed_desired_count,omitempty" dynamodbav:"computed_desired_count,omitempty" json:"computed_desired_count,omitempty" diff:"computed_desired_count"`
	CreatedAt                *time.Time                      `bson:"created_at,omitempty" dynamodbav:"created_at,unixtime,omitempty" json:"created_at,omitempty" diff:"created_at"`
	ExternalId               string                          `bson:"external_id,omitempty" dynamodbav:"external_id,omitempty" json:"external_id,omitempty" diff:"external_id"`
	Id                       string                          `bson:"id,omitempty" dynamodbav:"id,omitempty" json:"id,omitempty" diff:"id"`
	LaunchType               string                          `bson:"launch_type,omitempty" dynamodbav:"launch_type,omitempty" json:"launch_type,omitempty" diff:"launch_type"`
	LoadBalancers            []*LoadBalancer                 `bson:"load_balancers,omitempty" dynamodbav:"load_balancers,omitempty" json:"load_balancers,omitempty" diff:"load_balancers"`
	NetworkConfiguration     *NetworkConfiguration           `bson:"network_configuration,omitempty" dynamodbav:"network_configuration,omitempty" json:"network_configuration,omitempty" diff:"network_configuration"`
	PendingCount             int32                           `bson:"pending_count,omitempty" dynamodbav:"pending_count,omitempty" json:"pending_count,omitempty" diff:"pending_count"`
	PlatformFamily           string                          `bson:"platform_family,omitempty" dynamodbav:"platform_family,omitempty" json:"platform_family,omitempty" diff:"platform_family"`
	PlatformVersion          string                          `bson:"platform_version,omitempty" dynamodbav:"platform_version,omitempty" json:"platform_version,omitempty" diff:"platform_version"`
	RunningCount             int32                           `bson:"running_count,omitempty" dynamodbav:"running_count,omitempty" json:"running_count,omitempty" diff:"running_count"`
	Scale                    *Scale                          `bson:"scale,omitempty" dynamodbav:"scale,omitempty" json:"scale,omitempty" diff:"scale"`
	ServiceArn               string                          `bson:"service_arn,omitempty" dynamodbav:"service_arn,omitempty" inventory_primary_key:"true" json:"service_arn,omitempty" diff:"service_arn,identifier"`
	ServiceRegistries        []*ServiceRegistry              `bson:"service_registries,omitempty" dynamodbav:"service_registries,omitempty" json:"service_registries,omitempty" diff:"service_registries"`
	StabilityStatus          string                          `bson:"stability_status,omitempty" dynamodbav:"stability_status,omitempty" json:"stability_status,omitempty" diff:"stability_status"`
	StabilityStatusAt        *time.Time                      `bson:"stability_status_at,omitempty" dynamodbav:"stability_status_at,unixtime,omitempty" json:"stability_status_at,omitempty" diff:"stability_status_at"`
	StartedBy                string                          `bson:"started_by,omitempty" dynamodbav:"started_by,omitempty" json:"started_by,omitempty" diff:"started_by"`
	Status                   string                          `bson:"status,omitempty" dynamodbav:"status,omitempty" json:"status,omitempty" diff:"status"`
	Tags                     []*Tag                          `bson:"tags,omitempty" dynamodbav:"tags,omitempty" json:"tags,omitempty" diff:"tags"`
	TaskDefinition           string                          `bson:"task_definition,omitempty" dynamodbav:"task_definition,omitempty" json:"task_definition,omitempty" diff:"task_definition"`
	TaskSetArn               string                          `bson:"task_set_arn,omitempty" dynamodbav:"task_set_arn,omitempty" json:"task_set_arn,omitempty" diff:"task_set_arn"`
	UpdatedAt                *time.Time                      `bson:"updated_at,omitempty" dynamodbav:"updated_at,unixtime,omitempty" json:"updated_at,omitempty" diff:"updated_at"`
}

type Scale struct {
	Unit  string  `bson:"unit,omitempty" dynamodbav:"unit,omitempty" json:"unit,omitempty" diff:"unit"`
	Value float64 `bson:"value,omitempty" dynamodbav:"value,omitempty" json:"value,omitempty" diff:"value"`
}

type Attribute struct {
	Name       string `bson:"name,omitempty" dynamodbav:"name,omitempty" json:"name,omitempty" diff:"name"`
	TargetId   string `bson:"target_id,omitempty" dynamodbav:"target_id,omitempty" json:"target_id,omitempty" diff:"target_id"`
	TargetType string `bson:"target_type,omitempty" dynamodbav:"target_type,omitempty" json:"target_type,omitempty" diff:"target_type"`
	Value      string `bson:"value,omitempty" dynamodbav:"value,omitempty" json:"value,omitempty" diff:"value"`
}

type Container struct {
	ContainerArn      string              `bson:"container_arn,omitempty" dynamodbav:"container_arn,omitempty" json:"container_arn,omitempty" diff:"container_arn"`
	Cpu               string              `bson:"cpu,omitempty" dynamodbav:"cpu,omitempty" json:"cpu,omitempty" diff:"cpu"`
	ExitCode          int32               `bson:"exit_code,omitempty" dynamodbav:"exit_code,omitempty" json:"exit_code,omitempty" diff:"exit_code"`
	GpuIds            []string            `bson:"gpu_ids,omitempty" dynamodbav:"gpu_ids,omitempty" json:"gpu_ids,omitempty" diff:"gpu_ids"`
	HealthStatus      string              `bson:"health_status,omitempty" dynamodbav:"health_status,omitempty" json:"health_status,omitempty" diff:"health_status"`
	Image             string              `bson:"image,omitempty" dynamodbav:"image,omitempty" json:"image,omitempty" diff:"image"`
	ImageDigest       string              `bson:"image_digest,omitempty" dynamodbav:"image_digest,omitempty" json:"image_digest,omitempty" diff:"image_digest"`
	LastStatus        string              `bson:"last_status,omitempty" dynamodbav:"last_status,omitempty" json:"last_status,omitempty" diff:"last_status"`
	ManagedAgents     []*ManagedAgent     `bson:"managed_agents,omitempty" dynamodbav:"managed_agents,omitempty" json:"managed_agents,omitempty" diff:"managed_agents"`
	Memory            string              `bson:"memory,omitempty" dynamodbav:"memory,omitempty" json:"memory,omitempty" diff:"memory"`
	MemoryReservation string              `bson:"memory_reservation,omitempty" dynamodbav:"memory_reservation,omitempty" json:"memory_reservation,omitempty" diff:"memory_reservation"`
	Name              string              `bson:"name,omitempty" dynamodbav:"name,omitempty" json:"name,omitempty" diff:"name"`
	NetworkBindings   []*NetworkBinding   `bson:"network_bindings,omitempty" dynamodbav:"network_bindings,omitempty" json:"network_bindings,omitempty" diff:"network_bindings"`
	NetworkInterfaces []*NetworkInterface `bson:"network_interfaces,omitempty" dynamodbav:"network_interfaces,omitempty" json:"network_interfaces,omitempty" diff:"network_interfaces"`
	Reason            string              `bson:"reason,omitempty" dynamodbav:"reason,omitempty" json:"reason,omitempty" diff:"reason"`
	RuntimeId         string              `bson:"runtime_id,omitempty" dynamodbav:"runtime_id,omitempty" json:"runtime_id,omitempty" diff:"runtime_id"`
	TaskArn           string              `bson:"task_arn,omitempty" dynamodbav:"task_arn,omitempty" inventory_primary_key:"true" json:"task_arn,omitempty" diff:"task_arn,identifier"`
}

type ManagedAgent struct {
	LastStartedAt *time.Time `bson:"last_started_at,omitempty" dynamodbav:"last_started_at,unixtime,omitempty" json:"last_started_at,omitempty" diff:"last_started_at"`
	LastStatus    string     `bson:"last_status,omitempty" dynamodbav:"last_status,omitempty" json:"last_status,omitempty" diff:"last_status"`
	Name          string     `bson:"name,omitempty" dynamodbav:"name,omitempty" json:"name,omitempty" diff:"name"`
	Reason        string     `bson:"reason,omitempty" dynamodbav:"reason,omitempty" json:"reason,omitempty" diff:"reason"`
}

type NetworkBinding struct {
	BindIP        string `bson:"bind_ip,omitempty" dynamodbav:"bind_ip,omitempty" json:"bind_ip,omitempty" diff:"bind_ip"`
	ContainerPort int32  `bson:"container_port,omitempty" dynamodbav:"container_port,omitempty" json:"container_port,omitempty" diff:"container_port"`
	HostPort      int32  `bson:"host_port,omitempty" dynamodbav:"host_port,omitempty" json:"host_port,omitempty" diff:"host_port"`
	Protocol      string `bson:"protocol,omitempty" dynamodbav:"protocol,omitempty" json:"protocol,omitempty" diff:"protocol"`
}

type NetworkInterface struct {
	AttachmentId       string `bson:"attachment_id,omitempty" dynamodbav:"attachment_id,omitempty" json:"attachment_id,omitempty" diff:"attachment_id"`
	Ipv6Address        string `bson:"ipv6_address,omitempty" dynamodbav:"ipv6_address,omitempty" json:"ipv6_address,omitempty" diff:"ipv6_address"`
	PrivateIpv4Address string `bson:"private_ipv4_address,omitempty" dynamodbav:"private_ipv4_address,omitempty" json:"private_ipv4_address,omitempty" diff:"private_ipv4_address"`
}

type EphemeralStorage struct {
	SizeInGiB int32 `bson:"size_in_gi_b,omitempty" dynamodbav:"size_in_gi_b,omitempty" json:"size_in_gi_b,omitempty" diff:"size_in_gi_b"`
}

type InferenceAccelerator struct {
	DeviceName string `bson:"device_name,omitempty" dynamodbav:"device_name,omitempty" json:"device_name,omitempty" diff:"device_name"`
	DeviceType string `bson:"device_type,omitempty" dynamodbav:"device_type,omitempty" json:"device_type,omitempty" diff:"device_type"`
}

type TaskOverride struct {
	ContainerOverrides            []*ContainerOverride            `bson:"container_overrides,omitempty" dynamodbav:"container_overrides,omitempty" json:"container_overrides,omitempty" diff:"container_overrides"`
	Cpu                           string                          `bson:"cpu,omitempty" dynamodbav:"cpu,omitempty" json:"cpu,omitempty" diff:"cpu"`
	EphemeralStorage              *EphemeralStorage               `bson:"ephemeral_storage,omitempty" dynamodbav:"ephemeral_storage,omitempty" json:"ephemeral_storage,omitempty" diff:"ephemeral_storage"`
	ExecutionRoleArn              string                          `bson:"execution_role_arn,omitempty" dynamodbav:"execution_role_arn,omitempty" json:"execution_role_arn,omitempty" diff:"execution_role_arn"`
	InferenceAcceleratorOverrides []*InferenceAcceleratorOverride `bson:"inference_accelerator_overrides,omitempty" dynamodbav:"inference_accelerator_overrides,omitempty" json:"inference_accelerator_overrides,omitempty" diff:"inference_accelerator_overrides"`
	Memory                        string                          `bson:"memory,omitempty" dynamodbav:"memory,omitempty" json:"memory,omitempty" diff:"memory"`
	TaskRoleArn                   string                          `bson:"task_role_arn,omitempty" dynamodbav:"task_role_arn,omitempty" json:"task_role_arn,omitempty" diff:"task_role_arn"`
}

type ContainerOverride struct {
	Command              []string               `bson:"command,omitempty" dynamodbav:"command,omitempty" json:"command,omitempty" diff:"command"`
	Cpu                  int32                  `bson:"cpu,omitempty" dynamodbav:"cpu,omitempty" json:"cpu,omitempty" diff:"cpu"`
	Environment          []*KeyValuePair        `bson:"environment,omitempty" dynamodbav:"environment,omitempty" json:"environment,omitempty" diff:"environment"`
	EnvironmentFiles     []*EnvironmentFile     `bson:"environment_files,omitempty" dynamodbav:"environment_files,omitempty" json:"environment_files,omitempty" diff:"environment_files"`
	Memory               int32                  `bson:"memory,omitempty" dynamodbav:"memory,omitempty" json:"memory,omitempty" diff:"memory"`
	MemoryReservation    int32                  `bson:"memory_reservation,omitempty" dynamodbav:"memory_reservation,omitempty" json:"memory_reservation,omitempty" diff:"memory_reservation"`
	Name                 string                 `bson:"name,omitempty" dynamodbav:"name,omitempty" json:"name,omitempty" diff:"name"`
	ResourceRequirements []*ResourceRequirement `bson:"resource_requirements,omitempty" dynamodbav:"resource_requirements,omitempty" json:"resource_requirements,omitempty" diff:"resource_requirements"`
}

type EnvironmentFile struct {
	Type  string `bson:"type,omitempty" dynamodbav:"type,omitempty" json:"type,omitempty" diff:"type"`
	Value string `bson:"value,omitempty" dynamodbav:"value,omitempty" json:"value,omitempty" diff:"value"`
}

type ResourceRequirement struct {
	Type  string `bson:"type,omitempty" dynamodbav:"type,omitempty" json:"type,omitempty" diff:"type"`
	Value string `bson:"value,omitempty" dynamodbav:"value,omitempty" json:"value,omitempty" diff:"value"`
}

type InferenceAcceleratorOverride struct {
	DeviceName string `bson:"device_name,omitempty" dynamodbav:"device_name,omitempty" json:"device_name,omitempty" diff:"device_name"`
	DeviceType string `bson:"device_type,omitempty" dynamodbav:"device_type,omitempty" json:"device_type,omitempty" diff:"device_type"`
}
