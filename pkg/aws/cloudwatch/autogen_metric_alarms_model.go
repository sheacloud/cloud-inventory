//AUTOGENERATED CODE DO NOT EDIT
// This file is automatically generated from /internal/codegen/templates/aws_resource_file.tmpl
package cloudwatch

type MetricAlarm struct {
	ActionsEnabled                     bool               `bson:"actions_enabled,omitempty" ion:"actions_enabled" dynamodbav:"actions_enabled" parquet:"name=actions_enabled,type=BOOLEAN" json:"actions_enabled,omitempty" diff:"actions_enabled"`
	AlarmActions                       []string           `bson:"alarm_actions,omitempty" ion:"alarm_actions" dynamodbav:"alarm_actions,omitempty" parquet:"name=alarm_actions,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"alarm_actions,omitempty" diff:"alarm_actions"`
	AlarmArn                           string             `bson:"alarm_arn,omitempty" ion:"alarm_arn" dynamodbav:"alarm_arn,omitempty" parquet:"name=alarm_arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"alarm_arn,omitempty" diff:"alarm_arn,identifier"`
	AlarmConfigurationUpdatedTimestamp int64              `bson:"alarm_configuration_updated_timestamp,omitempty" ion:"alarm_configuration_updated_timestamp" dynamodbav:"alarm_configuration_updated_timestamp,omitempty" parquet:"name=alarm_configuration_updated_timestamp,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"alarm_configuration_updated_timestamp,omitempty" diff:"alarm_configuration_updated_timestamp"`
	AlarmDescription                   string             `bson:"alarm_description,omitempty" ion:"alarm_description" dynamodbav:"alarm_description,omitempty" parquet:"name=alarm_description,type=BYTE_ARRAY,convertedtype=UTF8" json:"alarm_description,omitempty" diff:"alarm_description"`
	AlarmName                          string             `bson:"alarm_name,omitempty" ion:"alarm_name" dynamodbav:"alarm_name,omitempty" parquet:"name=alarm_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"alarm_name,omitempty" diff:"alarm_name"`
	ComparisonOperator                 string             `bson:"comparison_operator,omitempty" ion:"comparison_operator" dynamodbav:"comparison_operator,omitempty" parquet:"name=comparison_operator,type=BYTE_ARRAY,convertedtype=UTF8" json:"comparison_operator,omitempty" diff:"comparison_operator"`
	DatapointsToAlarm                  int32              `bson:"datapoints_to_alarm,omitempty" ion:"datapoints_to_alarm" dynamodbav:"datapoints_to_alarm,omitempty" parquet:"name=datapoints_to_alarm,type=INT32" json:"datapoints_to_alarm,omitempty" diff:"datapoints_to_alarm"`
	Dimensions                         []*Dimension       `bson:"dimensions,omitempty" ion:"dimensions" dynamodbav:"dimensions,omitempty" parquet:"name=dimensions,type=MAP,convertedtype=LIST" json:"dimensions,omitempty" diff:"dimensions"`
	EvaluateLowSampleCountPercentile   string             `bson:"evaluate_low_sample_count_percentile,omitempty" ion:"evaluate_low_sample_count_percentile" dynamodbav:"evaluate_low_sample_count_percentile,omitempty" parquet:"name=evaluate_low_sample_count_percentile,type=BYTE_ARRAY,convertedtype=UTF8" json:"evaluate_low_sample_count_percentile,omitempty" diff:"evaluate_low_sample_count_percentile"`
	EvaluationPeriods                  int32              `bson:"evaluation_periods,omitempty" ion:"evaluation_periods" dynamodbav:"evaluation_periods,omitempty" parquet:"name=evaluation_periods,type=INT32" json:"evaluation_periods,omitempty" diff:"evaluation_periods"`
	ExtendedStatistic                  string             `bson:"extended_statistic,omitempty" ion:"extended_statistic" dynamodbav:"extended_statistic,omitempty" parquet:"name=extended_statistic,type=BYTE_ARRAY,convertedtype=UTF8" json:"extended_statistic,omitempty" diff:"extended_statistic"`
	InsufficientDataActions            []string           `bson:"insufficient_data_actions,omitempty" ion:"insufficient_data_actions" dynamodbav:"insufficient_data_actions,omitempty" parquet:"name=insufficient_data_actions,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"insufficient_data_actions,omitempty" diff:"insufficient_data_actions"`
	MetricName                         string             `bson:"metric_name,omitempty" ion:"metric_name" dynamodbav:"metric_name,omitempty" parquet:"name=metric_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"metric_name,omitempty" diff:"metric_name"`
	Metrics                            []*MetricDataQuery `bson:"metrics,omitempty" ion:"metrics" dynamodbav:"metrics,omitempty" parquet:"name=metrics,type=MAP,convertedtype=LIST" json:"metrics,omitempty" diff:"metrics"`
	Namespace                          string             `bson:"namespace,omitempty" ion:"namespace" dynamodbav:"namespace,omitempty" parquet:"name=namespace,type=BYTE_ARRAY,convertedtype=UTF8" json:"namespace,omitempty" diff:"namespace"`
	OKActions                          []string           `bson:"ok_actions,omitempty" ion:"ok_actions" dynamodbav:"ok_actions,omitempty" parquet:"name=ok_actions,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"ok_actions,omitempty" diff:"ok_actions"`
	Period                             int32              `bson:"period,omitempty" ion:"period" dynamodbav:"period,omitempty" parquet:"name=period,type=INT32" json:"period,omitempty" diff:"period"`
	StateReason                        string             `bson:"state_reason,omitempty" ion:"state_reason" dynamodbav:"state_reason,omitempty" parquet:"name=state_reason,type=BYTE_ARRAY,convertedtype=UTF8" json:"state_reason,omitempty" diff:"state_reason"`
	StateReasonData                    string             `bson:"state_reason_data,omitempty" ion:"state_reason_data" dynamodbav:"state_reason_data,omitempty" parquet:"name=state_reason_data,type=BYTE_ARRAY,convertedtype=UTF8" json:"state_reason_data,omitempty" diff:"state_reason_data"`
	StateUpdatedTimestamp              int64              `bson:"state_updated_timestamp,omitempty" ion:"state_updated_timestamp" dynamodbav:"state_updated_timestamp,omitempty" parquet:"name=state_updated_timestamp,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"state_updated_timestamp,omitempty" diff:"state_updated_timestamp"`
	StateValue                         string             `bson:"state_value,omitempty" ion:"state_value" dynamodbav:"state_value,omitempty" parquet:"name=state_value,type=BYTE_ARRAY,convertedtype=UTF8" json:"state_value,omitempty" diff:"state_value"`
	Statistic                          string             `bson:"statistic,omitempty" ion:"statistic" dynamodbav:"statistic,omitempty" parquet:"name=statistic,type=BYTE_ARRAY,convertedtype=UTF8" json:"statistic,omitempty" diff:"statistic"`
	Threshold                          float64            `bson:"threshold,omitempty" ion:"threshold" dynamodbav:"threshold,omitempty" parquet:"name=threshold,type=DOUBLE" json:"threshold,omitempty" diff:"threshold"`
	ThresholdMetricId                  string             `bson:"threshold_metric_id,omitempty" ion:"threshold_metric_id" dynamodbav:"threshold_metric_id,omitempty" parquet:"name=threshold_metric_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"threshold_metric_id,omitempty" diff:"threshold_metric_id"`
	TreatMissingData                   string             `bson:"treat_missing_data,omitempty" ion:"treat_missing_data" dynamodbav:"treat_missing_data,omitempty" parquet:"name=treat_missing_data,type=BYTE_ARRAY,convertedtype=UTF8" json:"treat_missing_data,omitempty" diff:"treat_missing_data"`
	Unit                               string             `bson:"unit,omitempty" ion:"unit" dynamodbav:"unit,omitempty" parquet:"name=unit,type=BYTE_ARRAY,convertedtype=UTF8" json:"unit,omitempty" diff:"unit"`
	AccountId                          string             `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region                             string             `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime                         int64              `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID                      string             `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
	Tags                               map[string]string  `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
}
