//AUTOGENERATED CODE DO NOT EDIT
package elasticloadbalancing

type LoadBalancer struct {
	AvailabilityZones         []string                    `bson:"availability_zones,omitempty" ion:"availability_zones" dynamodbav:"availability_zones,omitempty" parquet:"name=availability_zones,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"availability_zones,omitempty" diff:"availability_zones"`
	BackendServerDescriptions []*BackendServerDescription `bson:"backend_server_descriptions,omitempty" ion:"backend_server_descriptions" dynamodbav:"backend_server_descriptions,omitempty" parquet:"name=backend_server_descriptions,type=MAP,convertedtype=LIST" json:"backend_server_descriptions,omitempty" diff:"backend_server_descriptions"`
	CanonicalHostedZoneName   string                      `bson:"canonical_hosted_zone_name,omitempty" ion:"canonical_hosted_zone_name" dynamodbav:"canonical_hosted_zone_name,omitempty" parquet:"name=canonical_hosted_zone_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"canonical_hosted_zone_name,omitempty" diff:"canonical_hosted_zone_name"`
	CanonicalHostedZoneNameID string                      `bson:"canonical_hosted_zone_name_id,omitempty" ion:"canonical_hosted_zone_name_id" dynamodbav:"canonical_hosted_zone_name_id,omitempty" parquet:"name=canonical_hosted_zone_name_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"canonical_hosted_zone_name_id,omitempty" diff:"canonical_hosted_zone_name_id"`
	CreatedTime               int64                       `bson:"created_time,omitempty" ion:"created_time" dynamodbav:"created_time,omitempty" parquet:"name=created_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"created_time,omitempty" diff:"created_time"`
	DNSName                   string                      `bson:"dns_name,omitempty" ion:"dns_name" dynamodbav:"dns_name,omitempty" parquet:"name=dns_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"dns_name,omitempty" diff:"dns_name"`
	HealthCheck               *HealthCheck                `bson:"health_check,omitempty" ion:"health_check" dynamodbav:"health_check,omitempty" parquet:"name=health_check" json:"health_check,omitempty" diff:"health_check"`
	Instances                 []*Instance                 `bson:"instances,omitempty" ion:"instances" dynamodbav:"instances,omitempty" parquet:"name=instances,type=MAP,convertedtype=LIST" json:"instances,omitempty" diff:"instances"`
	ListenerDescriptions      []*ListenerDescription      `bson:"listener_descriptions,omitempty" ion:"listener_descriptions" dynamodbav:"listener_descriptions,omitempty" parquet:"name=listener_descriptions,type=MAP,convertedtype=LIST" json:"listener_descriptions,omitempty" diff:"listener_descriptions"`
	LoadBalancerName          string                      `bson:"load_balancer_name,omitempty" ion:"load_balancer_name" dynamodbav:"load_balancer_name,omitempty" parquet:"name=load_balancer_name,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"load_balancer_name,omitempty" diff:"load_balancer_name,identifier"`
	Policies                  *Policies                   `bson:"policies,omitempty" ion:"policies" dynamodbav:"policies,omitempty" parquet:"name=policies" json:"policies,omitempty" diff:"policies"`
	Scheme                    string                      `bson:"scheme,omitempty" ion:"scheme" dynamodbav:"scheme,omitempty" parquet:"name=scheme,type=BYTE_ARRAY,convertedtype=UTF8" json:"scheme,omitempty" diff:"scheme"`
	SecurityGroups            []string                    `bson:"security_groups,omitempty" ion:"security_groups" dynamodbav:"security_groups,omitempty" parquet:"name=security_groups,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"security_groups,omitempty" diff:"security_groups"`
	SourceSecurityGroup       *SourceSecurityGroup        `bson:"source_security_group,omitempty" ion:"source_security_group" dynamodbav:"source_security_group,omitempty" parquet:"name=source_security_group" json:"source_security_group,omitempty" diff:"source_security_group"`
	Subnets                   []string                    `bson:"subnets,omitempty" ion:"subnets" dynamodbav:"subnets,omitempty" parquet:"name=subnets,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"subnets,omitempty" diff:"subnets"`
	VPCId                     string                      `bson:"vpc_id,omitempty" ion:"vpc_id" dynamodbav:"vpc_id,omitempty" parquet:"name=vpc_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"vpc_id,omitempty" diff:"vpc_id"`
	AccountId                 string                      `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region                    string                      `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime                int64                       `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID             string                      `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
}
