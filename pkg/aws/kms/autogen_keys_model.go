//AUTOGENERATED CODE DO NOT EDIT
// This file is automatically generated from /internal/codegen/templates/aws_resource_file.tmpl
package kms

type Key struct {
	KeyId                       string                    `bson:"key_id,omitempty" ion:"key_id" dynamodbav:"key_id,omitempty" parquet:"name=key_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"key_id,omitempty" diff:"key_id"`
	AWSAccountId                string                    `bson:"aws_account_id,omitempty" ion:"aws_account_id" dynamodbav:"aws_account_id,omitempty" parquet:"name=aws_account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"aws_account_id,omitempty" diff:"aws_account_id"`
	Arn                         string                    `bson:"arn,omitempty" ion:"arn" dynamodbav:"arn,omitempty" parquet:"name=arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"arn,omitempty" diff:"arn,identifier"`
	CloudHsmClusterId           string                    `bson:"cloud_hsm_cluster_id,omitempty" ion:"cloud_hsm_cluster_id" dynamodbav:"cloud_hsm_cluster_id,omitempty" parquet:"name=cloud_hsm_cluster_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"cloud_hsm_cluster_id,omitempty" diff:"cloud_hsm_cluster_id"`
	CreationDate                int64                     `bson:"creation_date,omitempty" ion:"creation_date" dynamodbav:"creation_date,omitempty" parquet:"name=creation_date,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"creation_date,omitempty" diff:"creation_date"`
	CustomKeyStoreId            string                    `bson:"custom_key_store_id,omitempty" ion:"custom_key_store_id" dynamodbav:"custom_key_store_id,omitempty" parquet:"name=custom_key_store_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"custom_key_store_id,omitempty" diff:"custom_key_store_id"`
	CustomerMasterKeySpec       string                    `bson:"customer_master_key_spec,omitempty" ion:"customer_master_key_spec" dynamodbav:"customer_master_key_spec,omitempty" parquet:"name=customer_master_key_spec,type=BYTE_ARRAY,convertedtype=UTF8" json:"customer_master_key_spec,omitempty" diff:"customer_master_key_spec"`
	DeletionDate                int64                     `bson:"deletion_date,omitempty" ion:"deletion_date" dynamodbav:"deletion_date,omitempty" parquet:"name=deletion_date,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"deletion_date,omitempty" diff:"deletion_date"`
	Description                 string                    `bson:"description,omitempty" ion:"description" dynamodbav:"description,omitempty" parquet:"name=description,type=BYTE_ARRAY,convertedtype=UTF8" json:"description,omitempty" diff:"description"`
	Enabled                     bool                      `bson:"enabled,omitempty" ion:"enabled" dynamodbav:"enabled" parquet:"name=enabled,type=BOOLEAN" json:"enabled,omitempty" diff:"enabled"`
	EncryptionAlgorithms        []string                  `bson:"encryption_algorithms,omitempty" ion:"encryption_algorithms" dynamodbav:"encryption_algorithms,omitempty" parquet:"name=encryption_algorithms,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"encryption_algorithms,omitempty" diff:"encryption_algorithms"`
	ExpirationModel             string                    `bson:"expiration_model,omitempty" ion:"expiration_model" dynamodbav:"expiration_model,omitempty" parquet:"name=expiration_model,type=BYTE_ARRAY,convertedtype=UTF8" json:"expiration_model,omitempty" diff:"expiration_model"`
	KeyManager                  string                    `bson:"key_manager,omitempty" ion:"key_manager" dynamodbav:"key_manager,omitempty" parquet:"name=key_manager,type=BYTE_ARRAY,convertedtype=UTF8" json:"key_manager,omitempty" diff:"key_manager"`
	KeySpec                     string                    `bson:"key_spec,omitempty" ion:"key_spec" dynamodbav:"key_spec,omitempty" parquet:"name=key_spec,type=BYTE_ARRAY,convertedtype=UTF8" json:"key_spec,omitempty" diff:"key_spec"`
	KeyState                    string                    `bson:"key_state,omitempty" ion:"key_state" dynamodbav:"key_state,omitempty" parquet:"name=key_state,type=BYTE_ARRAY,convertedtype=UTF8" json:"key_state,omitempty" diff:"key_state"`
	KeyUsage                    string                    `bson:"key_usage,omitempty" ion:"key_usage" dynamodbav:"key_usage,omitempty" parquet:"name=key_usage,type=BYTE_ARRAY,convertedtype=UTF8" json:"key_usage,omitempty" diff:"key_usage"`
	MacAlgorithms               []string                  `bson:"mac_algorithms,omitempty" ion:"mac_algorithms" dynamodbav:"mac_algorithms,omitempty" parquet:"name=mac_algorithms,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"mac_algorithms,omitempty" diff:"mac_algorithms"`
	MultiRegion                 bool                      `bson:"multi_region,omitempty" ion:"multi_region" dynamodbav:"multi_region" parquet:"name=multi_region,type=BOOLEAN" json:"multi_region,omitempty" diff:"multi_region"`
	MultiRegionConfiguration    *MultiRegionConfiguration `bson:"multi_region_configuration,omitempty" ion:"multi_region_configuration" dynamodbav:"multi_region_configuration,omitempty" parquet:"name=multi_region_configuration" json:"multi_region_configuration,omitempty" diff:"multi_region_configuration"`
	Origin                      string                    `bson:"origin,omitempty" ion:"origin" dynamodbav:"origin,omitempty" parquet:"name=origin,type=BYTE_ARRAY,convertedtype=UTF8" json:"origin,omitempty" diff:"origin"`
	PendingDeletionWindowInDays int32                     `bson:"pending_deletion_window_in_days,omitempty" ion:"pending_deletion_window_in_days" dynamodbav:"pending_deletion_window_in_days,omitempty" parquet:"name=pending_deletion_window_in_days,type=INT32" json:"pending_deletion_window_in_days,omitempty" diff:"pending_deletion_window_in_days"`
	SigningAlgorithms           []string                  `bson:"signing_algorithms,omitempty" ion:"signing_algorithms" dynamodbav:"signing_algorithms,omitempty" parquet:"name=signing_algorithms,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"signing_algorithms,omitempty" diff:"signing_algorithms"`
	ValidTo                     int64                     `bson:"valid_to,omitempty" ion:"valid_to" dynamodbav:"valid_to,omitempty" parquet:"name=valid_to,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"valid_to,omitempty" diff:"valid_to"`
	AccountId                   string                    `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region                      string                    `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime                  int64                     `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID               string                    `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
	Tags                        map[string]string         `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
	Aliases                     []*AliasListEntry         `bson:"aliases,omitempty" ion:"aliases" dynamodbav:"aliases,omitempty" parquet:"name=aliases,type=MAP,convertedtype=LIST" json:"aliases,omitempty" diff:"aliases"`
}
