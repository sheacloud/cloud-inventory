//AUTOGENERATED CODE DO NOT EDIT
package elasticloadbalancingv2

type AvailabilityZone struct {
	LoadBalancerAddresses []*LoadBalancerAddress `bson:"load_balancer_addresses,omitempty" dynamodbav:"load_balancer_addresses,omitempty" json:"load_balancer_addresses,omitempty" diff:"load_balancer_addresses"`
	OutpostId             string                 `bson:"outpost_id,omitempty" dynamodbav:"outpost_id,omitempty" json:"outpost_id,omitempty" diff:"outpost_id"`
	SubnetId              string                 `bson:"subnet_id,omitempty" dynamodbav:"subnet_id,omitempty" json:"subnet_id,omitempty" diff:"subnet_id"`
	ZoneName              string                 `bson:"zone_name,omitempty" dynamodbav:"zone_name,omitempty" json:"zone_name,omitempty" diff:"zone_name"`
}

type LoadBalancerAddress struct {
	AllocationId       string `bson:"allocation_id,omitempty" dynamodbav:"allocation_id,omitempty" json:"allocation_id,omitempty" diff:"allocation_id"`
	IPv6Address        string `bson:"i_pv6_address,omitempty" dynamodbav:"i_pv6_address,omitempty" json:"i_pv6_address,omitempty" diff:"i_pv6_address"`
	IpAddress          string `bson:"ip_address,omitempty" dynamodbav:"ip_address,omitempty" json:"ip_address,omitempty" diff:"ip_address"`
	PrivateIPv4Address string `bson:"private_i_pv4_address,omitempty" dynamodbav:"private_i_pv4_address,omitempty" json:"private_i_pv4_address,omitempty" diff:"private_i_pv4_address"`
}

type LoadBalancerState struct {
	Code   string `bson:"code,omitempty" dynamodbav:"code,omitempty" json:"code,omitempty" diff:"code"`
	Reason string `bson:"reason,omitempty" dynamodbav:"reason,omitempty" json:"reason,omitempty" diff:"reason"`
}

type Listener struct {
	AlpnPolicy      []string       `bson:"alpn_policy,omitempty" dynamodbav:"alpn_policy,omitempty" json:"alpn_policy,omitempty" diff:"alpn_policy"`
	Certificates    []*Certificate `bson:"certificates,omitempty" dynamodbav:"certificates,omitempty" json:"certificates,omitempty" diff:"certificates"`
	DefaultActions  []*Action      `bson:"default_actions,omitempty" dynamodbav:"default_actions,omitempty" json:"default_actions,omitempty" diff:"default_actions"`
	ListenerArn     string         `bson:"listener_arn,omitempty" dynamodbav:"listener_arn,omitempty" json:"listener_arn,omitempty" diff:"listener_arn"`
	LoadBalancerArn string         `bson:"load_balancer_arn,omitempty" dynamodbav:"load_balancer_arn,omitempty" inventory_primary_key:"true" json:"load_balancer_arn,omitempty" diff:"load_balancer_arn,identifier"`
	Port            int32          `bson:"port,omitempty" dynamodbav:"port,omitempty" json:"port,omitempty" diff:"port"`
	Protocol        string         `bson:"protocol,omitempty" dynamodbav:"protocol,omitempty" json:"protocol,omitempty" diff:"protocol"`
	SslPolicy       string         `bson:"ssl_policy,omitempty" dynamodbav:"ssl_policy,omitempty" json:"ssl_policy,omitempty" diff:"ssl_policy"`
}

type Certificate struct {
	CertificateArn string `bson:"certificate_arn,omitempty" dynamodbav:"certificate_arn,omitempty" json:"certificate_arn,omitempty" diff:"certificate_arn"`
	IsDefault      bool   `bson:"is_default,omitempty" dynamodbav:"is_default" json:"is_default,omitempty" diff:"is_default"`
}

type Action struct {
	Type                      string                           `bson:"type,omitempty" dynamodbav:"type,omitempty" json:"type,omitempty" diff:"type"`
	AuthenticateCognitoConfig *AuthenticateCognitoActionConfig `bson:"authenticate_cognito_config,omitempty" dynamodbav:"authenticate_cognito_config,omitempty" json:"authenticate_cognito_config,omitempty" diff:"authenticate_cognito_config"`
	AuthenticateOidcConfig    *AuthenticateOidcActionConfig    `bson:"authenticate_oidc_config,omitempty" dynamodbav:"authenticate_oidc_config,omitempty" json:"authenticate_oidc_config,omitempty" diff:"authenticate_oidc_config"`
	FixedResponseConfig       *FixedResponseActionConfig       `bson:"fixed_response_config,omitempty" dynamodbav:"fixed_response_config,omitempty" json:"fixed_response_config,omitempty" diff:"fixed_response_config"`
	ForwardConfig             *ForwardActionConfig             `bson:"forward_config,omitempty" dynamodbav:"forward_config,omitempty" json:"forward_config,omitempty" diff:"forward_config"`
	Order                     int32                            `bson:"order,omitempty" dynamodbav:"order,omitempty" json:"order,omitempty" diff:"order"`
	RedirectConfig            *RedirectActionConfig            `bson:"redirect_config,omitempty" dynamodbav:"redirect_config,omitempty" json:"redirect_config,omitempty" diff:"redirect_config"`
	TargetGroupArn            string                           `bson:"target_group_arn,omitempty" dynamodbav:"target_group_arn,omitempty" json:"target_group_arn,omitempty" diff:"target_group_arn"`
}

type AuthenticateCognitoActionConfig struct {
	UserPoolArn                      string            `bson:"user_pool_arn,omitempty" dynamodbav:"user_pool_arn,omitempty" json:"user_pool_arn,omitempty" diff:"user_pool_arn"`
	UserPoolClientId                 string            `bson:"user_pool_client_id,omitempty" dynamodbav:"user_pool_client_id,omitempty" json:"user_pool_client_id,omitempty" diff:"user_pool_client_id"`
	UserPoolDomain                   string            `bson:"user_pool_domain,omitempty" dynamodbav:"user_pool_domain,omitempty" json:"user_pool_domain,omitempty" diff:"user_pool_domain"`
	AuthenticationRequestExtraParams map[string]string `bson:"authentication_request_extra_params,omitempty" dynamodbav:"authentication_request_extra_params,omitempty" json:"authentication_request_extra_params,omitempty" diff:"authentication_request_extra_params"`
	OnUnauthenticatedRequest         string            `bson:"on_unauthenticated_request,omitempty" dynamodbav:"on_unauthenticated_request,omitempty" json:"on_unauthenticated_request,omitempty" diff:"on_unauthenticated_request"`
	Scope                            string            `bson:"scope,omitempty" dynamodbav:"scope,omitempty" json:"scope,omitempty" diff:"scope"`
	SessionCookieName                string            `bson:"session_cookie_name,omitempty" dynamodbav:"session_cookie_name,omitempty" json:"session_cookie_name,omitempty" diff:"session_cookie_name"`
	SessionTimeout                   int64             `bson:"session_timeout,omitempty" dynamodbav:"session_timeout,omitempty" json:"session_timeout,omitempty" diff:"session_timeout"`
}

type AuthenticateOidcActionConfig struct {
	AuthorizationEndpoint            string            `bson:"authorization_endpoint,omitempty" dynamodbav:"authorization_endpoint,omitempty" json:"authorization_endpoint,omitempty" diff:"authorization_endpoint"`
	ClientId                         string            `bson:"client_id,omitempty" dynamodbav:"client_id,omitempty" json:"client_id,omitempty" diff:"client_id"`
	Issuer                           string            `bson:"issuer,omitempty" dynamodbav:"issuer,omitempty" json:"issuer,omitempty" diff:"issuer"`
	TokenEndpoint                    string            `bson:"token_endpoint,omitempty" dynamodbav:"token_endpoint,omitempty" json:"token_endpoint,omitempty" diff:"token_endpoint"`
	UserInfoEndpoint                 string            `bson:"user_info_endpoint,omitempty" dynamodbav:"user_info_endpoint,omitempty" json:"user_info_endpoint,omitempty" diff:"user_info_endpoint"`
	AuthenticationRequestExtraParams map[string]string `bson:"authentication_request_extra_params,omitempty" dynamodbav:"authentication_request_extra_params,omitempty" json:"authentication_request_extra_params,omitempty" diff:"authentication_request_extra_params"`
	ClientSecret                     string            `bson:"client_secret,omitempty" dynamodbav:"client_secret,omitempty" json:"client_secret,omitempty" diff:"client_secret"`
	OnUnauthenticatedRequest         string            `bson:"on_unauthenticated_request,omitempty" dynamodbav:"on_unauthenticated_request,omitempty" json:"on_unauthenticated_request,omitempty" diff:"on_unauthenticated_request"`
	Scope                            string            `bson:"scope,omitempty" dynamodbav:"scope,omitempty" json:"scope,omitempty" diff:"scope"`
	SessionCookieName                string            `bson:"session_cookie_name,omitempty" dynamodbav:"session_cookie_name,omitempty" json:"session_cookie_name,omitempty" diff:"session_cookie_name"`
	SessionTimeout                   int64             `bson:"session_timeout,omitempty" dynamodbav:"session_timeout,omitempty" json:"session_timeout,omitempty" diff:"session_timeout"`
	UseExistingClientSecret          bool              `bson:"use_existing_client_secret,omitempty" dynamodbav:"use_existing_client_secret" json:"use_existing_client_secret,omitempty" diff:"use_existing_client_secret"`
}

type FixedResponseActionConfig struct {
	StatusCode  string `bson:"status_code,omitempty" dynamodbav:"status_code,omitempty" json:"status_code,omitempty" diff:"status_code"`
	ContentType string `bson:"content_type,omitempty" dynamodbav:"content_type,omitempty" json:"content_type,omitempty" diff:"content_type"`
	MessageBody string `bson:"message_body,omitempty" dynamodbav:"message_body,omitempty" json:"message_body,omitempty" diff:"message_body"`
}

type ForwardActionConfig struct {
	TargetGroupStickinessConfig *TargetGroupStickinessConfig `bson:"target_group_stickiness_config,omitempty" dynamodbav:"target_group_stickiness_config,omitempty" json:"target_group_stickiness_config,omitempty" diff:"target_group_stickiness_config"`
	TargetGroups                []*TargetGroupTuple          `bson:"target_groups,omitempty" dynamodbav:"target_groups,omitempty" json:"target_groups,omitempty" diff:"target_groups"`
}

type TargetGroupStickinessConfig struct {
	DurationSeconds int32 `bson:"duration_seconds,omitempty" dynamodbav:"duration_seconds,omitempty" json:"duration_seconds,omitempty" diff:"duration_seconds"`
	Enabled         bool  `bson:"enabled,omitempty" dynamodbav:"enabled" json:"enabled,omitempty" diff:"enabled"`
}

type TargetGroupTuple struct {
	TargetGroupArn string `bson:"target_group_arn,omitempty" dynamodbav:"target_group_arn,omitempty" json:"target_group_arn,omitempty" diff:"target_group_arn"`
	Weight         int32  `bson:"weight,omitempty" dynamodbav:"weight,omitempty" json:"weight,omitempty" diff:"weight"`
}

type RedirectActionConfig struct {
	StatusCode string `bson:"status_code,omitempty" dynamodbav:"status_code,omitempty" json:"status_code,omitempty" diff:"status_code"`
	Host       string `bson:"host,omitempty" dynamodbav:"host,omitempty" json:"host,omitempty" diff:"host"`
	Path       string `bson:"path,omitempty" dynamodbav:"path,omitempty" json:"path,omitempty" diff:"path"`
	Port       string `bson:"port,omitempty" dynamodbav:"port,omitempty" json:"port,omitempty" diff:"port"`
	Protocol   string `bson:"protocol,omitempty" dynamodbav:"protocol,omitempty" json:"protocol,omitempty" diff:"protocol"`
	Query      string `bson:"query,omitempty" dynamodbav:"query,omitempty" json:"query,omitempty" diff:"query"`
}

type Matcher struct {
	GrpcCode string `bson:"grpc_code,omitempty" dynamodbav:"grpc_code,omitempty" json:"grpc_code,omitempty" diff:"grpc_code"`
	HttpCode string `bson:"http_code,omitempty" dynamodbav:"http_code,omitempty" json:"http_code,omitempty" diff:"http_code"`
}

type TargetHealthDescription struct {
	HealthCheckPort string             `bson:"health_check_port,omitempty" dynamodbav:"health_check_port,omitempty" json:"health_check_port,omitempty" diff:"health_check_port"`
	Target          *TargetDescription `bson:"target,omitempty" dynamodbav:"target,omitempty" json:"target,omitempty" diff:"target"`
	TargetHealth    *TargetHealth      `bson:"target_health,omitempty" dynamodbav:"target_health,omitempty" json:"target_health,omitempty" diff:"target_health"`
}

type TargetDescription struct {
	Id               string `bson:"id,omitempty" dynamodbav:"id,omitempty" json:"id,omitempty" diff:"id"`
	AvailabilityZone string `bson:"availability_zone,omitempty" dynamodbav:"availability_zone,omitempty" json:"availability_zone,omitempty" diff:"availability_zone"`
	Port             int32  `bson:"port,omitempty" dynamodbav:"port,omitempty" json:"port,omitempty" diff:"port"`
}

type TargetHealth struct {
	Description string `bson:"description,omitempty" dynamodbav:"description,omitempty" json:"description,omitempty" diff:"description"`
	Reason      string `bson:"reason,omitempty" dynamodbav:"reason,omitempty" json:"reason,omitempty" diff:"reason"`
	State       string `bson:"state,omitempty" dynamodbav:"state,omitempty" json:"state,omitempty" diff:"state"`
}
