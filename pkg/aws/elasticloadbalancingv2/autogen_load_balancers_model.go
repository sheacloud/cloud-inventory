//AUTOGENERATED CODE DO NOT EDIT
package elasticloadbalancingv2

type LoadBalancer struct {
	AvailabilityZones     []*AvailabilityZone `bson:"availability_zones,omitempty" ion:"availability_zones" dynamodbav:"availability_zones,omitempty" parquet:"name=availability_zones,type=MAP,convertedtype=LIST" json:"availability_zones,omitempty" diff:"availability_zones"`
	CanonicalHostedZoneId string              `bson:"canonical_hosted_zone_id,omitempty" ion:"canonical_hosted_zone_id" dynamodbav:"canonical_hosted_zone_id,omitempty" parquet:"name=canonical_hosted_zone_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"canonical_hosted_zone_id,omitempty" diff:"canonical_hosted_zone_id"`
	CreatedTime           int64               `bson:"created_time,omitempty" ion:"created_time" dynamodbav:"created_time,omitempty" parquet:"name=created_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"created_time,omitempty" diff:"created_time"`
	CustomerOwnedIpv4Pool string              `bson:"customer_owned_ipv4_pool,omitempty" ion:"customer_owned_ipv4_pool" dynamodbav:"customer_owned_ipv4_pool,omitempty" parquet:"name=customer_owned_ipv4_pool,type=BYTE_ARRAY,convertedtype=UTF8" json:"customer_owned_ipv4_pool,omitempty" diff:"customer_owned_ipv4_pool"`
	DNSName               string              `bson:"dns_name,omitempty" ion:"dns_name" dynamodbav:"dns_name,omitempty" parquet:"name=dns_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"dns_name,omitempty" diff:"dns_name"`
	IpAddressType         string              `bson:"ip_address_type,omitempty" ion:"ip_address_type" dynamodbav:"ip_address_type,omitempty" parquet:"name=ip_address_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"ip_address_type,omitempty" diff:"ip_address_type"`
	LoadBalancerArn       string              `bson:"load_balancer_arn,omitempty" ion:"load_balancer_arn" dynamodbav:"load_balancer_arn,omitempty" parquet:"name=load_balancer_arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"load_balancer_arn,omitempty" diff:"load_balancer_arn,identifier"`
	LoadBalancerName      string              `bson:"load_balancer_name,omitempty" ion:"load_balancer_name" dynamodbav:"load_balancer_name,omitempty" parquet:"name=load_balancer_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"load_balancer_name,omitempty" diff:"load_balancer_name"`
	Scheme                string              `bson:"scheme,omitempty" ion:"scheme" dynamodbav:"scheme,omitempty" parquet:"name=scheme,type=BYTE_ARRAY,convertedtype=UTF8" json:"scheme,omitempty" diff:"scheme"`
	SecurityGroups        []string            `bson:"security_groups,omitempty" ion:"security_groups" dynamodbav:"security_groups,omitempty" parquet:"name=security_groups,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"security_groups,omitempty" diff:"security_groups"`
	State                 *LoadBalancerState  `bson:"state,omitempty" ion:"state" dynamodbav:"state,omitempty" parquet:"name=state" json:"state,omitempty" diff:"state"`
	Type                  string              `bson:"type,omitempty" ion:"type" dynamodbav:"type,omitempty" parquet:"name=type,type=BYTE_ARRAY,convertedtype=UTF8" json:"type,omitempty" diff:"type"`
	VpcId                 string              `bson:"vpc_id,omitempty" ion:"vpc_id" dynamodbav:"vpc_id,omitempty" parquet:"name=vpc_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"vpc_id,omitempty" diff:"vpc_id"`
	AccountId             string              `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region                string              `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime            int64               `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID         string              `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
	Tags                  map[string]string   `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
	Listeners             []*Listener         `bson:"listeners,omitempty" ion:"listeners" dynamodbav:"listeners,omitempty" parquet:"name=listeners,type=MAP,convertedtype=LIST" json:"listeners,omitempty" diff:"listeners"`
}
