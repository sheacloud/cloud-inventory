//AUTOGENERATED CODE DO NOT EDIT
// This file is automatically generated from /internal/codegen/templates/aws_resource_file.tmpl
package ecr

type Repository struct {
	CreatedAt                  int64                       `bson:"created_at,omitempty" ion:"created_at" dynamodbav:"created_at,omitempty" parquet:"name=created_at,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"created_at,omitempty" diff:"created_at"`
	EncryptionConfiguration    *EncryptionConfiguration    `bson:"encryption_configuration,omitempty" ion:"encryption_configuration" dynamodbav:"encryption_configuration,omitempty" parquet:"name=encryption_configuration" json:"encryption_configuration,omitempty" diff:"encryption_configuration"`
	ImageScanningConfiguration *ImageScanningConfiguration `bson:"image_scanning_configuration,omitempty" ion:"image_scanning_configuration" dynamodbav:"image_scanning_configuration,omitempty" parquet:"name=image_scanning_configuration" json:"image_scanning_configuration,omitempty" diff:"image_scanning_configuration"`
	ImageTagMutability         string                      `bson:"image_tag_mutability,omitempty" ion:"image_tag_mutability" dynamodbav:"image_tag_mutability,omitempty" parquet:"name=image_tag_mutability,type=BYTE_ARRAY,convertedtype=UTF8" json:"image_tag_mutability,omitempty" diff:"image_tag_mutability"`
	RegistryId                 string                      `bson:"registry_id,omitempty" ion:"registry_id" dynamodbav:"registry_id,omitempty" parquet:"name=registry_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"registry_id,omitempty" diff:"registry_id"`
	RepositoryArn              string                      `bson:"repository_arn,omitempty" ion:"repository_arn" dynamodbav:"repository_arn,omitempty" parquet:"name=repository_arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"repository_arn,omitempty" diff:"repository_arn,identifier"`
	RepositoryName             string                      `bson:"repository_name,omitempty" ion:"repository_name" dynamodbav:"repository_name,omitempty" parquet:"name=repository_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"repository_name,omitempty" diff:"repository_name"`
	RepositoryUri              string                      `bson:"repository_uri,omitempty" ion:"repository_uri" dynamodbav:"repository_uri,omitempty" parquet:"name=repository_uri,type=BYTE_ARRAY,convertedtype=UTF8" json:"repository_uri,omitempty" diff:"repository_uri"`
	AccountId                  string                      `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region                     string                      `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime                 int64                       `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID              string                      `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
	Tags                       map[string]string           `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
}
