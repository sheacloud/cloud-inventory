//AUTOGENERATED CODE DO NOT EDIT
// This file is automatically generated from /internal/codegen/templates/aws_resource_file.tmpl
package lambda

type Function struct {
	Architectures              []string               `bson:"architectures,omitempty" ion:"architectures" dynamodbav:"architectures,omitempty" parquet:"name=architectures,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"architectures,omitempty" diff:"architectures"`
	CodeSha256                 string                 `bson:"code_sha256,omitempty" ion:"code_sha256" dynamodbav:"code_sha256,omitempty" parquet:"name=code_sha256,type=BYTE_ARRAY,convertedtype=UTF8" json:"code_sha256,omitempty" diff:"code_sha256"`
	CodeSize                   int64                  `bson:"code_size,omitempty" ion:"code_size" dynamodbav:"code_size,omitempty" parquet:"name=code_size,type=INT64" json:"code_size,omitempty" diff:"code_size"`
	DeadLetterConfig           *DeadLetterConfig      `bson:"dead_letter_config,omitempty" ion:"dead_letter_config" dynamodbav:"dead_letter_config,omitempty" parquet:"name=dead_letter_config" json:"dead_letter_config,omitempty" diff:"dead_letter_config"`
	Description                string                 `bson:"description,omitempty" ion:"description" dynamodbav:"description,omitempty" parquet:"name=description,type=BYTE_ARRAY,convertedtype=UTF8" json:"description,omitempty" diff:"description"`
	EphemeralStorage           *EphemeralStorage      `bson:"ephemeral_storage,omitempty" ion:"ephemeral_storage" dynamodbav:"ephemeral_storage,omitempty" parquet:"name=ephemeral_storage" json:"ephemeral_storage,omitempty" diff:"ephemeral_storage"`
	FileSystemConfigs          []*FileSystemConfig    `bson:"file_system_configs,omitempty" ion:"file_system_configs" dynamodbav:"file_system_configs,omitempty" parquet:"name=file_system_configs,type=MAP,convertedtype=LIST" json:"file_system_configs,omitempty" diff:"file_system_configs"`
	FunctionArn                string                 `bson:"function_arn,omitempty" ion:"function_arn" dynamodbav:"function_arn,omitempty" parquet:"name=function_arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"function_arn,omitempty" diff:"function_arn,identifier"`
	FunctionName               string                 `bson:"function_name,omitempty" ion:"function_name" dynamodbav:"function_name,omitempty" parquet:"name=function_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"function_name,omitempty" diff:"function_name"`
	Handler                    string                 `bson:"handler,omitempty" ion:"handler" dynamodbav:"handler,omitempty" parquet:"name=handler,type=BYTE_ARRAY,convertedtype=UTF8" json:"handler,omitempty" diff:"handler"`
	ImageConfigResponse        *ImageConfigResponse   `bson:"image_config_response,omitempty" ion:"image_config_response" dynamodbav:"image_config_response,omitempty" parquet:"name=image_config_response" json:"image_config_response,omitempty" diff:"image_config_response"`
	KMSKeyArn                  string                 `bson:"kms_key_arn,omitempty" ion:"kms_key_arn" dynamodbav:"kms_key_arn,omitempty" parquet:"name=kms_key_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"kms_key_arn,omitempty" diff:"kms_key_arn"`
	LastModified               string                 `bson:"last_modified,omitempty" ion:"last_modified" dynamodbav:"last_modified,omitempty" parquet:"name=last_modified,type=BYTE_ARRAY,convertedtype=UTF8" json:"last_modified,omitempty" diff:"last_modified"`
	LastUpdateStatus           string                 `bson:"last_update_status,omitempty" ion:"last_update_status" dynamodbav:"last_update_status,omitempty" parquet:"name=last_update_status,type=BYTE_ARRAY,convertedtype=UTF8" json:"last_update_status,omitempty" diff:"last_update_status"`
	LastUpdateStatusReason     string                 `bson:"last_update_status_reason,omitempty" ion:"last_update_status_reason" dynamodbav:"last_update_status_reason,omitempty" parquet:"name=last_update_status_reason,type=BYTE_ARRAY,convertedtype=UTF8" json:"last_update_status_reason,omitempty" diff:"last_update_status_reason"`
	LastUpdateStatusReasonCode string                 `bson:"last_update_status_reason_code,omitempty" ion:"last_update_status_reason_code" dynamodbav:"last_update_status_reason_code,omitempty" parquet:"name=last_update_status_reason_code,type=BYTE_ARRAY,convertedtype=UTF8" json:"last_update_status_reason_code,omitempty" diff:"last_update_status_reason_code"`
	Layers                     []*Layer               `bson:"layers,omitempty" ion:"layers" dynamodbav:"layers,omitempty" parquet:"name=layers,type=MAP,convertedtype=LIST" json:"layers,omitempty" diff:"layers"`
	MasterArn                  string                 `bson:"master_arn,omitempty" ion:"master_arn" dynamodbav:"master_arn,omitempty" parquet:"name=master_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"master_arn,omitempty" diff:"master_arn"`
	MemorySize                 int32                  `bson:"memory_size,omitempty" ion:"memory_size" dynamodbav:"memory_size,omitempty" parquet:"name=memory_size,type=INT32" json:"memory_size,omitempty" diff:"memory_size"`
	PackageType                string                 `bson:"package_type,omitempty" ion:"package_type" dynamodbav:"package_type,omitempty" parquet:"name=package_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"package_type,omitempty" diff:"package_type"`
	RevisionId                 string                 `bson:"revision_id,omitempty" ion:"revision_id" dynamodbav:"revision_id,omitempty" parquet:"name=revision_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"revision_id,omitempty" diff:"revision_id"`
	Role                       string                 `bson:"role,omitempty" ion:"role" dynamodbav:"role,omitempty" parquet:"name=role,type=BYTE_ARRAY,convertedtype=UTF8" json:"role,omitempty" diff:"role"`
	Runtime                    string                 `bson:"runtime,omitempty" ion:"runtime" dynamodbav:"runtime,omitempty" parquet:"name=runtime,type=BYTE_ARRAY,convertedtype=UTF8" json:"runtime,omitempty" diff:"runtime"`
	SigningJobArn              string                 `bson:"signing_job_arn,omitempty" ion:"signing_job_arn" dynamodbav:"signing_job_arn,omitempty" parquet:"name=signing_job_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"signing_job_arn,omitempty" diff:"signing_job_arn"`
	SigningProfileVersionArn   string                 `bson:"signing_profile_version_arn,omitempty" ion:"signing_profile_version_arn" dynamodbav:"signing_profile_version_arn,omitempty" parquet:"name=signing_profile_version_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"signing_profile_version_arn,omitempty" diff:"signing_profile_version_arn"`
	State                      string                 `bson:"state,omitempty" ion:"state" dynamodbav:"state,omitempty" parquet:"name=state,type=BYTE_ARRAY,convertedtype=UTF8" json:"state,omitempty" diff:"state"`
	StateReason                string                 `bson:"state_reason,omitempty" ion:"state_reason" dynamodbav:"state_reason,omitempty" parquet:"name=state_reason,type=BYTE_ARRAY,convertedtype=UTF8" json:"state_reason,omitempty" diff:"state_reason"`
	StateReasonCode            string                 `bson:"state_reason_code,omitempty" ion:"state_reason_code" dynamodbav:"state_reason_code,omitempty" parquet:"name=state_reason_code,type=BYTE_ARRAY,convertedtype=UTF8" json:"state_reason_code,omitempty" diff:"state_reason_code"`
	Timeout                    int32                  `bson:"timeout,omitempty" ion:"timeout" dynamodbav:"timeout,omitempty" parquet:"name=timeout,type=INT32" json:"timeout,omitempty" diff:"timeout"`
	TracingConfig              *TracingConfigResponse `bson:"tracing_config,omitempty" ion:"tracing_config" dynamodbav:"tracing_config,omitempty" parquet:"name=tracing_config" json:"tracing_config,omitempty" diff:"tracing_config"`
	Version                    string                 `bson:"version,omitempty" ion:"version" dynamodbav:"version,omitempty" parquet:"name=version,type=BYTE_ARRAY,convertedtype=UTF8" json:"version,omitempty" diff:"version"`
	VpcConfig                  *VpcConfigResponse     `bson:"vpc_config,omitempty" ion:"vpc_config" dynamodbav:"vpc_config,omitempty" parquet:"name=vpc_config" json:"vpc_config,omitempty" diff:"vpc_config"`
	AccountId                  string                 `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region                     string                 `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime                 int64                  `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID              string                 `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
}
