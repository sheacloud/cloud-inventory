//AUTOGENERATED CODE DO NOT EDIT
package iam

type Policy struct {
	Arn                           string            `bson:"arn,omitempty" ion:"arn" dynamodbav:"arn,omitempty" parquet:"name=arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"arn,omitempty" diff:"arn"`
	AttachmentCount               int32             `bson:"attachment_count,omitempty" ion:"attachment_count" dynamodbav:"attachment_count,omitempty" parquet:"name=attachment_count,type=INT32" json:"attachment_count,omitempty" diff:"attachment_count"`
	CreateDate                    int64             `bson:"create_date,omitempty" ion:"create_date" dynamodbav:"create_date,omitempty" parquet:"name=create_date,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"create_date,omitempty" diff:"create_date"`
	DefaultVersionId              string            `bson:"default_version_id,omitempty" ion:"default_version_id" dynamodbav:"default_version_id,omitempty" parquet:"name=default_version_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"default_version_id,omitempty" diff:"default_version_id"`
	Description                   string            `bson:"description,omitempty" ion:"description" dynamodbav:"description,omitempty" parquet:"name=description,type=BYTE_ARRAY,convertedtype=UTF8" json:"description,omitempty" diff:"description"`
	IsAttachable                  bool              `bson:"is_attachable,omitempty" ion:"is_attachable" dynamodbav:"is_attachable" parquet:"name=is_attachable,type=BOOLEAN" json:"is_attachable,omitempty" diff:"is_attachable"`
	Path                          string            `bson:"path,omitempty" ion:"path" dynamodbav:"path,omitempty" parquet:"name=path,type=BYTE_ARRAY,convertedtype=UTF8" json:"path,omitempty" diff:"path"`
	PermissionsBoundaryUsageCount int32             `bson:"permissions_boundary_usage_count,omitempty" ion:"permissions_boundary_usage_count" dynamodbav:"permissions_boundary_usage_count,omitempty" parquet:"name=permissions_boundary_usage_count,type=INT32" json:"permissions_boundary_usage_count,omitempty" diff:"permissions_boundary_usage_count"`
	PolicyId                      string            `bson:"policy_id,omitempty" ion:"policy_id" dynamodbav:"policy_id,omitempty" parquet:"name=policy_id,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"policy_id,omitempty" diff:"policy_id,identifier"`
	PolicyName                    string            `bson:"policy_name,omitempty" ion:"policy_name" dynamodbav:"policy_name,omitempty" parquet:"name=policy_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"policy_name,omitempty" diff:"policy_name"`
	Tags                          map[string]string `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
	UpdateDate                    int64             `bson:"update_date,omitempty" ion:"update_date" dynamodbav:"update_date,omitempty" parquet:"name=update_date,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"update_date,omitempty" diff:"update_date"`
	AccountId                     string            `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region                        string            `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime                    int64             `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID                 string            `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
}
