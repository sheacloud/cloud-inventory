//AUTOGENERATED CODE DO NOT EDIT
// This file is automatically generated from /internal/codegen/templates/aws_resource_file.tmpl
package efs

type FileSystem struct {
	CreationTime                 int64             `bson:"creation_time,omitempty" ion:"creation_time" dynamodbav:"creation_time,omitempty" parquet:"name=creation_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"creation_time,omitempty" diff:"creation_time"`
	CreationToken                string            `bson:"creation_token,omitempty" ion:"creation_token" dynamodbav:"creation_token,omitempty" parquet:"name=creation_token,type=BYTE_ARRAY,convertedtype=UTF8" json:"creation_token,omitempty" diff:"creation_token"`
	FileSystemId                 string            `bson:"file_system_id,omitempty" ion:"file_system_id" dynamodbav:"file_system_id,omitempty" parquet:"name=file_system_id,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"file_system_id,omitempty" diff:"file_system_id,identifier"`
	LifeCycleState               string            `bson:"life_cycle_state,omitempty" ion:"life_cycle_state" dynamodbav:"life_cycle_state,omitempty" parquet:"name=life_cycle_state,type=BYTE_ARRAY,convertedtype=UTF8" json:"life_cycle_state,omitempty" diff:"life_cycle_state"`
	NumberOfMountTargets         int32             `bson:"number_of_mount_targets,omitempty" ion:"number_of_mount_targets" dynamodbav:"number_of_mount_targets,omitempty" parquet:"name=number_of_mount_targets,type=INT32" json:"number_of_mount_targets,omitempty" diff:"number_of_mount_targets"`
	OwnerId                      string            `bson:"owner_id,omitempty" ion:"owner_id" dynamodbav:"owner_id,omitempty" parquet:"name=owner_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"owner_id,omitempty" diff:"owner_id"`
	PerformanceMode              string            `bson:"performance_mode,omitempty" ion:"performance_mode" dynamodbav:"performance_mode,omitempty" parquet:"name=performance_mode,type=BYTE_ARRAY,convertedtype=UTF8" json:"performance_mode,omitempty" diff:"performance_mode"`
	SizeInBytes                  *FileSystemSize   `bson:"size_in_bytes,omitempty" ion:"size_in_bytes" dynamodbav:"size_in_bytes,omitempty" parquet:"name=size_in_bytes" json:"size_in_bytes,omitempty" diff:"size_in_bytes"`
	Tags                         map[string]string `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
	AvailabilityZoneId           string            `bson:"availability_zone_id,omitempty" ion:"availability_zone_id" dynamodbav:"availability_zone_id,omitempty" parquet:"name=availability_zone_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"availability_zone_id,omitempty" diff:"availability_zone_id"`
	AvailabilityZoneName         string            `bson:"availability_zone_name,omitempty" ion:"availability_zone_name" dynamodbav:"availability_zone_name,omitempty" parquet:"name=availability_zone_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"availability_zone_name,omitempty" diff:"availability_zone_name"`
	Encrypted                    bool              `bson:"encrypted,omitempty" ion:"encrypted" dynamodbav:"encrypted" parquet:"name=encrypted,type=BOOLEAN" json:"encrypted,omitempty" diff:"encrypted"`
	FileSystemArn                string            `bson:"file_system_arn,omitempty" ion:"file_system_arn" dynamodbav:"file_system_arn,omitempty" parquet:"name=file_system_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"file_system_arn,omitempty" diff:"file_system_arn"`
	KmsKeyId                     string            `bson:"kms_key_id,omitempty" ion:"kms_key_id" dynamodbav:"kms_key_id,omitempty" parquet:"name=kms_key_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"kms_key_id,omitempty" diff:"kms_key_id"`
	Name                         string            `bson:"name,omitempty" ion:"name" dynamodbav:"name,omitempty" parquet:"name=name,type=BYTE_ARRAY,convertedtype=UTF8" json:"name,omitempty" diff:"name"`
	ProvisionedThroughputInMibps float64           `bson:"provisioned_throughput_in_mibps,omitempty" ion:"provisioned_throughput_in_mibps" dynamodbav:"provisioned_throughput_in_mibps,omitempty" parquet:"name=provisioned_throughput_in_mibps,type=DOUBLE" json:"provisioned_throughput_in_mibps,omitempty" diff:"provisioned_throughput_in_mibps"`
	ThroughputMode               string            `bson:"throughput_mode,omitempty" ion:"throughput_mode" dynamodbav:"throughput_mode,omitempty" parquet:"name=throughput_mode,type=BYTE_ARRAY,convertedtype=UTF8" json:"throughput_mode,omitempty" diff:"throughput_mode"`
	AccountId                    string            `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region                       string            `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime                   int64             `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID                string            `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
}
