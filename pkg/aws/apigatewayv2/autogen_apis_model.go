//AUTOGENERATED CODE DO NOT EDIT
package apigatewayv2

type Api struct {
	Name                      string            `bson:"name,omitempty" ion:"name" dynamodbav:"name,omitempty" parquet:"name=name,type=BYTE_ARRAY,convertedtype=UTF8" json:"name,omitempty" diff:"name"`
	ProtocolType              string            `bson:"protocol_type,omitempty" ion:"protocol_type" dynamodbav:"protocol_type,omitempty" parquet:"name=protocol_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"protocol_type,omitempty" diff:"protocol_type"`
	RouteSelectionExpression  string            `bson:"route_selection_expression,omitempty" ion:"route_selection_expression" dynamodbav:"route_selection_expression,omitempty" parquet:"name=route_selection_expression,type=BYTE_ARRAY,convertedtype=UTF8" json:"route_selection_expression,omitempty" diff:"route_selection_expression"`
	ApiEndpoint               string            `bson:"api_endpoint,omitempty" ion:"api_endpoint" dynamodbav:"api_endpoint,omitempty" parquet:"name=api_endpoint,type=BYTE_ARRAY,convertedtype=UTF8" json:"api_endpoint,omitempty" diff:"api_endpoint"`
	ApiGatewayManaged         bool              `bson:"api_gateway_managed,omitempty" ion:"api_gateway_managed" dynamodbav:"api_gateway_managed" parquet:"name=api_gateway_managed,type=BOOLEAN" json:"api_gateway_managed,omitempty" diff:"api_gateway_managed"`
	ApiId                     string            `bson:"api_id,omitempty" ion:"api_id" dynamodbav:"api_id,omitempty" parquet:"name=api_id,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"api_id,omitempty" diff:"api_id,identifier"`
	ApiKeySelectionExpression string            `bson:"api_key_selection_expression,omitempty" ion:"api_key_selection_expression" dynamodbav:"api_key_selection_expression,omitempty" parquet:"name=api_key_selection_expression,type=BYTE_ARRAY,convertedtype=UTF8" json:"api_key_selection_expression,omitempty" diff:"api_key_selection_expression"`
	CorsConfiguration         *Cors             `bson:"cors_configuration,omitempty" ion:"cors_configuration" dynamodbav:"cors_configuration,omitempty" parquet:"name=cors_configuration" json:"cors_configuration,omitempty" diff:"cors_configuration"`
	CreatedDate               int64             `bson:"created_date,omitempty" ion:"created_date" dynamodbav:"created_date,omitempty" parquet:"name=created_date,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"created_date,omitempty" diff:"created_date"`
	Description               string            `bson:"description,omitempty" ion:"description" dynamodbav:"description,omitempty" parquet:"name=description,type=BYTE_ARRAY,convertedtype=UTF8" json:"description,omitempty" diff:"description"`
	DisableExecuteApiEndpoint bool              `bson:"disable_execute_api_endpoint,omitempty" ion:"disable_execute_api_endpoint" dynamodbav:"disable_execute_api_endpoint" parquet:"name=disable_execute_api_endpoint,type=BOOLEAN" json:"disable_execute_api_endpoint,omitempty" diff:"disable_execute_api_endpoint"`
	DisableSchemaValidation   bool              `bson:"disable_schema_validation,omitempty" ion:"disable_schema_validation" dynamodbav:"disable_schema_validation" parquet:"name=disable_schema_validation,type=BOOLEAN" json:"disable_schema_validation,omitempty" diff:"disable_schema_validation"`
	ImportInfo                []string          `bson:"import_info,omitempty" ion:"import_info" dynamodbav:"import_info,omitempty" parquet:"name=import_info,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"import_info,omitempty" diff:"import_info"`
	Tags                      map[string]string `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
	Version                   string            `bson:"version,omitempty" ion:"version" dynamodbav:"version,omitempty" parquet:"name=version,type=BYTE_ARRAY,convertedtype=UTF8" json:"version,omitempty" diff:"version"`
	Warnings                  []string          `bson:"warnings,omitempty" ion:"warnings" dynamodbav:"warnings,omitempty" parquet:"name=warnings,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"warnings,omitempty" diff:"warnings"`
	AccountId                 string            `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region                    string            `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime                int64             `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID             string            `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
	Stages                    []*Stage          `bson:"stages,omitempty" ion:"stages" dynamodbav:"stages,omitempty" parquet:"name=stages,type=MAP,convertedtype=LIST" json:"stages,omitempty" diff:"stages"`
	Routes                    []*GetRouteOutput `bson:"routes,omitempty" ion:"routes" dynamodbav:"routes,omitempty" parquet:"name=routes,type=MAP,convertedtype=LIST" json:"routes,omitempty" diff:"routes"`
	Integrations              []*Integration    `bson:"integrations,omitempty" ion:"integrations" dynamodbav:"integrations,omitempty" parquet:"name=integrations,type=MAP,convertedtype=LIST" json:"integrations,omitempty" diff:"integrations"`
	Authorizers               []*Authorizer     `bson:"authorizers,omitempty" ion:"authorizers" dynamodbav:"authorizers,omitempty" parquet:"name=authorizers,type=MAP,convertedtype=LIST" json:"authorizers,omitempty" diff:"authorizers"`
}
