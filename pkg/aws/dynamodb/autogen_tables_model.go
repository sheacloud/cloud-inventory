//AUTOGENERATED CODE DO NOT EDIT
package dynamodb

type Table struct {
	ArchivalSummary        *ArchivalSummary                   `bson:"archival_summary,omitempty" ion:"archival_summary" dynamodbav:"archival_summary,omitempty" parquet:"name=archival_summary" json:"archival_summary,omitempty" diff:"archival_summary"`
	AttributeDefinitions   []*AttributeDefinition             `bson:"attribute_definitions,omitempty" ion:"attribute_definitions" dynamodbav:"attribute_definitions,omitempty" parquet:"name=attribute_definitions,type=MAP,convertedtype=LIST" json:"attribute_definitions,omitempty" diff:"attribute_definitions"`
	BillingModeSummary     *BillingModeSummary                `bson:"billing_mode_summary,omitempty" ion:"billing_mode_summary" dynamodbav:"billing_mode_summary,omitempty" parquet:"name=billing_mode_summary" json:"billing_mode_summary,omitempty" diff:"billing_mode_summary"`
	CreationDateTime       int64                              `bson:"creation_date_time,omitempty" ion:"creation_date_time" dynamodbav:"creation_date_time,omitempty" parquet:"name=creation_date_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"creation_date_time,omitempty" diff:"creation_date_time"`
	GlobalSecondaryIndexes []*GlobalSecondaryIndexDescription `bson:"global_secondary_indexes,omitempty" ion:"global_secondary_indexes" dynamodbav:"global_secondary_indexes,omitempty" parquet:"name=global_secondary_indexes,type=MAP,convertedtype=LIST" json:"global_secondary_indexes,omitempty" diff:"global_secondary_indexes"`
	GlobalTableVersion     string                             `bson:"global_table_version,omitempty" ion:"global_table_version" dynamodbav:"global_table_version,omitempty" parquet:"name=global_table_version,type=BYTE_ARRAY,convertedtype=UTF8" json:"global_table_version,omitempty" diff:"global_table_version"`
	ItemCount              int64                              `bson:"item_count,omitempty" ion:"item_count" dynamodbav:"item_count,omitempty" parquet:"name=item_count,type=INT64" json:"item_count,omitempty" diff:"item_count"`
	KeySchema              []*KeySchemaElement                `bson:"key_schema,omitempty" ion:"key_schema" dynamodbav:"key_schema,omitempty" parquet:"name=key_schema,type=MAP,convertedtype=LIST" json:"key_schema,omitempty" diff:"key_schema"`
	LatestStreamArn        string                             `bson:"latest_stream_arn,omitempty" ion:"latest_stream_arn" dynamodbav:"latest_stream_arn,omitempty" parquet:"name=latest_stream_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"latest_stream_arn,omitempty" diff:"latest_stream_arn"`
	LatestStreamLabel      string                             `bson:"latest_stream_label,omitempty" ion:"latest_stream_label" dynamodbav:"latest_stream_label,omitempty" parquet:"name=latest_stream_label,type=BYTE_ARRAY,convertedtype=UTF8" json:"latest_stream_label,omitempty" diff:"latest_stream_label"`
	LocalSecondaryIndexes  []*LocalSecondaryIndexDescription  `bson:"local_secondary_indexes,omitempty" ion:"local_secondary_indexes" dynamodbav:"local_secondary_indexes,omitempty" parquet:"name=local_secondary_indexes,type=MAP,convertedtype=LIST" json:"local_secondary_indexes,omitempty" diff:"local_secondary_indexes"`
	ProvisionedThroughput  *ProvisionedThroughputDescription  `bson:"provisioned_throughput,omitempty" ion:"provisioned_throughput" dynamodbav:"provisioned_throughput,omitempty" parquet:"name=provisioned_throughput" json:"provisioned_throughput,omitempty" diff:"provisioned_throughput"`
	Replicas               []*ReplicaDescription              `bson:"replicas,omitempty" ion:"replicas" dynamodbav:"replicas,omitempty" parquet:"name=replicas,type=MAP,convertedtype=LIST" json:"replicas,omitempty" diff:"replicas"`
	RestoreSummary         *RestoreSummary                    `bson:"restore_summary,omitempty" ion:"restore_summary" dynamodbav:"restore_summary,omitempty" parquet:"name=restore_summary" json:"restore_summary,omitempty" diff:"restore_summary"`
	SSEDescription         *SSEDescription                    `bson:"sse_description,omitempty" ion:"sse_description" dynamodbav:"sse_description,omitempty" parquet:"name=sse_description" json:"sse_description,omitempty" diff:"sse_description"`
	StreamSpecification    *StreamSpecification               `bson:"stream_specification,omitempty" ion:"stream_specification" dynamodbav:"stream_specification,omitempty" parquet:"name=stream_specification" json:"stream_specification,omitempty" diff:"stream_specification"`
	TableArn               string                             `bson:"table_arn,omitempty" ion:"table_arn" dynamodbav:"table_arn,omitempty" parquet:"name=table_arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"table_arn,omitempty" diff:"table_arn,identifier"`
	TableClassSummary      *TableClassSummary                 `bson:"table_class_summary,omitempty" ion:"table_class_summary" dynamodbav:"table_class_summary,omitempty" parquet:"name=table_class_summary" json:"table_class_summary,omitempty" diff:"table_class_summary"`
	TableId                string                             `bson:"table_id,omitempty" ion:"table_id" dynamodbav:"table_id,omitempty" parquet:"name=table_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"table_id,omitempty" diff:"table_id"`
	TableName              string                             `bson:"table_name,omitempty" ion:"table_name" dynamodbav:"table_name,omitempty" parquet:"name=table_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"table_name,omitempty" diff:"table_name"`
	TableSizeBytes         int64                              `bson:"table_size_bytes,omitempty" ion:"table_size_bytes" dynamodbav:"table_size_bytes,omitempty" parquet:"name=table_size_bytes,type=INT64" json:"table_size_bytes,omitempty" diff:"table_size_bytes"`
	TableStatus            string                             `bson:"table_status,omitempty" ion:"table_status" dynamodbav:"table_status,omitempty" parquet:"name=table_status,type=BYTE_ARRAY,convertedtype=UTF8" json:"table_status,omitempty" diff:"table_status"`
	AccountId              string                             `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region                 string                             `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime             int64                              `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID          string                             `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
	Tags                   map[string]string                  `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
}
