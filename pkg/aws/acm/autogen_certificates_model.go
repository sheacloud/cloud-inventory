//AUTOGENERATED CODE DO NOT EDIT
// This file is automatically generated from /internal/codegen/templates/aws_resource_file.tmpl
package acm

type Certificate struct {
	CertificateArn          string              `bson:"certificate_arn,omitempty" ion:"certificate_arn" dynamodbav:"certificate_arn,omitempty" parquet:"name=certificate_arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"certificate_arn,omitempty" diff:"certificate_arn,identifier"`
	CertificateAuthorityArn string              `bson:"certificate_authority_arn,omitempty" ion:"certificate_authority_arn" dynamodbav:"certificate_authority_arn,omitempty" parquet:"name=certificate_authority_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"certificate_authority_arn,omitempty" diff:"certificate_authority_arn"`
	CreatedAt               int64               `bson:"created_at,omitempty" ion:"created_at" dynamodbav:"created_at,omitempty" parquet:"name=created_at,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"created_at,omitempty" diff:"created_at"`
	DomainName              string              `bson:"domain_name,omitempty" ion:"domain_name" dynamodbav:"domain_name,omitempty" parquet:"name=domain_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"domain_name,omitempty" diff:"domain_name"`
	DomainValidationOptions []*DomainValidation `bson:"domain_validation_options,omitempty" ion:"domain_validation_options" dynamodbav:"domain_validation_options,omitempty" parquet:"name=domain_validation_options,type=MAP,convertedtype=LIST" json:"domain_validation_options,omitempty" diff:"domain_validation_options"`
	ExtendedKeyUsages       []*ExtendedKeyUsage `bson:"extended_key_usages,omitempty" ion:"extended_key_usages" dynamodbav:"extended_key_usages,omitempty" parquet:"name=extended_key_usages,type=MAP,convertedtype=LIST" json:"extended_key_usages,omitempty" diff:"extended_key_usages"`
	FailureReason           string              `bson:"failure_reason,omitempty" ion:"failure_reason" dynamodbav:"failure_reason,omitempty" parquet:"name=failure_reason,type=BYTE_ARRAY,convertedtype=UTF8" json:"failure_reason,omitempty" diff:"failure_reason"`
	ImportedAt              int64               `bson:"imported_at,omitempty" ion:"imported_at" dynamodbav:"imported_at,omitempty" parquet:"name=imported_at,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"imported_at,omitempty" diff:"imported_at"`
	InUseBy                 []string            `bson:"in_use_by,omitempty" ion:"in_use_by" dynamodbav:"in_use_by,omitempty" parquet:"name=in_use_by,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"in_use_by,omitempty" diff:"in_use_by"`
	IssuedAt                int64               `bson:"issued_at,omitempty" ion:"issued_at" dynamodbav:"issued_at,omitempty" parquet:"name=issued_at,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"issued_at,omitempty" diff:"issued_at"`
	Issuer                  string              `bson:"issuer,omitempty" ion:"issuer" dynamodbav:"issuer,omitempty" parquet:"name=issuer,type=BYTE_ARRAY,convertedtype=UTF8" json:"issuer,omitempty" diff:"issuer"`
	KeyAlgorithm            string              `bson:"key_algorithm,omitempty" ion:"key_algorithm" dynamodbav:"key_algorithm,omitempty" parquet:"name=key_algorithm,type=BYTE_ARRAY,convertedtype=UTF8" json:"key_algorithm,omitempty" diff:"key_algorithm"`
	KeyUsages               []*KeyUsage         `bson:"key_usages,omitempty" ion:"key_usages" dynamodbav:"key_usages,omitempty" parquet:"name=key_usages,type=MAP,convertedtype=LIST" json:"key_usages,omitempty" diff:"key_usages"`
	NotAfter                int64               `bson:"not_after,omitempty" ion:"not_after" dynamodbav:"not_after,omitempty" parquet:"name=not_after,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"not_after,omitempty" diff:"not_after"`
	NotBefore               int64               `bson:"not_before,omitempty" ion:"not_before" dynamodbav:"not_before,omitempty" parquet:"name=not_before,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"not_before,omitempty" diff:"not_before"`
	Options                 *CertificateOptions `bson:"options,omitempty" ion:"options" dynamodbav:"options,omitempty" parquet:"name=options" json:"options,omitempty" diff:"options"`
	RenewalEligibility      string              `bson:"renewal_eligibility,omitempty" ion:"renewal_eligibility" dynamodbav:"renewal_eligibility,omitempty" parquet:"name=renewal_eligibility,type=BYTE_ARRAY,convertedtype=UTF8" json:"renewal_eligibility,omitempty" diff:"renewal_eligibility"`
	RenewalSummary          *RenewalSummary     `bson:"renewal_summary,omitempty" ion:"renewal_summary" dynamodbav:"renewal_summary,omitempty" parquet:"name=renewal_summary" json:"renewal_summary,omitempty" diff:"renewal_summary"`
	RevocationReason        string              `bson:"revocation_reason,omitempty" ion:"revocation_reason" dynamodbav:"revocation_reason,omitempty" parquet:"name=revocation_reason,type=BYTE_ARRAY,convertedtype=UTF8" json:"revocation_reason,omitempty" diff:"revocation_reason"`
	RevokedAt               int64               `bson:"revoked_at,omitempty" ion:"revoked_at" dynamodbav:"revoked_at,omitempty" parquet:"name=revoked_at,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"revoked_at,omitempty" diff:"revoked_at"`
	Serial                  string              `bson:"serial,omitempty" ion:"serial" dynamodbav:"serial,omitempty" parquet:"name=serial,type=BYTE_ARRAY,convertedtype=UTF8" json:"serial,omitempty" diff:"serial"`
	SignatureAlgorithm      string              `bson:"signature_algorithm,omitempty" ion:"signature_algorithm" dynamodbav:"signature_algorithm,omitempty" parquet:"name=signature_algorithm,type=BYTE_ARRAY,convertedtype=UTF8" json:"signature_algorithm,omitempty" diff:"signature_algorithm"`
	Status                  string              `bson:"status,omitempty" ion:"status" dynamodbav:"status,omitempty" parquet:"name=status,type=BYTE_ARRAY,convertedtype=UTF8" json:"status,omitempty" diff:"status"`
	Subject                 string              `bson:"subject,omitempty" ion:"subject" dynamodbav:"subject,omitempty" parquet:"name=subject,type=BYTE_ARRAY,convertedtype=UTF8" json:"subject,omitempty" diff:"subject"`
	SubjectAlternativeNames []string            `bson:"subject_alternative_names,omitempty" ion:"subject_alternative_names" dynamodbav:"subject_alternative_names,omitempty" parquet:"name=subject_alternative_names,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"subject_alternative_names,omitempty" diff:"subject_alternative_names"`
	Type                    string              `bson:"type,omitempty" ion:"type" dynamodbav:"type,omitempty" parquet:"name=type,type=BYTE_ARRAY,convertedtype=UTF8" json:"type,omitempty" diff:"type"`
	AccountId               string              `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region                  string              `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime              int64               `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID           string              `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
	Tags                    map[string]string   `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
}
