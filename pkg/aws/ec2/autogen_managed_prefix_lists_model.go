//AUTOGENERATED CODE DO NOT EDIT
// This file is automatically generated from /internal/codegen/templates/aws_resource_file.tmpl
package ec2

type ManagedPrefixList struct {
	AddressFamily  string            `bson:"address_family,omitempty" ion:"address_family" dynamodbav:"address_family,omitempty" parquet:"name=address_family,type=BYTE_ARRAY,convertedtype=UTF8" json:"address_family,omitempty" diff:"address_family"`
	MaxEntries     int32             `bson:"max_entries,omitempty" ion:"max_entries" dynamodbav:"max_entries,omitempty" parquet:"name=max_entries,type=INT32" json:"max_entries,omitempty" diff:"max_entries"`
	OwnerId        string            `bson:"owner_id,omitempty" ion:"owner_id" dynamodbav:"owner_id,omitempty" parquet:"name=owner_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"owner_id,omitempty" diff:"owner_id"`
	PrefixListArn  string            `bson:"prefix_list_arn,omitempty" ion:"prefix_list_arn" dynamodbav:"prefix_list_arn,omitempty" parquet:"name=prefix_list_arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"prefix_list_arn,omitempty" diff:"prefix_list_arn,identifier"`
	PrefixListId   string            `bson:"prefix_list_id,omitempty" ion:"prefix_list_id" dynamodbav:"prefix_list_id,omitempty" parquet:"name=prefix_list_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"prefix_list_id,omitempty" diff:"prefix_list_id"`
	PrefixListName string            `bson:"prefix_list_name,omitempty" ion:"prefix_list_name" dynamodbav:"prefix_list_name,omitempty" parquet:"name=prefix_list_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"prefix_list_name,omitempty" diff:"prefix_list_name"`
	State          string            `bson:"state,omitempty" ion:"state" dynamodbav:"state,omitempty" parquet:"name=state,type=BYTE_ARRAY,convertedtype=UTF8" json:"state,omitempty" diff:"state"`
	StateMessage   string            `bson:"state_message,omitempty" ion:"state_message" dynamodbav:"state_message,omitempty" parquet:"name=state_message,type=BYTE_ARRAY,convertedtype=UTF8" json:"state_message,omitempty" diff:"state_message"`
	Tags           map[string]string `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
	Version        int64             `bson:"version,omitempty" ion:"version" dynamodbav:"version,omitempty" parquet:"name=version,type=INT64" json:"version,omitempty" diff:"version"`
	AccountId      string            `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region         string            `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime     int64             `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID  string            `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
}
