//AUTOGENERATED CODE DO NOT EDIT
package ec2

import (
	"time"
)

type VpcPeeringConnection struct {
	AccepterVpcInfo        *VpcPeeringConnectionVpcInfo     `bson:"accepter_vpc_info,omitempty" dynamodbav:"accepter_vpc_info,omitempty" json:"accepter_vpc_info,omitempty" diff:"accepter_vpc_info"`
	ExpirationTime         *time.Time                       `bson:"expiration_time,omitempty" dynamodbav:"expiration_time,unixtime,omitempty" json:"expiration_time,omitempty" diff:"expiration_time"`
	RequesterVpcInfo       *VpcPeeringConnectionVpcInfo     `bson:"requester_vpc_info,omitempty" dynamodbav:"requester_vpc_info,omitempty" json:"requester_vpc_info,omitempty" diff:"requester_vpc_info"`
	Status                 *VpcPeeringConnectionStateReason `bson:"status,omitempty" dynamodbav:"status,omitempty" json:"status,omitempty" diff:"status"`
	Tags                   map[string]string                `bson:"tags,omitempty" dynamodbav:"tags,omitempty" json:"tags,omitempty" diff:"tags"`
	VpcPeeringConnectionId string                           `bson:"vpc_peering_connection_id,omitempty" dynamodbav:"vpc_peering_connection_id,omitempty" inventory_primary_key:"true" json:"vpc_peering_connection_id,omitempty" diff:"vpc_peering_connection_id,identifier"`
	AccountId              string                           `bson:"account_id,omitempty" dynamodbav:"account_id,omitempty" json:"account_id,omitempty" diff:"account_id"`
	Region                 string                           `bson:"region,omitempty" dynamodbav:"region,omitempty" json:"region,omitempty" diff:"region"`
	ReportTime             time.Time                        `bson:"report_time,omitempty" dynamodbav:"report_time,unixtime,omitempty" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID          string                           `bson:"_id,omitempty" dynamodbav:"_id,omitempty" json:"_id,omitempty" diff:"-"`
}
