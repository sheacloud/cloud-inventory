//AUTOGENERATED CODE DO NOT EDIT
package ec2

import (
	"time"
)

type Tag struct {
	Key   string `bson:"key,omitempty" dynamodbav:"key,omitempty" json:"key,omitempty" diff:"key"`
	Value string `bson:"value,omitempty" dynamodbav:"value,omitempty" json:"value,omitempty" diff:"value"`
}

type DhcpConfiguration struct {
	Key    string            `bson:"key,omitempty" dynamodbav:"key,omitempty" json:"key,omitempty" diff:"key"`
	Values []*AttributeValue `bson:"values,omitempty" dynamodbav:"values,omitempty" json:"values,omitempty" diff:"values"`
}

type AttributeValue struct {
	Value string `bson:"value,omitempty" dynamodbav:"value,omitempty" json:"value,omitempty" diff:"value"`
}

type BlockDeviceMapping struct {
	DeviceName  string          `bson:"device_name,omitempty" dynamodbav:"device_name,omitempty" json:"device_name,omitempty" diff:"device_name"`
	Ebs         *EbsBlockDevice `bson:"ebs,omitempty" dynamodbav:"ebs,omitempty" json:"ebs,omitempty" diff:"ebs"`
	NoDevice    string          `bson:"no_device,omitempty" dynamodbav:"no_device,omitempty" json:"no_device,omitempty" diff:"no_device"`
	VirtualName string          `bson:"virtual_name,omitempty" dynamodbav:"virtual_name,omitempty" json:"virtual_name,omitempty" diff:"virtual_name"`
}

type EbsBlockDevice struct {
	DeleteOnTermination bool   `bson:"delete_on_termination,omitempty" dynamodbav:"delete_on_termination" json:"delete_on_termination,omitempty" diff:"delete_on_termination"`
	Encrypted           bool   `bson:"encrypted,omitempty" dynamodbav:"encrypted" json:"encrypted,omitempty" diff:"encrypted"`
	Iops                int32  `bson:"iops,omitempty" dynamodbav:"iops,omitempty" json:"iops,omitempty" diff:"iops"`
	KmsKeyId            string `bson:"kms_key_id,omitempty" dynamodbav:"kms_key_id,omitempty" json:"kms_key_id,omitempty" diff:"kms_key_id"`
	OutpostArn          string `bson:"outpost_arn,omitempty" dynamodbav:"outpost_arn,omitempty" json:"outpost_arn,omitempty" diff:"outpost_arn"`
	SnapshotId          string `bson:"snapshot_id,omitempty" dynamodbav:"snapshot_id,omitempty" json:"snapshot_id,omitempty" diff:"snapshot_id"`
	Throughput          int32  `bson:"throughput,omitempty" dynamodbav:"throughput,omitempty" json:"throughput,omitempty" diff:"throughput"`
	VolumeSize          int32  `bson:"volume_size,omitempty" dynamodbav:"volume_size,omitempty" json:"volume_size,omitempty" diff:"volume_size"`
	VolumeType          string `bson:"volume_type,omitempty" dynamodbav:"volume_type,omitempty" json:"volume_type,omitempty" diff:"volume_type"`
}

type ProductCode struct {
	ProductCodeId   string `bson:"product_code_id,omitempty" dynamodbav:"product_code_id,omitempty" json:"product_code_id,omitempty" diff:"product_code_id"`
	ProductCodeType string `bson:"product_code_type,omitempty" dynamodbav:"product_code_type,omitempty" json:"product_code_type,omitempty" diff:"product_code_type"`
}

type StateReason struct {
	Code    string `bson:"code,omitempty" dynamodbav:"code,omitempty" json:"code,omitempty" diff:"code"`
	Message string `bson:"message,omitempty" dynamodbav:"message,omitempty" json:"message,omitempty" diff:"message"`
}

type InstanceBlockDeviceMapping struct {
	DeviceName string                  `bson:"device_name,omitempty" dynamodbav:"device_name,omitempty" json:"device_name,omitempty" diff:"device_name"`
	Ebs        *EbsInstanceBlockDevice `bson:"ebs,omitempty" dynamodbav:"ebs,omitempty" json:"ebs,omitempty" diff:"ebs"`
}

type EbsInstanceBlockDevice struct {
	AttachTime          *time.Time `bson:"attach_time,omitempty" dynamodbav:"attach_time,unixtime,omitempty" json:"attach_time,omitempty" diff:"attach_time"`
	DeleteOnTermination bool       `bson:"delete_on_termination,omitempty" dynamodbav:"delete_on_termination" json:"delete_on_termination,omitempty" diff:"delete_on_termination"`
	Status              string     `bson:"status,omitempty" dynamodbav:"status,omitempty" json:"status,omitempty" diff:"status"`
	VolumeId            string     `bson:"volume_id,omitempty" dynamodbav:"volume_id,omitempty" json:"volume_id,omitempty" diff:"volume_id"`
}

type CapacityReservationSpecificationResponse struct {
	CapacityReservationPreference string                             `bson:"capacity_reservation_preference,omitempty" dynamodbav:"capacity_reservation_preference,omitempty" json:"capacity_reservation_preference,omitempty" diff:"capacity_reservation_preference"`
	CapacityReservationTarget     *CapacityReservationTargetResponse `bson:"capacity_reservation_target,omitempty" dynamodbav:"capacity_reservation_target,omitempty" json:"capacity_reservation_target,omitempty" diff:"capacity_reservation_target"`
}

type CapacityReservationTargetResponse struct {
	CapacityReservationId               string `bson:"capacity_reservation_id,omitempty" dynamodbav:"capacity_reservation_id,omitempty" json:"capacity_reservation_id,omitempty" diff:"capacity_reservation_id"`
	CapacityReservationResourceGroupArn string `bson:"capacity_reservation_resource_group_arn,omitempty" dynamodbav:"capacity_reservation_resource_group_arn,omitempty" json:"capacity_reservation_resource_group_arn,omitempty" diff:"capacity_reservation_resource_group_arn"`
}

type CpuOptions struct {
	CoreCount      int32 `bson:"core_count,omitempty" dynamodbav:"core_count,omitempty" json:"core_count,omitempty" diff:"core_count"`
	ThreadsPerCore int32 `bson:"threads_per_core,omitempty" dynamodbav:"threads_per_core,omitempty" json:"threads_per_core,omitempty" diff:"threads_per_core"`
}

type ElasticGpuAssociation struct {
	ElasticGpuAssociationId    string `bson:"elastic_gpu_association_id,omitempty" dynamodbav:"elastic_gpu_association_id,omitempty" json:"elastic_gpu_association_id,omitempty" diff:"elastic_gpu_association_id"`
	ElasticGpuAssociationState string `bson:"elastic_gpu_association_state,omitempty" dynamodbav:"elastic_gpu_association_state,omitempty" json:"elastic_gpu_association_state,omitempty" diff:"elastic_gpu_association_state"`
	ElasticGpuAssociationTime  string `bson:"elastic_gpu_association_time,omitempty" dynamodbav:"elastic_gpu_association_time,omitempty" json:"elastic_gpu_association_time,omitempty" diff:"elastic_gpu_association_time"`
	ElasticGpuId               string `bson:"elastic_gpu_id,omitempty" dynamodbav:"elastic_gpu_id,omitempty" json:"elastic_gpu_id,omitempty" diff:"elastic_gpu_id"`
}

type ElasticInferenceAcceleratorAssociation struct {
	ElasticInferenceAcceleratorArn              string     `bson:"elastic_inference_accelerator_arn,omitempty" dynamodbav:"elastic_inference_accelerator_arn,omitempty" json:"elastic_inference_accelerator_arn,omitempty" diff:"elastic_inference_accelerator_arn"`
	ElasticInferenceAcceleratorAssociationId    string     `bson:"elastic_inference_accelerator_association_id,omitempty" dynamodbav:"elastic_inference_accelerator_association_id,omitempty" json:"elastic_inference_accelerator_association_id,omitempty" diff:"elastic_inference_accelerator_association_id"`
	ElasticInferenceAcceleratorAssociationState string     `bson:"elastic_inference_accelerator_association_state,omitempty" dynamodbav:"elastic_inference_accelerator_association_state,omitempty" json:"elastic_inference_accelerator_association_state,omitempty" diff:"elastic_inference_accelerator_association_state"`
	ElasticInferenceAcceleratorAssociationTime  *time.Time `bson:"elastic_inference_accelerator_association_time,omitempty" dynamodbav:"elastic_inference_accelerator_association_time,unixtime,omitempty" json:"elastic_inference_accelerator_association_time,omitempty" diff:"elastic_inference_accelerator_association_time"`
}

type EnclaveOptions struct {
	Enabled bool `bson:"enabled,omitempty" dynamodbav:"enabled" json:"enabled,omitempty" diff:"enabled"`
}

type HibernationOptions struct {
	Configured bool `bson:"configured,omitempty" dynamodbav:"configured" json:"configured,omitempty" diff:"configured"`
}

type IamInstanceProfile struct {
	Arn string `bson:"arn,omitempty" dynamodbav:"arn,omitempty" json:"arn,omitempty" diff:"arn"`
	Id  string `bson:"id,omitempty" dynamodbav:"id,omitempty" json:"id,omitempty" diff:"id"`
}

type LicenseConfiguration struct {
	LicenseConfigurationArn string `bson:"license_configuration_arn,omitempty" dynamodbav:"license_configuration_arn,omitempty" json:"license_configuration_arn,omitempty" diff:"license_configuration_arn"`
}

type InstanceMetadataOptionsResponse struct {
	HttpEndpoint            string `bson:"http_endpoint,omitempty" dynamodbav:"http_endpoint,omitempty" json:"http_endpoint,omitempty" diff:"http_endpoint"`
	HttpProtocolIpv6        string `bson:"http_protocol_ipv6,omitempty" dynamodbav:"http_protocol_ipv6,omitempty" json:"http_protocol_ipv6,omitempty" diff:"http_protocol_ipv6"`
	HttpPutResponseHopLimit int32  `bson:"http_put_response_hop_limit,omitempty" dynamodbav:"http_put_response_hop_limit,omitempty" json:"http_put_response_hop_limit,omitempty" diff:"http_put_response_hop_limit"`
	HttpTokens              string `bson:"http_tokens,omitempty" dynamodbav:"http_tokens,omitempty" json:"http_tokens,omitempty" diff:"http_tokens"`
	State                   string `bson:"state,omitempty" dynamodbav:"state,omitempty" json:"state,omitempty" diff:"state"`
}

type Monitoring struct {
	State string `bson:"state,omitempty" dynamodbav:"state,omitempty" json:"state,omitempty" diff:"state"`
}

type InstanceNetworkInterface struct {
	Association        *InstanceNetworkInterfaceAssociation `bson:"association,omitempty" dynamodbav:"association,omitempty" json:"association,omitempty" diff:"association"`
	Attachment         *InstanceNetworkInterfaceAttachment  `bson:"attachment,omitempty" dynamodbav:"attachment,omitempty" json:"attachment,omitempty" diff:"attachment"`
	Description        string                               `bson:"description,omitempty" dynamodbav:"description,omitempty" json:"description,omitempty" diff:"description"`
	Groups             []*GroupIdentifier                   `bson:"groups,omitempty" dynamodbav:"groups,omitempty" json:"groups,omitempty" diff:"groups"`
	InterfaceType      string                               `bson:"interface_type,omitempty" dynamodbav:"interface_type,omitempty" json:"interface_type,omitempty" diff:"interface_type"`
	Ipv4Prefixes       []*InstanceIpv4Prefix                `bson:"ipv4_prefixes,omitempty" dynamodbav:"ipv4_prefixes,omitempty" json:"ipv4_prefixes,omitempty" diff:"ipv4_prefixes"`
	Ipv6Addresses      []*InstanceIpv6Address               `bson:"ipv6_addresses,omitempty" dynamodbav:"ipv6_addresses,omitempty" json:"ipv6_addresses,omitempty" diff:"ipv6_addresses"`
	Ipv6Prefixes       []*InstanceIpv6Prefix                `bson:"ipv6_prefixes,omitempty" dynamodbav:"ipv6_prefixes,omitempty" json:"ipv6_prefixes,omitempty" diff:"ipv6_prefixes"`
	MacAddress         string                               `bson:"mac_address,omitempty" dynamodbav:"mac_address,omitempty" json:"mac_address,omitempty" diff:"mac_address"`
	NetworkInterfaceId string                               `bson:"network_interface_id,omitempty" dynamodbav:"network_interface_id,omitempty" json:"network_interface_id,omitempty" diff:"network_interface_id"`
	OwnerId            string                               `bson:"owner_id,omitempty" dynamodbav:"owner_id,omitempty" json:"owner_id,omitempty" diff:"owner_id"`
	PrivateDnsName     string                               `bson:"private_dns_name,omitempty" dynamodbav:"private_dns_name,omitempty" json:"private_dns_name,omitempty" diff:"private_dns_name"`
	PrivateIpAddress   string                               `bson:"private_ip_address,omitempty" dynamodbav:"private_ip_address,omitempty" json:"private_ip_address,omitempty" diff:"private_ip_address"`
	PrivateIpAddresses []*InstancePrivateIpAddress          `bson:"private_ip_addresses,omitempty" dynamodbav:"private_ip_addresses,omitempty" json:"private_ip_addresses,omitempty" diff:"private_ip_addresses"`
	SourceDestCheck    bool                                 `bson:"source_dest_check,omitempty" dynamodbav:"source_dest_check" json:"source_dest_check,omitempty" diff:"source_dest_check"`
	Status             string                               `bson:"status,omitempty" dynamodbav:"status,omitempty" json:"status,omitempty" diff:"status"`
	SubnetId           string                               `bson:"subnet_id,omitempty" dynamodbav:"subnet_id,omitempty" json:"subnet_id,omitempty" diff:"subnet_id"`
	VpcId              string                               `bson:"vpc_id,omitempty" dynamodbav:"vpc_id,omitempty" json:"vpc_id,omitempty" diff:"vpc_id"`
}

type InstanceNetworkInterfaceAssociation struct {
	CarrierIp       string `bson:"carrier_ip,omitempty" dynamodbav:"carrier_ip,omitempty" json:"carrier_ip,omitempty" diff:"carrier_ip"`
	CustomerOwnedIp string `bson:"customer_owned_ip,omitempty" dynamodbav:"customer_owned_ip,omitempty" json:"customer_owned_ip,omitempty" diff:"customer_owned_ip"`
	IpOwnerId       string `bson:"ip_owner_id,omitempty" dynamodbav:"ip_owner_id,omitempty" json:"ip_owner_id,omitempty" diff:"ip_owner_id"`
	PublicDnsName   string `bson:"public_dns_name,omitempty" dynamodbav:"public_dns_name,omitempty" json:"public_dns_name,omitempty" diff:"public_dns_name"`
	PublicIp        string `bson:"public_ip,omitempty" dynamodbav:"public_ip,omitempty" json:"public_ip,omitempty" diff:"public_ip"`
}

type InstanceNetworkInterfaceAttachment struct {
	AttachTime          *time.Time `bson:"attach_time,omitempty" dynamodbav:"attach_time,unixtime,omitempty" json:"attach_time,omitempty" diff:"attach_time"`
	AttachmentId        string     `bson:"attachment_id,omitempty" dynamodbav:"attachment_id,omitempty" json:"attachment_id,omitempty" diff:"attachment_id"`
	DeleteOnTermination bool       `bson:"delete_on_termination,omitempty" dynamodbav:"delete_on_termination" json:"delete_on_termination,omitempty" diff:"delete_on_termination"`
	DeviceIndex         int32      `bson:"device_index,omitempty" dynamodbav:"device_index,omitempty" json:"device_index,omitempty" diff:"device_index"`
	NetworkCardIndex    int32      `bson:"network_card_index,omitempty" dynamodbav:"network_card_index,omitempty" json:"network_card_index,omitempty" diff:"network_card_index"`
	Status              string     `bson:"status,omitempty" dynamodbav:"status,omitempty" json:"status,omitempty" diff:"status"`
}

type GroupIdentifier struct {
	GroupId   string `bson:"group_id,omitempty" dynamodbav:"group_id,omitempty" json:"group_id,omitempty" diff:"group_id"`
	GroupName string `bson:"group_name,omitempty" dynamodbav:"group_name,omitempty" json:"group_name,omitempty" diff:"group_name"`
}

type InstanceIpv4Prefix struct {
	Ipv4Prefix string `bson:"ipv4_prefix,omitempty" dynamodbav:"ipv4_prefix,omitempty" json:"ipv4_prefix,omitempty" diff:"ipv4_prefix"`
}

type InstanceIpv6Address struct {
	Ipv6Address string `bson:"ipv6_address,omitempty" dynamodbav:"ipv6_address,omitempty" json:"ipv6_address,omitempty" diff:"ipv6_address"`
}

type InstanceIpv6Prefix struct {
	Ipv6Prefix string `bson:"ipv6_prefix,omitempty" dynamodbav:"ipv6_prefix,omitempty" json:"ipv6_prefix,omitempty" diff:"ipv6_prefix"`
}

type InstancePrivateIpAddress struct {
	Association      *InstanceNetworkInterfaceAssociation `bson:"association,omitempty" dynamodbav:"association,omitempty" json:"association,omitempty" diff:"association"`
	Primary          bool                                 `bson:"primary,omitempty" dynamodbav:"primary" json:"primary,omitempty" diff:"primary"`
	PrivateDnsName   string                               `bson:"private_dns_name,omitempty" dynamodbav:"private_dns_name,omitempty" json:"private_dns_name,omitempty" diff:"private_dns_name"`
	PrivateIpAddress string                               `bson:"private_ip_address,omitempty" dynamodbav:"private_ip_address,omitempty" json:"private_ip_address,omitempty" diff:"private_ip_address"`
}

type Placement struct {
	Affinity             string `bson:"affinity,omitempty" dynamodbav:"affinity,omitempty" json:"affinity,omitempty" diff:"affinity"`
	AvailabilityZone     string `bson:"availability_zone,omitempty" dynamodbav:"availability_zone,omitempty" json:"availability_zone,omitempty" diff:"availability_zone"`
	GroupName            string `bson:"group_name,omitempty" dynamodbav:"group_name,omitempty" json:"group_name,omitempty" diff:"group_name"`
	HostId               string `bson:"host_id,omitempty" dynamodbav:"host_id,omitempty" json:"host_id,omitempty" diff:"host_id"`
	HostResourceGroupArn string `bson:"host_resource_group_arn,omitempty" dynamodbav:"host_resource_group_arn,omitempty" json:"host_resource_group_arn,omitempty" diff:"host_resource_group_arn"`
	PartitionNumber      int32  `bson:"partition_number,omitempty" dynamodbav:"partition_number,omitempty" json:"partition_number,omitempty" diff:"partition_number"`
	SpreadDomain         string `bson:"spread_domain,omitempty" dynamodbav:"spread_domain,omitempty" json:"spread_domain,omitempty" diff:"spread_domain"`
	Tenancy              string `bson:"tenancy,omitempty" dynamodbav:"tenancy,omitempty" json:"tenancy,omitempty" diff:"tenancy"`
}

type PrivateDnsNameOptionsResponse struct {
	EnableResourceNameDnsAAAARecord bool   `bson:"enable_resource_name_dns_aaaa_record,omitempty" dynamodbav:"enable_resource_name_dns_aaaa_record" json:"enable_resource_name_dns_aaaa_record,omitempty" diff:"enable_resource_name_dns_aaaa_record"`
	EnableResourceNameDnsARecord    bool   `bson:"enable_resource_name_dns_a_record,omitempty" dynamodbav:"enable_resource_name_dns_a_record" json:"enable_resource_name_dns_a_record,omitempty" diff:"enable_resource_name_dns_a_record"`
	HostnameType                    string `bson:"hostname_type,omitempty" dynamodbav:"hostname_type,omitempty" json:"hostname_type,omitempty" diff:"hostname_type"`
}

type InstanceState struct {
	Code int32  `bson:"code,omitempty" dynamodbav:"code,omitempty" json:"code,omitempty" diff:"code"`
	Name string `bson:"name,omitempty" dynamodbav:"name,omitempty" json:"name,omitempty" diff:"name"`
}

type InternetGatewayAttachment struct {
	State string `bson:"state,omitempty" dynamodbav:"state,omitempty" json:"state,omitempty" diff:"state"`
	VpcId string `bson:"vpc_id,omitempty" dynamodbav:"vpc_id,omitempty" json:"vpc_id,omitempty" diff:"vpc_id"`
}

type NatGatewayAddress struct {
	AllocationId       string `bson:"allocation_id,omitempty" dynamodbav:"allocation_id,omitempty" json:"allocation_id,omitempty" diff:"allocation_id"`
	NetworkInterfaceId string `bson:"network_interface_id,omitempty" dynamodbav:"network_interface_id,omitempty" json:"network_interface_id,omitempty" diff:"network_interface_id"`
	PrivateIp          string `bson:"private_ip,omitempty" dynamodbav:"private_ip,omitempty" json:"private_ip,omitempty" diff:"private_ip"`
	PublicIp           string `bson:"public_ip,omitempty" dynamodbav:"public_ip,omitempty" json:"public_ip,omitempty" diff:"public_ip"`
}

type ProvisionedBandwidth struct {
	ProvisionTime *time.Time `bson:"provision_time,omitempty" dynamodbav:"provision_time,unixtime,omitempty" json:"provision_time,omitempty" diff:"provision_time"`
	Provisioned   string     `bson:"provisioned,omitempty" dynamodbav:"provisioned,omitempty" json:"provisioned,omitempty" diff:"provisioned"`
	RequestTime   *time.Time `bson:"request_time,omitempty" dynamodbav:"request_time,unixtime,omitempty" json:"request_time,omitempty" diff:"request_time"`
	Requested     string     `bson:"requested,omitempty" dynamodbav:"requested,omitempty" json:"requested,omitempty" diff:"requested"`
	Status        string     `bson:"status,omitempty" dynamodbav:"status,omitempty" json:"status,omitempty" diff:"status"`
}

type NetworkAclAssociation struct {
	NetworkAclAssociationId string `bson:"network_acl_association_id,omitempty" dynamodbav:"network_acl_association_id,omitempty" json:"network_acl_association_id,omitempty" diff:"network_acl_association_id"`
	NetworkAclId            string `bson:"network_acl_id,omitempty" dynamodbav:"network_acl_id,omitempty" inventory_primary_key:"true" json:"network_acl_id,omitempty" diff:"network_acl_id,identifier"`
	SubnetId                string `bson:"subnet_id,omitempty" dynamodbav:"subnet_id,omitempty" json:"subnet_id,omitempty" diff:"subnet_id"`
}

type NetworkAclEntry struct {
	CidrBlock     string        `bson:"cidr_block,omitempty" dynamodbav:"cidr_block,omitempty" json:"cidr_block,omitempty" diff:"cidr_block"`
	Egress        bool          `bson:"egress,omitempty" dynamodbav:"egress" json:"egress,omitempty" diff:"egress"`
	IcmpTypeCode  *IcmpTypeCode `bson:"icmp_type_code,omitempty" dynamodbav:"icmp_type_code,omitempty" json:"icmp_type_code,omitempty" diff:"icmp_type_code"`
	Ipv6CidrBlock string        `bson:"ipv6_cidr_block,omitempty" dynamodbav:"ipv6_cidr_block,omitempty" json:"ipv6_cidr_block,omitempty" diff:"ipv6_cidr_block"`
	PortRange     *PortRange    `bson:"port_range,omitempty" dynamodbav:"port_range,omitempty" json:"port_range,omitempty" diff:"port_range"`
	Protocol      string        `bson:"protocol,omitempty" dynamodbav:"protocol,omitempty" json:"protocol,omitempty" diff:"protocol"`
	RuleAction    string        `bson:"rule_action,omitempty" dynamodbav:"rule_action,omitempty" json:"rule_action,omitempty" diff:"rule_action"`
	RuleNumber    int32         `bson:"rule_number,omitempty" dynamodbav:"rule_number,omitempty" json:"rule_number,omitempty" diff:"rule_number"`
}

type IcmpTypeCode struct {
	Code int32 `bson:"code,omitempty" dynamodbav:"code,omitempty" json:"code,omitempty" diff:"code"`
	Type int32 `bson:"type,omitempty" dynamodbav:"type,omitempty" json:"type,omitempty" diff:"type"`
}

type PortRange struct {
	From int32 `bson:"from,omitempty" dynamodbav:"from,omitempty" json:"from,omitempty" diff:"from"`
	To   int32 `bson:"to,omitempty" dynamodbav:"to,omitempty" json:"to,omitempty" diff:"to"`
}

type NetworkInterfaceAssociation struct {
	AllocationId    string `bson:"allocation_id,omitempty" dynamodbav:"allocation_id,omitempty" json:"allocation_id,omitempty" diff:"allocation_id"`
	AssociationId   string `bson:"association_id,omitempty" dynamodbav:"association_id,omitempty" json:"association_id,omitempty" diff:"association_id"`
	CarrierIp       string `bson:"carrier_ip,omitempty" dynamodbav:"carrier_ip,omitempty" json:"carrier_ip,omitempty" diff:"carrier_ip"`
	CustomerOwnedIp string `bson:"customer_owned_ip,omitempty" dynamodbav:"customer_owned_ip,omitempty" json:"customer_owned_ip,omitempty" diff:"customer_owned_ip"`
	IpOwnerId       string `bson:"ip_owner_id,omitempty" dynamodbav:"ip_owner_id,omitempty" json:"ip_owner_id,omitempty" diff:"ip_owner_id"`
	PublicDnsName   string `bson:"public_dns_name,omitempty" dynamodbav:"public_dns_name,omitempty" json:"public_dns_name,omitempty" diff:"public_dns_name"`
	PublicIp        string `bson:"public_ip,omitempty" dynamodbav:"public_ip,omitempty" json:"public_ip,omitempty" diff:"public_ip"`
}

type NetworkInterfaceAttachment struct {
	AttachTime          *time.Time `bson:"attach_time,omitempty" dynamodbav:"attach_time,unixtime,omitempty" json:"attach_time,omitempty" diff:"attach_time"`
	AttachmentId        string     `bson:"attachment_id,omitempty" dynamodbav:"attachment_id,omitempty" json:"attachment_id,omitempty" diff:"attachment_id"`
	DeleteOnTermination bool       `bson:"delete_on_termination,omitempty" dynamodbav:"delete_on_termination" json:"delete_on_termination,omitempty" diff:"delete_on_termination"`
	DeviceIndex         int32      `bson:"device_index,omitempty" dynamodbav:"device_index,omitempty" json:"device_index,omitempty" diff:"device_index"`
	InstanceId          string     `bson:"instance_id,omitempty" dynamodbav:"instance_id,omitempty" json:"instance_id,omitempty" diff:"instance_id"`
	InstanceOwnerId     string     `bson:"instance_owner_id,omitempty" dynamodbav:"instance_owner_id,omitempty" json:"instance_owner_id,omitempty" diff:"instance_owner_id"`
	NetworkCardIndex    int32      `bson:"network_card_index,omitempty" dynamodbav:"network_card_index,omitempty" json:"network_card_index,omitempty" diff:"network_card_index"`
	Status              string     `bson:"status,omitempty" dynamodbav:"status,omitempty" json:"status,omitempty" diff:"status"`
}

type Ipv4PrefixSpecification struct {
	Ipv4Prefix string `bson:"ipv4_prefix,omitempty" dynamodbav:"ipv4_prefix,omitempty" json:"ipv4_prefix,omitempty" diff:"ipv4_prefix"`
}

type NetworkInterfaceIpv6Address struct {
	Ipv6Address string `bson:"ipv6_address,omitempty" dynamodbav:"ipv6_address,omitempty" json:"ipv6_address,omitempty" diff:"ipv6_address"`
}

type Ipv6PrefixSpecification struct {
	Ipv6Prefix string `bson:"ipv6_prefix,omitempty" dynamodbav:"ipv6_prefix,omitempty" json:"ipv6_prefix,omitempty" diff:"ipv6_prefix"`
}

type NetworkInterfacePrivateIpAddress struct {
	Association      *NetworkInterfaceAssociation `bson:"association,omitempty" dynamodbav:"association,omitempty" json:"association,omitempty" diff:"association"`
	Primary          bool                         `bson:"primary,omitempty" dynamodbav:"primary" json:"primary,omitempty" diff:"primary"`
	PrivateDnsName   string                       `bson:"private_dns_name,omitempty" dynamodbav:"private_dns_name,omitempty" json:"private_dns_name,omitempty" diff:"private_dns_name"`
	PrivateIpAddress string                       `bson:"private_ip_address,omitempty" dynamodbav:"private_ip_address,omitempty" json:"private_ip_address,omitempty" diff:"private_ip_address"`
}

type RecurringCharge struct {
	Amount    float64 `bson:"amount,omitempty" dynamodbav:"amount,omitempty" json:"amount,omitempty" diff:"amount"`
	Frequency string  `bson:"frequency,omitempty" dynamodbav:"frequency,omitempty" json:"frequency,omitempty" diff:"frequency"`
}

type RouteTableAssociation struct {
	AssociationState        *RouteTableAssociationState `bson:"association_state,omitempty" dynamodbav:"association_state,omitempty" json:"association_state,omitempty" diff:"association_state"`
	GatewayId               string                      `bson:"gateway_id,omitempty" dynamodbav:"gateway_id,omitempty" json:"gateway_id,omitempty" diff:"gateway_id"`
	Main                    bool                        `bson:"main,omitempty" dynamodbav:"main" json:"main,omitempty" diff:"main"`
	RouteTableAssociationId string                      `bson:"route_table_association_id,omitempty" dynamodbav:"route_table_association_id,omitempty" json:"route_table_association_id,omitempty" diff:"route_table_association_id"`
	RouteTableId            string                      `bson:"route_table_id,omitempty" dynamodbav:"route_table_id,omitempty" inventory_primary_key:"true" json:"route_table_id,omitempty" diff:"route_table_id,identifier"`
	SubnetId                string                      `bson:"subnet_id,omitempty" dynamodbav:"subnet_id,omitempty" json:"subnet_id,omitempty" diff:"subnet_id"`
}

type RouteTableAssociationState struct {
	State         string `bson:"state,omitempty" dynamodbav:"state,omitempty" json:"state,omitempty" diff:"state"`
	StatusMessage string `bson:"status_message,omitempty" dynamodbav:"status_message,omitempty" json:"status_message,omitempty" diff:"status_message"`
}

type PropagatingVgw struct {
	GatewayId string `bson:"gateway_id,omitempty" dynamodbav:"gateway_id,omitempty" json:"gateway_id,omitempty" diff:"gateway_id"`
}

type Route struct {
	CarrierGatewayId            string `bson:"carrier_gateway_id,omitempty" dynamodbav:"carrier_gateway_id,omitempty" json:"carrier_gateway_id,omitempty" diff:"carrier_gateway_id"`
	CoreNetworkArn              string `bson:"core_network_arn,omitempty" dynamodbav:"core_network_arn,omitempty" json:"core_network_arn,omitempty" diff:"core_network_arn"`
	DestinationCidrBlock        string `bson:"destination_cidr_block,omitempty" dynamodbav:"destination_cidr_block,omitempty" json:"destination_cidr_block,omitempty" diff:"destination_cidr_block"`
	DestinationIpv6CidrBlock    string `bson:"destination_ipv6_cidr_block,omitempty" dynamodbav:"destination_ipv6_cidr_block,omitempty" json:"destination_ipv6_cidr_block,omitempty" diff:"destination_ipv6_cidr_block"`
	DestinationPrefixListId     string `bson:"destination_prefix_list_id,omitempty" dynamodbav:"destination_prefix_list_id,omitempty" json:"destination_prefix_list_id,omitempty" diff:"destination_prefix_list_id"`
	EgressOnlyInternetGatewayId string `bson:"egress_only_internet_gateway_id,omitempty" dynamodbav:"egress_only_internet_gateway_id,omitempty" json:"egress_only_internet_gateway_id,omitempty" diff:"egress_only_internet_gateway_id"`
	GatewayId                   string `bson:"gateway_id,omitempty" dynamodbav:"gateway_id,omitempty" json:"gateway_id,omitempty" diff:"gateway_id"`
	InstanceId                  string `bson:"instance_id,omitempty" dynamodbav:"instance_id,omitempty" json:"instance_id,omitempty" diff:"instance_id"`
	InstanceOwnerId             string `bson:"instance_owner_id,omitempty" dynamodbav:"instance_owner_id,omitempty" json:"instance_owner_id,omitempty" diff:"instance_owner_id"`
	LocalGatewayId              string `bson:"local_gateway_id,omitempty" dynamodbav:"local_gateway_id,omitempty" json:"local_gateway_id,omitempty" diff:"local_gateway_id"`
	NatGatewayId                string `bson:"nat_gateway_id,omitempty" dynamodbav:"nat_gateway_id,omitempty" json:"nat_gateway_id,omitempty" diff:"nat_gateway_id"`
	NetworkInterfaceId          string `bson:"network_interface_id,omitempty" dynamodbav:"network_interface_id,omitempty" json:"network_interface_id,omitempty" diff:"network_interface_id"`
	Origin                      string `bson:"origin,omitempty" dynamodbav:"origin,omitempty" json:"origin,omitempty" diff:"origin"`
	State                       string `bson:"state,omitempty" dynamodbav:"state,omitempty" json:"state,omitempty" diff:"state"`
	TransitGatewayId            string `bson:"transit_gateway_id,omitempty" dynamodbav:"transit_gateway_id,omitempty" json:"transit_gateway_id,omitempty" diff:"transit_gateway_id"`
	VpcPeeringConnectionId      string `bson:"vpc_peering_connection_id,omitempty" dynamodbav:"vpc_peering_connection_id,omitempty" json:"vpc_peering_connection_id,omitempty" diff:"vpc_peering_connection_id"`
}

type IpPermission struct {
	FromPort         int32              `bson:"from_port,omitempty" dynamodbav:"from_port,omitempty" json:"from_port,omitempty" diff:"from_port"`
	IpProtocol       string             `bson:"ip_protocol,omitempty" dynamodbav:"ip_protocol,omitempty" json:"ip_protocol,omitempty" diff:"ip_protocol"`
	IpRanges         []*IpRange         `bson:"ip_ranges,omitempty" dynamodbav:"ip_ranges,omitempty" json:"ip_ranges,omitempty" diff:"ip_ranges"`
	Ipv6Ranges       []*Ipv6Range       `bson:"ipv6_ranges,omitempty" dynamodbav:"ipv6_ranges,omitempty" json:"ipv6_ranges,omitempty" diff:"ipv6_ranges"`
	PrefixListIds    []*PrefixListId    `bson:"prefix_list_ids,omitempty" dynamodbav:"prefix_list_ids,omitempty" json:"prefix_list_ids,omitempty" diff:"prefix_list_ids"`
	ToPort           int32              `bson:"to_port,omitempty" dynamodbav:"to_port,omitempty" json:"to_port,omitempty" diff:"to_port"`
	UserIdGroupPairs []*UserIdGroupPair `bson:"user_id_group_pairs,omitempty" dynamodbav:"user_id_group_pairs,omitempty" json:"user_id_group_pairs,omitempty" diff:"user_id_group_pairs"`
}

type IpRange struct {
	CidrIp      string `bson:"cidr_ip,omitempty" dynamodbav:"cidr_ip,omitempty" json:"cidr_ip,omitempty" diff:"cidr_ip"`
	Description string `bson:"description,omitempty" dynamodbav:"description,omitempty" json:"description,omitempty" diff:"description"`
}

type Ipv6Range struct {
	CidrIpv6    string `bson:"cidr_ipv6,omitempty" dynamodbav:"cidr_ipv6,omitempty" json:"cidr_ipv6,omitempty" diff:"cidr_ipv6"`
	Description string `bson:"description,omitempty" dynamodbav:"description,omitempty" json:"description,omitempty" diff:"description"`
}

type PrefixListId struct {
	Description  string `bson:"description,omitempty" dynamodbav:"description,omitempty" json:"description,omitempty" diff:"description"`
	PrefixListId string `bson:"prefix_list_id,omitempty" dynamodbav:"prefix_list_id,omitempty" json:"prefix_list_id,omitempty" diff:"prefix_list_id"`
}

type UserIdGroupPair struct {
	Description            string `bson:"description,omitempty" dynamodbav:"description,omitempty" json:"description,omitempty" diff:"description"`
	GroupId                string `bson:"group_id,omitempty" dynamodbav:"group_id,omitempty" inventory_primary_key:"true" json:"group_id,omitempty" diff:"group_id,identifier"`
	GroupName              string `bson:"group_name,omitempty" dynamodbav:"group_name,omitempty" json:"group_name,omitempty" diff:"group_name"`
	PeeringStatus          string `bson:"peering_status,omitempty" dynamodbav:"peering_status,omitempty" json:"peering_status,omitempty" diff:"peering_status"`
	UserId                 string `bson:"user_id,omitempty" dynamodbav:"user_id,omitempty" json:"user_id,omitempty" diff:"user_id"`
	VpcId                  string `bson:"vpc_id,omitempty" dynamodbav:"vpc_id,omitempty" json:"vpc_id,omitempty" diff:"vpc_id"`
	VpcPeeringConnectionId string `bson:"vpc_peering_connection_id,omitempty" dynamodbav:"vpc_peering_connection_id,omitempty" json:"vpc_peering_connection_id,omitempty" diff:"vpc_peering_connection_id"`
}

type SubnetIpv6CidrBlockAssociation struct {
	AssociationId      string                `bson:"association_id,omitempty" dynamodbav:"association_id,omitempty" json:"association_id,omitempty" diff:"association_id"`
	Ipv6CidrBlock      string                `bson:"ipv6_cidr_block,omitempty" dynamodbav:"ipv6_cidr_block,omitempty" json:"ipv6_cidr_block,omitempty" diff:"ipv6_cidr_block"`
	Ipv6CidrBlockState *SubnetCidrBlockState `bson:"ipv6_cidr_block_state,omitempty" dynamodbav:"ipv6_cidr_block_state,omitempty" json:"ipv6_cidr_block_state,omitempty" diff:"ipv6_cidr_block_state"`
}

type SubnetCidrBlockState struct {
	State         string `bson:"state,omitempty" dynamodbav:"state,omitempty" json:"state,omitempty" diff:"state"`
	StatusMessage string `bson:"status_message,omitempty" dynamodbav:"status_message,omitempty" json:"status_message,omitempty" diff:"status_message"`
}

type PrivateDnsNameOptionsOnLaunch struct {
	EnableResourceNameDnsAAAARecord bool   `bson:"enable_resource_name_dns_aaaa_record,omitempty" dynamodbav:"enable_resource_name_dns_aaaa_record" json:"enable_resource_name_dns_aaaa_record,omitempty" diff:"enable_resource_name_dns_aaaa_record"`
	EnableResourceNameDnsARecord    bool   `bson:"enable_resource_name_dns_a_record,omitempty" dynamodbav:"enable_resource_name_dns_a_record" json:"enable_resource_name_dns_a_record,omitempty" diff:"enable_resource_name_dns_a_record"`
	HostnameType                    string `bson:"hostname_type,omitempty" dynamodbav:"hostname_type,omitempty" json:"hostname_type,omitempty" diff:"hostname_type"`
}

type PeeringTgwInfo struct {
	OwnerId          string `bson:"owner_id,omitempty" dynamodbav:"owner_id,omitempty" json:"owner_id,omitempty" diff:"owner_id"`
	Region           string `bson:"region,omitempty" dynamodbav:"region,omitempty" json:"region,omitempty" diff:"region"`
	TransitGatewayId string `bson:"transit_gateway_id,omitempty" dynamodbav:"transit_gateway_id,omitempty" json:"transit_gateway_id,omitempty" diff:"transit_gateway_id"`
}

type PeeringAttachmentStatus struct {
	Code    string `bson:"code,omitempty" dynamodbav:"code,omitempty" json:"code,omitempty" diff:"code"`
	Message string `bson:"message,omitempty" dynamodbav:"message,omitempty" json:"message,omitempty" diff:"message"`
}

type TransitGatewayVpcAttachmentOptions struct {
	ApplianceModeSupport string `bson:"appliance_mode_support,omitempty" dynamodbav:"appliance_mode_support,omitempty" json:"appliance_mode_support,omitempty" diff:"appliance_mode_support"`
	DnsSupport           string `bson:"dns_support,omitempty" dynamodbav:"dns_support,omitempty" json:"dns_support,omitempty" diff:"dns_support"`
	Ipv6Support          string `bson:"ipv6_support,omitempty" dynamodbav:"ipv6_support,omitempty" json:"ipv6_support,omitempty" diff:"ipv6_support"`
}

type TransitGatewayOptions struct {
	AmazonSideAsn                  int64    `bson:"amazon_side_asn,omitempty" dynamodbav:"amazon_side_asn,omitempty" json:"amazon_side_asn,omitempty" diff:"amazon_side_asn"`
	AssociationDefaultRouteTableId string   `bson:"association_default_route_table_id,omitempty" dynamodbav:"association_default_route_table_id,omitempty" json:"association_default_route_table_id,omitempty" diff:"association_default_route_table_id"`
	AutoAcceptSharedAttachments    string   `bson:"auto_accept_shared_attachments,omitempty" dynamodbav:"auto_accept_shared_attachments,omitempty" json:"auto_accept_shared_attachments,omitempty" diff:"auto_accept_shared_attachments"`
	DefaultRouteTableAssociation   string   `bson:"default_route_table_association,omitempty" dynamodbav:"default_route_table_association,omitempty" json:"default_route_table_association,omitempty" diff:"default_route_table_association"`
	DefaultRouteTablePropagation   string   `bson:"default_route_table_propagation,omitempty" dynamodbav:"default_route_table_propagation,omitempty" json:"default_route_table_propagation,omitempty" diff:"default_route_table_propagation"`
	DnsSupport                     string   `bson:"dns_support,omitempty" dynamodbav:"dns_support,omitempty" json:"dns_support,omitempty" diff:"dns_support"`
	MulticastSupport               string   `bson:"multicast_support,omitempty" dynamodbav:"multicast_support,omitempty" json:"multicast_support,omitempty" diff:"multicast_support"`
	PropagationDefaultRouteTableId string   `bson:"propagation_default_route_table_id,omitempty" dynamodbav:"propagation_default_route_table_id,omitempty" json:"propagation_default_route_table_id,omitempty" diff:"propagation_default_route_table_id"`
	TransitGatewayCidrBlocks       []string `bson:"transit_gateway_cidr_blocks,omitempty" dynamodbav:"transit_gateway_cidr_blocks,omitempty" json:"transit_gateway_cidr_blocks,omitempty" diff:"transit_gateway_cidr_blocks"`
	VpnEcmpSupport                 string   `bson:"vpn_ecmp_support,omitempty" dynamodbav:"vpn_ecmp_support,omitempty" json:"vpn_ecmp_support,omitempty" diff:"vpn_ecmp_support"`
}

type VolumeAttachment struct {
	AttachTime          *time.Time `bson:"attach_time,omitempty" dynamodbav:"attach_time,unixtime,omitempty" json:"attach_time,omitempty" diff:"attach_time"`
	DeleteOnTermination bool       `bson:"delete_on_termination,omitempty" dynamodbav:"delete_on_termination" json:"delete_on_termination,omitempty" diff:"delete_on_termination"`
	Device              string     `bson:"device,omitempty" dynamodbav:"device,omitempty" json:"device,omitempty" diff:"device"`
	InstanceId          string     `bson:"instance_id,omitempty" dynamodbav:"instance_id,omitempty" json:"instance_id,omitempty" diff:"instance_id"`
	State               string     `bson:"state,omitempty" dynamodbav:"state,omitempty" json:"state,omitempty" diff:"state"`
	VolumeId            string     `bson:"volume_id,omitempty" dynamodbav:"volume_id,omitempty" inventory_primary_key:"true" json:"volume_id,omitempty" diff:"volume_id,identifier"`
}

type DnsEntry struct {
	DnsName      string `bson:"dns_name,omitempty" dynamodbav:"dns_name,omitempty" json:"dns_name,omitempty" diff:"dns_name"`
	HostedZoneId string `bson:"hosted_zone_id,omitempty" dynamodbav:"hosted_zone_id,omitempty" json:"hosted_zone_id,omitempty" diff:"hosted_zone_id"`
}

type SecurityGroupIdentifier struct {
	GroupId   string `bson:"group_id,omitempty" dynamodbav:"group_id,omitempty" json:"group_id,omitempty" diff:"group_id"`
	GroupName string `bson:"group_name,omitempty" dynamodbav:"group_name,omitempty" json:"group_name,omitempty" diff:"group_name"`
}

type LastError struct {
	Code    string `bson:"code,omitempty" dynamodbav:"code,omitempty" json:"code,omitempty" diff:"code"`
	Message string `bson:"message,omitempty" dynamodbav:"message,omitempty" json:"message,omitempty" diff:"message"`
}

type VpcPeeringConnectionVpcInfo struct {
	CidrBlock        string                                  `bson:"cidr_block,omitempty" dynamodbav:"cidr_block,omitempty" json:"cidr_block,omitempty" diff:"cidr_block"`
	CidrBlockSet     []*CidrBlock                            `bson:"cidr_block_set,omitempty" dynamodbav:"cidr_block_set,omitempty" json:"cidr_block_set,omitempty" diff:"cidr_block_set"`
	Ipv6CidrBlockSet []*Ipv6CidrBlock                        `bson:"ipv6_cidr_block_set,omitempty" dynamodbav:"ipv6_cidr_block_set,omitempty" json:"ipv6_cidr_block_set,omitempty" diff:"ipv6_cidr_block_set"`
	OwnerId          string                                  `bson:"owner_id,omitempty" dynamodbav:"owner_id,omitempty" json:"owner_id,omitempty" diff:"owner_id"`
	PeeringOptions   *VpcPeeringConnectionOptionsDescription `bson:"peering_options,omitempty" dynamodbav:"peering_options,omitempty" json:"peering_options,omitempty" diff:"peering_options"`
	Region           string                                  `bson:"region,omitempty" dynamodbav:"region,omitempty" json:"region,omitempty" diff:"region"`
	VpcId            string                                  `bson:"vpc_id,omitempty" dynamodbav:"vpc_id,omitempty" json:"vpc_id,omitempty" diff:"vpc_id"`
}

type CidrBlock struct {
	CidrBlock string `bson:"cidr_block,omitempty" dynamodbav:"cidr_block,omitempty" json:"cidr_block,omitempty" diff:"cidr_block"`
}

type Ipv6CidrBlock struct {
	Ipv6CidrBlock string `bson:"ipv6_cidr_block,omitempty" dynamodbav:"ipv6_cidr_block,omitempty" json:"ipv6_cidr_block,omitempty" diff:"ipv6_cidr_block"`
}

type VpcPeeringConnectionOptionsDescription struct {
	AllowDnsResolutionFromRemoteVpc            bool `bson:"allow_dns_resolution_from_remote_vpc,omitempty" dynamodbav:"allow_dns_resolution_from_remote_vpc" json:"allow_dns_resolution_from_remote_vpc,omitempty" diff:"allow_dns_resolution_from_remote_vpc"`
	AllowEgressFromLocalClassicLinkToRemoteVpc bool `bson:"allow_egress_from_local_classic_link_to_remote_vpc,omitempty" dynamodbav:"allow_egress_from_local_classic_link_to_remote_vpc" json:"allow_egress_from_local_classic_link_to_remote_vpc,omitempty" diff:"allow_egress_from_local_classic_link_to_remote_vpc"`
	AllowEgressFromLocalVpcToRemoteClassicLink bool `bson:"allow_egress_from_local_vpc_to_remote_classic_link,omitempty" dynamodbav:"allow_egress_from_local_vpc_to_remote_classic_link" json:"allow_egress_from_local_vpc_to_remote_classic_link,omitempty" diff:"allow_egress_from_local_vpc_to_remote_classic_link"`
}

type VpcPeeringConnectionStateReason struct {
	Code    string `bson:"code,omitempty" dynamodbav:"code,omitempty" json:"code,omitempty" diff:"code"`
	Message string `bson:"message,omitempty" dynamodbav:"message,omitempty" json:"message,omitempty" diff:"message"`
}

type VpcCidrBlockAssociation struct {
	AssociationId  string             `bson:"association_id,omitempty" dynamodbav:"association_id,omitempty" json:"association_id,omitempty" diff:"association_id"`
	CidrBlock      string             `bson:"cidr_block,omitempty" dynamodbav:"cidr_block,omitempty" json:"cidr_block,omitempty" diff:"cidr_block"`
	CidrBlockState *VpcCidrBlockState `bson:"cidr_block_state,omitempty" dynamodbav:"cidr_block_state,omitempty" json:"cidr_block_state,omitempty" diff:"cidr_block_state"`
}

type VpcCidrBlockState struct {
	State         string `bson:"state,omitempty" dynamodbav:"state,omitempty" json:"state,omitempty" diff:"state"`
	StatusMessage string `bson:"status_message,omitempty" dynamodbav:"status_message,omitempty" json:"status_message,omitempty" diff:"status_message"`
}

type VpcIpv6CidrBlockAssociation struct {
	AssociationId      string             `bson:"association_id,omitempty" dynamodbav:"association_id,omitempty" json:"association_id,omitempty" diff:"association_id"`
	Ipv6CidrBlock      string             `bson:"ipv6_cidr_block,omitempty" dynamodbav:"ipv6_cidr_block,omitempty" json:"ipv6_cidr_block,omitempty" diff:"ipv6_cidr_block"`
	Ipv6CidrBlockState *VpcCidrBlockState `bson:"ipv6_cidr_block_state,omitempty" dynamodbav:"ipv6_cidr_block_state,omitempty" json:"ipv6_cidr_block_state,omitempty" diff:"ipv6_cidr_block_state"`
	Ipv6Pool           string             `bson:"ipv6_pool,omitempty" dynamodbav:"ipv6_pool,omitempty" json:"ipv6_pool,omitempty" diff:"ipv6_pool"`
	NetworkBorderGroup string             `bson:"network_border_group,omitempty" dynamodbav:"network_border_group,omitempty" json:"network_border_group,omitempty" diff:"network_border_group"`
}

type VpcAttachment struct {
	State string `bson:"state,omitempty" dynamodbav:"state,omitempty" json:"state,omitempty" diff:"state"`
	VpcId string `bson:"vpc_id,omitempty" dynamodbav:"vpc_id,omitempty" json:"vpc_id,omitempty" diff:"vpc_id"`
}
