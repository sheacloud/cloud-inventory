//AUTOGENERATED CODE DO NOT EDIT
package ec2

type TransitGatewayVpcAttachment struct {
	CreationTime               int64                               `bson:"creation_time,omitempty" ion:"creation_time" dynamodbav:"creation_time,omitempty" parquet:"name=creation_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"creation_time,omitempty" diff:"creation_time"`
	Options                    *TransitGatewayVpcAttachmentOptions `bson:"options,omitempty" ion:"options" dynamodbav:"options,omitempty" parquet:"name=options" json:"options,omitempty" diff:"options"`
	State                      string                              `bson:"state,omitempty" ion:"state" dynamodbav:"state,omitempty" parquet:"name=state,type=BYTE_ARRAY,convertedtype=UTF8" json:"state,omitempty" diff:"state"`
	SubnetIds                  []string                            `bson:"subnet_ids,omitempty" ion:"subnet_ids" dynamodbav:"subnet_ids,omitempty" parquet:"name=subnet_ids,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"subnet_ids,omitempty" diff:"subnet_ids"`
	Tags                       map[string]string                   `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
	TransitGatewayAttachmentId string                              `bson:"transit_gateway_attachment_id,omitempty" ion:"transit_gateway_attachment_id" dynamodbav:"transit_gateway_attachment_id,omitempty" parquet:"name=transit_gateway_attachment_id,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"transit_gateway_attachment_id,omitempty" diff:"transit_gateway_attachment_id,identifier"`
	TransitGatewayId           string                              `bson:"transit_gateway_id,omitempty" ion:"transit_gateway_id" dynamodbav:"transit_gateway_id,omitempty" parquet:"name=transit_gateway_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"transit_gateway_id,omitempty" diff:"transit_gateway_id"`
	VpcId                      string                              `bson:"vpc_id,omitempty" ion:"vpc_id" dynamodbav:"vpc_id,omitempty" parquet:"name=vpc_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"vpc_id,omitempty" diff:"vpc_id"`
	VpcOwnerId                 string                              `bson:"vpc_owner_id,omitempty" ion:"vpc_owner_id" dynamodbav:"vpc_owner_id,omitempty" parquet:"name=vpc_owner_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"vpc_owner_id,omitempty" diff:"vpc_owner_id"`
	AccountId                  string                              `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region                     string                              `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime                 int64                               `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID              string                              `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
}
