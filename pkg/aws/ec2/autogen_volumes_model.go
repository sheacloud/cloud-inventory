//AUTOGENERATED CODE DO NOT EDIT
// This file is automatically generated from /internal/codegen/templates/aws_resource_file.tmpl
package ec2

type Volume struct {
	Attachments        []*VolumeAttachment `bson:"attachments,omitempty" ion:"attachments" dynamodbav:"attachments,omitempty" parquet:"name=attachments,type=MAP,convertedtype=LIST" json:"attachments,omitempty" diff:"attachments"`
	AvailabilityZone   string              `bson:"availability_zone,omitempty" ion:"availability_zone" dynamodbav:"availability_zone,omitempty" parquet:"name=availability_zone,type=BYTE_ARRAY,convertedtype=UTF8" json:"availability_zone,omitempty" diff:"availability_zone"`
	CreateTime         int64               `bson:"create_time,omitempty" ion:"create_time" dynamodbav:"create_time,omitempty" parquet:"name=create_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"create_time,omitempty" diff:"create_time"`
	Encrypted          bool                `bson:"encrypted,omitempty" ion:"encrypted" dynamodbav:"encrypted" parquet:"name=encrypted,type=BOOLEAN" json:"encrypted,omitempty" diff:"encrypted"`
	FastRestored       bool                `bson:"fast_restored,omitempty" ion:"fast_restored" dynamodbav:"fast_restored" parquet:"name=fast_restored,type=BOOLEAN" json:"fast_restored,omitempty" diff:"fast_restored"`
	Iops               int32               `bson:"iops,omitempty" ion:"iops" dynamodbav:"iops,omitempty" parquet:"name=iops,type=INT32" json:"iops,omitempty" diff:"iops"`
	KmsKeyId           string              `bson:"kms_key_id,omitempty" ion:"kms_key_id" dynamodbav:"kms_key_id,omitempty" parquet:"name=kms_key_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"kms_key_id,omitempty" diff:"kms_key_id"`
	MultiAttachEnabled bool                `bson:"multi_attach_enabled,omitempty" ion:"multi_attach_enabled" dynamodbav:"multi_attach_enabled" parquet:"name=multi_attach_enabled,type=BOOLEAN" json:"multi_attach_enabled,omitempty" diff:"multi_attach_enabled"`
	OutpostArn         string              `bson:"outpost_arn,omitempty" ion:"outpost_arn" dynamodbav:"outpost_arn,omitempty" parquet:"name=outpost_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"outpost_arn,omitempty" diff:"outpost_arn"`
	Size               int32               `bson:"size,omitempty" ion:"size" dynamodbav:"size,omitempty" parquet:"name=size,type=INT32" json:"size,omitempty" diff:"size"`
	SnapshotId         string              `bson:"snapshot_id,omitempty" ion:"snapshot_id" dynamodbav:"snapshot_id,omitempty" parquet:"name=snapshot_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"snapshot_id,omitempty" diff:"snapshot_id"`
	State              string              `bson:"state,omitempty" ion:"state" dynamodbav:"state,omitempty" parquet:"name=state,type=BYTE_ARRAY,convertedtype=UTF8" json:"state,omitempty" diff:"state"`
	Tags               map[string]string   `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
	Throughput         int32               `bson:"throughput,omitempty" ion:"throughput" dynamodbav:"throughput,omitempty" parquet:"name=throughput,type=INT32" json:"throughput,omitempty" diff:"throughput"`
	VolumeId           string              `bson:"volume_id,omitempty" ion:"volume_id" dynamodbav:"volume_id,omitempty" parquet:"name=volume_id,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"volume_id,omitempty" diff:"volume_id,identifier"`
	VolumeType         string              `bson:"volume_type,omitempty" ion:"volume_type" dynamodbav:"volume_type,omitempty" parquet:"name=volume_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"volume_type,omitempty" diff:"volume_type"`
	AccountId          string              `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region             string              `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime         int64               `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID      string              `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
}
