//AUTOGENERATED CODE DO NOT EDIT
// This file is automatically generated from /internal/codegen/templates/aws_resource_file.tmpl
package ec2

type Instance struct {
	AmiLaunchIndex                          int32                                     `bson:"ami_launch_index,omitempty" ion:"ami_launch_index" dynamodbav:"ami_launch_index,omitempty" parquet:"name=ami_launch_index,type=INT32" json:"ami_launch_index,omitempty" diff:"ami_launch_index"`
	Architecture                            string                                    `bson:"architecture,omitempty" ion:"architecture" dynamodbav:"architecture,omitempty" parquet:"name=architecture,type=BYTE_ARRAY,convertedtype=UTF8" json:"architecture,omitempty" diff:"architecture"`
	BlockDeviceMappings                     []*InstanceBlockDeviceMapping             `bson:"block_device_mappings,omitempty" ion:"block_device_mappings" dynamodbav:"block_device_mappings,omitempty" parquet:"name=block_device_mappings,type=MAP,convertedtype=LIST" json:"block_device_mappings,omitempty" diff:"block_device_mappings"`
	BootMode                                string                                    `bson:"boot_mode,omitempty" ion:"boot_mode" dynamodbav:"boot_mode,omitempty" parquet:"name=boot_mode,type=BYTE_ARRAY,convertedtype=UTF8" json:"boot_mode,omitempty" diff:"boot_mode"`
	CapacityReservationId                   string                                    `bson:"capacity_reservation_id,omitempty" ion:"capacity_reservation_id" dynamodbav:"capacity_reservation_id,omitempty" parquet:"name=capacity_reservation_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"capacity_reservation_id,omitempty" diff:"capacity_reservation_id"`
	CapacityReservationSpecification        *CapacityReservationSpecificationResponse `bson:"capacity_reservation_specification,omitempty" ion:"capacity_reservation_specification" dynamodbav:"capacity_reservation_specification,omitempty" parquet:"name=capacity_reservation_specification" json:"capacity_reservation_specification,omitempty" diff:"capacity_reservation_specification"`
	ClientToken                             string                                    `bson:"client_token,omitempty" ion:"client_token" dynamodbav:"client_token,omitempty" parquet:"name=client_token,type=BYTE_ARRAY,convertedtype=UTF8" json:"client_token,omitempty" diff:"client_token"`
	CpuOptions                              *CpuOptions                               `bson:"cpu_options,omitempty" ion:"cpu_options" dynamodbav:"cpu_options,omitempty" parquet:"name=cpu_options" json:"cpu_options,omitempty" diff:"cpu_options"`
	EbsOptimized                            bool                                      `bson:"ebs_optimized,omitempty" ion:"ebs_optimized" dynamodbav:"ebs_optimized" parquet:"name=ebs_optimized,type=BOOLEAN" json:"ebs_optimized,omitempty" diff:"ebs_optimized"`
	ElasticGpuAssociations                  []*ElasticGpuAssociation                  `bson:"elastic_gpu_associations,omitempty" ion:"elastic_gpu_associations" dynamodbav:"elastic_gpu_associations,omitempty" parquet:"name=elastic_gpu_associations,type=MAP,convertedtype=LIST" json:"elastic_gpu_associations,omitempty" diff:"elastic_gpu_associations"`
	ElasticInferenceAcceleratorAssociations []*ElasticInferenceAcceleratorAssociation `bson:"elastic_inference_accelerator_associations,omitempty" ion:"elastic_inference_accelerator_associations" dynamodbav:"elastic_inference_accelerator_associations,omitempty" parquet:"name=elastic_inference_accelerator_associations,type=MAP,convertedtype=LIST" json:"elastic_inference_accelerator_associations,omitempty" diff:"elastic_inference_accelerator_associations"`
	EnaSupport                              bool                                      `bson:"ena_support,omitempty" ion:"ena_support" dynamodbav:"ena_support" parquet:"name=ena_support,type=BOOLEAN" json:"ena_support,omitempty" diff:"ena_support"`
	EnclaveOptions                          *EnclaveOptions                           `bson:"enclave_options,omitempty" ion:"enclave_options" dynamodbav:"enclave_options,omitempty" parquet:"name=enclave_options" json:"enclave_options,omitempty" diff:"enclave_options"`
	HibernationOptions                      *HibernationOptions                       `bson:"hibernation_options,omitempty" ion:"hibernation_options" dynamodbav:"hibernation_options,omitempty" parquet:"name=hibernation_options" json:"hibernation_options,omitempty" diff:"hibernation_options"`
	Hypervisor                              string                                    `bson:"hypervisor,omitempty" ion:"hypervisor" dynamodbav:"hypervisor,omitempty" parquet:"name=hypervisor,type=BYTE_ARRAY,convertedtype=UTF8" json:"hypervisor,omitempty" diff:"hypervisor"`
	IamInstanceProfile                      *IamInstanceProfile                       `bson:"iam_instance_profile,omitempty" ion:"iam_instance_profile" dynamodbav:"iam_instance_profile,omitempty" parquet:"name=iam_instance_profile" json:"iam_instance_profile,omitempty" diff:"iam_instance_profile"`
	ImageId                                 string                                    `bson:"image_id,omitempty" ion:"image_id" dynamodbav:"image_id,omitempty" parquet:"name=image_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"image_id,omitempty" diff:"image_id"`
	InstanceId                              string                                    `bson:"instance_id,omitempty" ion:"instance_id" dynamodbav:"instance_id,omitempty" parquet:"name=instance_id,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"instance_id,omitempty" diff:"instance_id,identifier"`
	InstanceLifecycle                       string                                    `bson:"instance_lifecycle,omitempty" ion:"instance_lifecycle" dynamodbav:"instance_lifecycle,omitempty" parquet:"name=instance_lifecycle,type=BYTE_ARRAY,convertedtype=UTF8" json:"instance_lifecycle,omitempty" diff:"instance_lifecycle"`
	InstanceType                            string                                    `bson:"instance_type,omitempty" ion:"instance_type" dynamodbav:"instance_type,omitempty" parquet:"name=instance_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"instance_type,omitempty" diff:"instance_type"`
	Ipv6Address                             string                                    `bson:"ipv6_address,omitempty" ion:"ipv6_address" dynamodbav:"ipv6_address,omitempty" parquet:"name=ipv6_address,type=BYTE_ARRAY,convertedtype=UTF8" json:"ipv6_address,omitempty" diff:"ipv6_address"`
	KernelId                                string                                    `bson:"kernel_id,omitempty" ion:"kernel_id" dynamodbav:"kernel_id,omitempty" parquet:"name=kernel_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"kernel_id,omitempty" diff:"kernel_id"`
	KeyName                                 string                                    `bson:"key_name,omitempty" ion:"key_name" dynamodbav:"key_name,omitempty" parquet:"name=key_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"key_name,omitempty" diff:"key_name"`
	LaunchTime                              int64                                     `bson:"launch_time,omitempty" ion:"launch_time" dynamodbav:"launch_time,omitempty" parquet:"name=launch_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"launch_time,omitempty" diff:"launch_time"`
	Licenses                                []*LicenseConfiguration                   `bson:"licenses,omitempty" ion:"licenses" dynamodbav:"licenses,omitempty" parquet:"name=licenses,type=MAP,convertedtype=LIST" json:"licenses,omitempty" diff:"licenses"`
	MaintenanceOptions                      *InstanceMaintenanceOptions               `bson:"maintenance_options,omitempty" ion:"maintenance_options" dynamodbav:"maintenance_options,omitempty" parquet:"name=maintenance_options" json:"maintenance_options,omitempty" diff:"maintenance_options"`
	MetadataOptions                         *InstanceMetadataOptionsResponse          `bson:"metadata_options,omitempty" ion:"metadata_options" dynamodbav:"metadata_options,omitempty" parquet:"name=metadata_options" json:"metadata_options,omitempty" diff:"metadata_options"`
	Monitoring                              *Monitoring                               `bson:"monitoring,omitempty" ion:"monitoring" dynamodbav:"monitoring,omitempty" parquet:"name=monitoring" json:"monitoring,omitempty" diff:"monitoring"`
	NetworkInterfaces                       []*InstanceNetworkInterface               `bson:"network_interfaces,omitempty" ion:"network_interfaces" dynamodbav:"network_interfaces,omitempty" parquet:"name=network_interfaces,type=MAP,convertedtype=LIST" json:"network_interfaces,omitempty" diff:"network_interfaces"`
	OutpostArn                              string                                    `bson:"outpost_arn,omitempty" ion:"outpost_arn" dynamodbav:"outpost_arn,omitempty" parquet:"name=outpost_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"outpost_arn,omitempty" diff:"outpost_arn"`
	Placement                               *Placement                                `bson:"placement,omitempty" ion:"placement" dynamodbav:"placement,omitempty" parquet:"name=placement" json:"placement,omitempty" diff:"placement"`
	Platform                                string                                    `bson:"platform,omitempty" ion:"platform" dynamodbav:"platform,omitempty" parquet:"name=platform,type=BYTE_ARRAY,convertedtype=UTF8" json:"platform,omitempty" diff:"platform"`
	PlatformDetails                         string                                    `bson:"platform_details,omitempty" ion:"platform_details" dynamodbav:"platform_details,omitempty" parquet:"name=platform_details,type=BYTE_ARRAY,convertedtype=UTF8" json:"platform_details,omitempty" diff:"platform_details"`
	PrivateDnsName                          string                                    `bson:"private_dns_name,omitempty" ion:"private_dns_name" dynamodbav:"private_dns_name,omitempty" parquet:"name=private_dns_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"private_dns_name,omitempty" diff:"private_dns_name"`
	PrivateDnsNameOptions                   *PrivateDnsNameOptionsResponse            `bson:"private_dns_name_options,omitempty" ion:"private_dns_name_options" dynamodbav:"private_dns_name_options,omitempty" parquet:"name=private_dns_name_options" json:"private_dns_name_options,omitempty" diff:"private_dns_name_options"`
	PrivateIpAddress                        string                                    `bson:"private_ip_address,omitempty" ion:"private_ip_address" dynamodbav:"private_ip_address,omitempty" parquet:"name=private_ip_address,type=BYTE_ARRAY,convertedtype=UTF8" json:"private_ip_address,omitempty" diff:"private_ip_address"`
	ProductCodes                            []*ProductCode                            `bson:"product_codes,omitempty" ion:"product_codes" dynamodbav:"product_codes,omitempty" parquet:"name=product_codes,type=MAP,convertedtype=LIST" json:"product_codes,omitempty" diff:"product_codes"`
	PublicDnsName                           string                                    `bson:"public_dns_name,omitempty" ion:"public_dns_name" dynamodbav:"public_dns_name,omitempty" parquet:"name=public_dns_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"public_dns_name,omitempty" diff:"public_dns_name"`
	PublicIpAddress                         string                                    `bson:"public_ip_address,omitempty" ion:"public_ip_address" dynamodbav:"public_ip_address,omitempty" parquet:"name=public_ip_address,type=BYTE_ARRAY,convertedtype=UTF8" json:"public_ip_address,omitempty" diff:"public_ip_address"`
	RamdiskId                               string                                    `bson:"ramdisk_id,omitempty" ion:"ramdisk_id" dynamodbav:"ramdisk_id,omitempty" parquet:"name=ramdisk_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"ramdisk_id,omitempty" diff:"ramdisk_id"`
	RootDeviceName                          string                                    `bson:"root_device_name,omitempty" ion:"root_device_name" dynamodbav:"root_device_name,omitempty" parquet:"name=root_device_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"root_device_name,omitempty" diff:"root_device_name"`
	RootDeviceType                          string                                    `bson:"root_device_type,omitempty" ion:"root_device_type" dynamodbav:"root_device_type,omitempty" parquet:"name=root_device_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"root_device_type,omitempty" diff:"root_device_type"`
	SecurityGroups                          []*GroupIdentifier                        `bson:"security_groups,omitempty" ion:"security_groups" dynamodbav:"security_groups,omitempty" parquet:"name=security_groups,type=MAP,convertedtype=LIST" json:"security_groups,omitempty" diff:"security_groups"`
	SourceDestCheck                         bool                                      `bson:"source_dest_check,omitempty" ion:"source_dest_check" dynamodbav:"source_dest_check" parquet:"name=source_dest_check,type=BOOLEAN" json:"source_dest_check,omitempty" diff:"source_dest_check"`
	SpotInstanceRequestId                   string                                    `bson:"spot_instance_request_id,omitempty" ion:"spot_instance_request_id" dynamodbav:"spot_instance_request_id,omitempty" parquet:"name=spot_instance_request_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"spot_instance_request_id,omitempty" diff:"spot_instance_request_id"`
	SriovNetSupport                         string                                    `bson:"sriov_net_support,omitempty" ion:"sriov_net_support" dynamodbav:"sriov_net_support,omitempty" parquet:"name=sriov_net_support,type=BYTE_ARRAY,convertedtype=UTF8" json:"sriov_net_support,omitempty" diff:"sriov_net_support"`
	State                                   *InstanceState                            `bson:"state,omitempty" ion:"state" dynamodbav:"state,omitempty" parquet:"name=state" json:"state,omitempty" diff:"state"`
	StateReason                             *StateReason                              `bson:"state_reason,omitempty" ion:"state_reason" dynamodbav:"state_reason,omitempty" parquet:"name=state_reason" json:"state_reason,omitempty" diff:"state_reason"`
	StateTransitionReason                   string                                    `bson:"state_transition_reason,omitempty" ion:"state_transition_reason" dynamodbav:"state_transition_reason,omitempty" parquet:"name=state_transition_reason,type=BYTE_ARRAY,convertedtype=UTF8" json:"state_transition_reason,omitempty" diff:"state_transition_reason"`
	SubnetId                                string                                    `bson:"subnet_id,omitempty" ion:"subnet_id" dynamodbav:"subnet_id,omitempty" parquet:"name=subnet_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"subnet_id,omitempty" diff:"subnet_id"`
	Tags                                    map[string]string                         `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
	UsageOperation                          string                                    `bson:"usage_operation,omitempty" ion:"usage_operation" dynamodbav:"usage_operation,omitempty" parquet:"name=usage_operation,type=BYTE_ARRAY,convertedtype=UTF8" json:"usage_operation,omitempty" diff:"usage_operation"`
	UsageOperationUpdateTime                int64                                     `bson:"usage_operation_update_time,omitempty" ion:"usage_operation_update_time" dynamodbav:"usage_operation_update_time,omitempty" parquet:"name=usage_operation_update_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"usage_operation_update_time,omitempty" diff:"usage_operation_update_time"`
	VirtualizationType                      string                                    `bson:"virtualization_type,omitempty" ion:"virtualization_type" dynamodbav:"virtualization_type,omitempty" parquet:"name=virtualization_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"virtualization_type,omitempty" diff:"virtualization_type"`
	VpcId                                   string                                    `bson:"vpc_id,omitempty" ion:"vpc_id" dynamodbav:"vpc_id,omitempty" parquet:"name=vpc_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"vpc_id,omitempty" diff:"vpc_id"`
	AccountId                               string                                    `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region                                  string                                    `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime                              int64                                     `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID                           string                                    `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
}
