//AUTOGENERATED CODE DO NOT EDIT
package ec2

type Image struct {
	Architecture        string                `bson:"architecture,omitempty" ion:"architecture" dynamodbav:"architecture,omitempty" parquet:"name=architecture,type=BYTE_ARRAY,convertedtype=UTF8" json:"architecture,omitempty" diff:"architecture"`
	BlockDeviceMappings []*BlockDeviceMapping `bson:"block_device_mappings,omitempty" ion:"block_device_mappings" dynamodbav:"block_device_mappings,omitempty" parquet:"name=block_device_mappings,type=MAP,convertedtype=LIST" json:"block_device_mappings,omitempty" diff:"block_device_mappings"`
	BootMode            string                `bson:"boot_mode,omitempty" ion:"boot_mode" dynamodbav:"boot_mode,omitempty" parquet:"name=boot_mode,type=BYTE_ARRAY,convertedtype=UTF8" json:"boot_mode,omitempty" diff:"boot_mode"`
	CreationDate        string                `bson:"creation_date,omitempty" ion:"creation_date" dynamodbav:"creation_date,omitempty" parquet:"name=creation_date,type=BYTE_ARRAY,convertedtype=UTF8" json:"creation_date,omitempty" diff:"creation_date"`
	DeprecationTime     string                `bson:"deprecation_time,omitempty" ion:"deprecation_time" dynamodbav:"deprecation_time,omitempty" parquet:"name=deprecation_time,type=BYTE_ARRAY,convertedtype=UTF8" json:"deprecation_time,omitempty" diff:"deprecation_time"`
	Description         string                `bson:"description,omitempty" ion:"description" dynamodbav:"description,omitempty" parquet:"name=description,type=BYTE_ARRAY,convertedtype=UTF8" json:"description,omitempty" diff:"description"`
	EnaSupport          bool                  `bson:"ena_support,omitempty" ion:"ena_support" dynamodbav:"ena_support" parquet:"name=ena_support,type=BOOLEAN" json:"ena_support,omitempty" diff:"ena_support"`
	Hypervisor          string                `bson:"hypervisor,omitempty" ion:"hypervisor" dynamodbav:"hypervisor,omitempty" parquet:"name=hypervisor,type=BYTE_ARRAY,convertedtype=UTF8" json:"hypervisor,omitempty" diff:"hypervisor"`
	ImageId             string                `bson:"image_id,omitempty" ion:"image_id" dynamodbav:"image_id,omitempty" parquet:"name=image_id,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"image_id,omitempty" diff:"image_id,identifier"`
	ImageLocation       string                `bson:"image_location,omitempty" ion:"image_location" dynamodbav:"image_location,omitempty" parquet:"name=image_location,type=BYTE_ARRAY,convertedtype=UTF8" json:"image_location,omitempty" diff:"image_location"`
	ImageOwnerAlias     string                `bson:"image_owner_alias,omitempty" ion:"image_owner_alias" dynamodbav:"image_owner_alias,omitempty" parquet:"name=image_owner_alias,type=BYTE_ARRAY,convertedtype=UTF8" json:"image_owner_alias,omitempty" diff:"image_owner_alias"`
	ImageType           string                `bson:"image_type,omitempty" ion:"image_type" dynamodbav:"image_type,omitempty" parquet:"name=image_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"image_type,omitempty" diff:"image_type"`
	KernelId            string                `bson:"kernel_id,omitempty" ion:"kernel_id" dynamodbav:"kernel_id,omitempty" parquet:"name=kernel_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"kernel_id,omitempty" diff:"kernel_id"`
	Name                string                `bson:"name,omitempty" ion:"name" dynamodbav:"name,omitempty" parquet:"name=name,type=BYTE_ARRAY,convertedtype=UTF8" json:"name,omitempty" diff:"name"`
	OwnerId             string                `bson:"owner_id,omitempty" ion:"owner_id" dynamodbav:"owner_id,omitempty" parquet:"name=owner_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"owner_id,omitempty" diff:"owner_id"`
	Platform            string                `bson:"platform,omitempty" ion:"platform" dynamodbav:"platform,omitempty" parquet:"name=platform,type=BYTE_ARRAY,convertedtype=UTF8" json:"platform,omitempty" diff:"platform"`
	PlatformDetails     string                `bson:"platform_details,omitempty" ion:"platform_details" dynamodbav:"platform_details,omitempty" parquet:"name=platform_details,type=BYTE_ARRAY,convertedtype=UTF8" json:"platform_details,omitempty" diff:"platform_details"`
	ProductCodes        []*ProductCode        `bson:"product_codes,omitempty" ion:"product_codes" dynamodbav:"product_codes,omitempty" parquet:"name=product_codes,type=MAP,convertedtype=LIST" json:"product_codes,omitempty" diff:"product_codes"`
	Public              bool                  `bson:"public,omitempty" ion:"public" dynamodbav:"public" parquet:"name=public,type=BOOLEAN" json:"public,omitempty" diff:"public"`
	RamdiskId           string                `bson:"ramdisk_id,omitempty" ion:"ramdisk_id" dynamodbav:"ramdisk_id,omitempty" parquet:"name=ramdisk_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"ramdisk_id,omitempty" diff:"ramdisk_id"`
	RootDeviceName      string                `bson:"root_device_name,omitempty" ion:"root_device_name" dynamodbav:"root_device_name,omitempty" parquet:"name=root_device_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"root_device_name,omitempty" diff:"root_device_name"`
	RootDeviceType      string                `bson:"root_device_type,omitempty" ion:"root_device_type" dynamodbav:"root_device_type,omitempty" parquet:"name=root_device_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"root_device_type,omitempty" diff:"root_device_type"`
	SriovNetSupport     string                `bson:"sriov_net_support,omitempty" ion:"sriov_net_support" dynamodbav:"sriov_net_support,omitempty" parquet:"name=sriov_net_support,type=BYTE_ARRAY,convertedtype=UTF8" json:"sriov_net_support,omitempty" diff:"sriov_net_support"`
	State               string                `bson:"state,omitempty" ion:"state" dynamodbav:"state,omitempty" parquet:"name=state,type=BYTE_ARRAY,convertedtype=UTF8" json:"state,omitempty" diff:"state"`
	StateReason         *StateReason          `bson:"state_reason,omitempty" ion:"state_reason" dynamodbav:"state_reason,omitempty" parquet:"name=state_reason" json:"state_reason,omitempty" diff:"state_reason"`
	Tags                map[string]string     `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
	UsageOperation      string                `bson:"usage_operation,omitempty" ion:"usage_operation" dynamodbav:"usage_operation,omitempty" parquet:"name=usage_operation,type=BYTE_ARRAY,convertedtype=UTF8" json:"usage_operation,omitempty" diff:"usage_operation"`
	VirtualizationType  string                `bson:"virtualization_type,omitempty" ion:"virtualization_type" dynamodbav:"virtualization_type,omitempty" parquet:"name=virtualization_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"virtualization_type,omitempty" diff:"virtualization_type"`
	AccountId           string                `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region              string                `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime          int64                 `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID       string                `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
}
