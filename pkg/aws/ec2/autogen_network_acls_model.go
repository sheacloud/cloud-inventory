//AUTOGENERATED CODE DO NOT EDIT
package ec2

type NetworkAcl struct {
	Associations  []*NetworkAclAssociation `bson:"associations,omitempty" ion:"associations" dynamodbav:"associations,omitempty" parquet:"name=associations,type=MAP,convertedtype=LIST" json:"associations,omitempty" diff:"associations"`
	Entries       []*NetworkAclEntry       `bson:"entries,omitempty" ion:"entries" dynamodbav:"entries,omitempty" parquet:"name=entries,type=MAP,convertedtype=LIST" json:"entries,omitempty" diff:"entries"`
	IsDefault     bool                     `bson:"is_default,omitempty" ion:"is_default" dynamodbav:"is_default" parquet:"name=is_default,type=BOOLEAN" json:"is_default,omitempty" diff:"is_default"`
	NetworkAclId  string                   `bson:"network_acl_id,omitempty" ion:"network_acl_id" dynamodbav:"network_acl_id,omitempty" parquet:"name=network_acl_id,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"network_acl_id,omitempty" diff:"network_acl_id,identifier"`
	OwnerId       string                   `bson:"owner_id,omitempty" ion:"owner_id" dynamodbav:"owner_id,omitempty" parquet:"name=owner_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"owner_id,omitempty" diff:"owner_id"`
	Tags          map[string]string        `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
	VpcId         string                   `bson:"vpc_id,omitempty" ion:"vpc_id" dynamodbav:"vpc_id,omitempty" parquet:"name=vpc_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"vpc_id,omitempty" diff:"vpc_id"`
	AccountId     string                   `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region        string                   `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime    int64                    `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID string                   `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
}
