//AUTOGENERATED CODE DO NOT EDIT
package rds

type DBCluster struct {
	ActivityStreamKinesisStreamName    string                                `bson:"activity_stream_kinesis_stream_name,omitempty" ion:"activity_stream_kinesis_stream_name" dynamodbav:"activity_stream_kinesis_stream_name,omitempty" parquet:"name=activity_stream_kinesis_stream_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"activity_stream_kinesis_stream_name,omitempty" diff:"activity_stream_kinesis_stream_name"`
	ActivityStreamKmsKeyId             string                                `bson:"activity_stream_kms_key_id,omitempty" ion:"activity_stream_kms_key_id" dynamodbav:"activity_stream_kms_key_id,omitempty" parquet:"name=activity_stream_kms_key_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"activity_stream_kms_key_id,omitempty" diff:"activity_stream_kms_key_id"`
	ActivityStreamMode                 string                                `bson:"activity_stream_mode,omitempty" ion:"activity_stream_mode" dynamodbav:"activity_stream_mode,omitempty" parquet:"name=activity_stream_mode,type=BYTE_ARRAY,convertedtype=UTF8" json:"activity_stream_mode,omitempty" diff:"activity_stream_mode"`
	ActivityStreamStatus               string                                `bson:"activity_stream_status,omitempty" ion:"activity_stream_status" dynamodbav:"activity_stream_status,omitempty" parquet:"name=activity_stream_status,type=BYTE_ARRAY,convertedtype=UTF8" json:"activity_stream_status,omitempty" diff:"activity_stream_status"`
	AllocatedStorage                   int32                                 `bson:"allocated_storage,omitempty" ion:"allocated_storage" dynamodbav:"allocated_storage,omitempty" parquet:"name=allocated_storage,type=INT32" json:"allocated_storage,omitempty" diff:"allocated_storage"`
	AssociatedRoles                    []*DBClusterRole                      `bson:"associated_roles,omitempty" ion:"associated_roles" dynamodbav:"associated_roles,omitempty" parquet:"name=associated_roles,type=MAP,convertedtype=LIST" json:"associated_roles,omitempty" diff:"associated_roles"`
	AutoMinorVersionUpgrade            bool                                  `bson:"auto_minor_version_upgrade,omitempty" ion:"auto_minor_version_upgrade" dynamodbav:"auto_minor_version_upgrade" parquet:"name=auto_minor_version_upgrade,type=BOOLEAN" json:"auto_minor_version_upgrade,omitempty" diff:"auto_minor_version_upgrade"`
	AutomaticRestartTime               int64                                 `bson:"automatic_restart_time,omitempty" ion:"automatic_restart_time" dynamodbav:"automatic_restart_time,omitempty" parquet:"name=automatic_restart_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"automatic_restart_time,omitempty" diff:"automatic_restart_time"`
	AvailabilityZones                  []string                              `bson:"availability_zones,omitempty" ion:"availability_zones" dynamodbav:"availability_zones,omitempty" parquet:"name=availability_zones,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"availability_zones,omitempty" diff:"availability_zones"`
	BacktrackConsumedChangeRecords     int64                                 `bson:"backtrack_consumed_change_records,omitempty" ion:"backtrack_consumed_change_records" dynamodbav:"backtrack_consumed_change_records,omitempty" parquet:"name=backtrack_consumed_change_records,type=INT64" json:"backtrack_consumed_change_records,omitempty" diff:"backtrack_consumed_change_records"`
	BacktrackWindow                    int64                                 `bson:"backtrack_window,omitempty" ion:"backtrack_window" dynamodbav:"backtrack_window,omitempty" parquet:"name=backtrack_window,type=INT64" json:"backtrack_window,omitempty" diff:"backtrack_window"`
	BackupRetentionPeriod              int32                                 `bson:"backup_retention_period,omitempty" ion:"backup_retention_period" dynamodbav:"backup_retention_period,omitempty" parquet:"name=backup_retention_period,type=INT32" json:"backup_retention_period,omitempty" diff:"backup_retention_period"`
	Capacity                           int32                                 `bson:"capacity,omitempty" ion:"capacity" dynamodbav:"capacity,omitempty" parquet:"name=capacity,type=INT32" json:"capacity,omitempty" diff:"capacity"`
	CharacterSetName                   string                                `bson:"character_set_name,omitempty" ion:"character_set_name" dynamodbav:"character_set_name,omitempty" parquet:"name=character_set_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"character_set_name,omitempty" diff:"character_set_name"`
	CloneGroupId                       string                                `bson:"clone_group_id,omitempty" ion:"clone_group_id" dynamodbav:"clone_group_id,omitempty" parquet:"name=clone_group_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"clone_group_id,omitempty" diff:"clone_group_id"`
	ClusterCreateTime                  int64                                 `bson:"cluster_create_time,omitempty" ion:"cluster_create_time" dynamodbav:"cluster_create_time,omitempty" parquet:"name=cluster_create_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"cluster_create_time,omitempty" diff:"cluster_create_time"`
	CopyTagsToSnapshot                 bool                                  `bson:"copy_tags_to_snapshot,omitempty" ion:"copy_tags_to_snapshot" dynamodbav:"copy_tags_to_snapshot" parquet:"name=copy_tags_to_snapshot,type=BOOLEAN" json:"copy_tags_to_snapshot,omitempty" diff:"copy_tags_to_snapshot"`
	CrossAccountClone                  bool                                  `bson:"cross_account_clone,omitempty" ion:"cross_account_clone" dynamodbav:"cross_account_clone" parquet:"name=cross_account_clone,type=BOOLEAN" json:"cross_account_clone,omitempty" diff:"cross_account_clone"`
	CustomEndpoints                    []string                              `bson:"custom_endpoints,omitempty" ion:"custom_endpoints" dynamodbav:"custom_endpoints,omitempty" parquet:"name=custom_endpoints,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"custom_endpoints,omitempty" diff:"custom_endpoints"`
	DBClusterArn                       string                                `bson:"db_cluster_arn,omitempty" ion:"db_cluster_arn" dynamodbav:"db_cluster_arn,omitempty" parquet:"name=db_cluster_arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"db_cluster_arn,omitempty" diff:"db_cluster_arn,identifier"`
	DBClusterIdentifier                string                                `bson:"db_cluster_identifier,omitempty" ion:"db_cluster_identifier" dynamodbav:"db_cluster_identifier,omitempty" parquet:"name=db_cluster_identifier,type=BYTE_ARRAY,convertedtype=UTF8" json:"db_cluster_identifier,omitempty" diff:"db_cluster_identifier"`
	DBClusterInstanceClass             string                                `bson:"db_cluster_instance_class,omitempty" ion:"db_cluster_instance_class" dynamodbav:"db_cluster_instance_class,omitempty" parquet:"name=db_cluster_instance_class,type=BYTE_ARRAY,convertedtype=UTF8" json:"db_cluster_instance_class,omitempty" diff:"db_cluster_instance_class"`
	DBClusterMembers                   []*DBClusterMember                    `bson:"db_cluster_members,omitempty" ion:"db_cluster_members" dynamodbav:"db_cluster_members,omitempty" parquet:"name=db_cluster_members,type=MAP,convertedtype=LIST" json:"db_cluster_members,omitempty" diff:"db_cluster_members"`
	DBClusterOptionGroupMemberships    []*DBClusterOptionGroupStatus         `bson:"db_cluster_option_group_memberships,omitempty" ion:"db_cluster_option_group_memberships" dynamodbav:"db_cluster_option_group_memberships,omitempty" parquet:"name=db_cluster_option_group_memberships,type=MAP,convertedtype=LIST" json:"db_cluster_option_group_memberships,omitempty" diff:"db_cluster_option_group_memberships"`
	DBClusterParameterGroup            string                                `bson:"db_cluster_parameter_group,omitempty" ion:"db_cluster_parameter_group" dynamodbav:"db_cluster_parameter_group,omitempty" parquet:"name=db_cluster_parameter_group,type=BYTE_ARRAY,convertedtype=UTF8" json:"db_cluster_parameter_group,omitempty" diff:"db_cluster_parameter_group"`
	DBSubnetGroup                      string                                `bson:"db_subnet_group,omitempty" ion:"db_subnet_group" dynamodbav:"db_subnet_group,omitempty" parquet:"name=db_subnet_group,type=BYTE_ARRAY,convertedtype=UTF8" json:"db_subnet_group,omitempty" diff:"db_subnet_group"`
	DatabaseName                       string                                `bson:"database_name,omitempty" ion:"database_name" dynamodbav:"database_name,omitempty" parquet:"name=database_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"database_name,omitempty" diff:"database_name"`
	DbClusterResourceId                string                                `bson:"db_cluster_resource_id,omitempty" ion:"db_cluster_resource_id" dynamodbav:"db_cluster_resource_id,omitempty" parquet:"name=db_cluster_resource_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"db_cluster_resource_id,omitempty" diff:"db_cluster_resource_id"`
	DeletionProtection                 bool                                  `bson:"deletion_protection,omitempty" ion:"deletion_protection" dynamodbav:"deletion_protection" parquet:"name=deletion_protection,type=BOOLEAN" json:"deletion_protection,omitempty" diff:"deletion_protection"`
	DomainMemberships                  []*DomainMembership                   `bson:"domain_memberships,omitempty" ion:"domain_memberships" dynamodbav:"domain_memberships,omitempty" parquet:"name=domain_memberships,type=MAP,convertedtype=LIST" json:"domain_memberships,omitempty" diff:"domain_memberships"`
	EarliestBacktrackTime              int64                                 `bson:"earliest_backtrack_time,omitempty" ion:"earliest_backtrack_time" dynamodbav:"earliest_backtrack_time,omitempty" parquet:"name=earliest_backtrack_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"earliest_backtrack_time,omitempty" diff:"earliest_backtrack_time"`
	EarliestRestorableTime             int64                                 `bson:"earliest_restorable_time,omitempty" ion:"earliest_restorable_time" dynamodbav:"earliest_restorable_time,omitempty" parquet:"name=earliest_restorable_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"earliest_restorable_time,omitempty" diff:"earliest_restorable_time"`
	EnabledCloudwatchLogsExports       []string                              `bson:"enabled_cloudwatch_logs_exports,omitempty" ion:"enabled_cloudwatch_logs_exports" dynamodbav:"enabled_cloudwatch_logs_exports,omitempty" parquet:"name=enabled_cloudwatch_logs_exports,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"enabled_cloudwatch_logs_exports,omitempty" diff:"enabled_cloudwatch_logs_exports"`
	Endpoint                           string                                `bson:"endpoint,omitempty" ion:"endpoint" dynamodbav:"endpoint,omitempty" parquet:"name=endpoint,type=BYTE_ARRAY,convertedtype=UTF8" json:"endpoint,omitempty" diff:"endpoint"`
	Engine                             string                                `bson:"engine,omitempty" ion:"engine" dynamodbav:"engine,omitempty" parquet:"name=engine,type=BYTE_ARRAY,convertedtype=UTF8" json:"engine,omitempty" diff:"engine"`
	EngineMode                         string                                `bson:"engine_mode,omitempty" ion:"engine_mode" dynamodbav:"engine_mode,omitempty" parquet:"name=engine_mode,type=BYTE_ARRAY,convertedtype=UTF8" json:"engine_mode,omitempty" diff:"engine_mode"`
	EngineVersion                      string                                `bson:"engine_version,omitempty" ion:"engine_version" dynamodbav:"engine_version,omitempty" parquet:"name=engine_version,type=BYTE_ARRAY,convertedtype=UTF8" json:"engine_version,omitempty" diff:"engine_version"`
	GlobalWriteForwardingRequested     bool                                  `bson:"global_write_forwarding_requested,omitempty" ion:"global_write_forwarding_requested" dynamodbav:"global_write_forwarding_requested" parquet:"name=global_write_forwarding_requested,type=BOOLEAN" json:"global_write_forwarding_requested,omitempty" diff:"global_write_forwarding_requested"`
	GlobalWriteForwardingStatus        string                                `bson:"global_write_forwarding_status,omitempty" ion:"global_write_forwarding_status" dynamodbav:"global_write_forwarding_status,omitempty" parquet:"name=global_write_forwarding_status,type=BYTE_ARRAY,convertedtype=UTF8" json:"global_write_forwarding_status,omitempty" diff:"global_write_forwarding_status"`
	HostedZoneId                       string                                `bson:"hosted_zone_id,omitempty" ion:"hosted_zone_id" dynamodbav:"hosted_zone_id,omitempty" parquet:"name=hosted_zone_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"hosted_zone_id,omitempty" diff:"hosted_zone_id"`
	HttpEndpointEnabled                bool                                  `bson:"http_endpoint_enabled,omitempty" ion:"http_endpoint_enabled" dynamodbav:"http_endpoint_enabled" parquet:"name=http_endpoint_enabled,type=BOOLEAN" json:"http_endpoint_enabled,omitempty" diff:"http_endpoint_enabled"`
	IAMDatabaseAuthenticationEnabled   bool                                  `bson:"iam_database_authentication_enabled,omitempty" ion:"iam_database_authentication_enabled" dynamodbav:"iam_database_authentication_enabled" parquet:"name=iam_database_authentication_enabled,type=BOOLEAN" json:"iam_database_authentication_enabled,omitempty" diff:"iam_database_authentication_enabled"`
	Iops                               int32                                 `bson:"iops,omitempty" ion:"iops" dynamodbav:"iops,omitempty" parquet:"name=iops,type=INT32" json:"iops,omitempty" diff:"iops"`
	KmsKeyId                           string                                `bson:"kms_key_id,omitempty" ion:"kms_key_id" dynamodbav:"kms_key_id,omitempty" parquet:"name=kms_key_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"kms_key_id,omitempty" diff:"kms_key_id"`
	LatestRestorableTime               int64                                 `bson:"latest_restorable_time,omitempty" ion:"latest_restorable_time" dynamodbav:"latest_restorable_time,omitempty" parquet:"name=latest_restorable_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"latest_restorable_time,omitempty" diff:"latest_restorable_time"`
	MasterUsername                     string                                `bson:"master_username,omitempty" ion:"master_username" dynamodbav:"master_username,omitempty" parquet:"name=master_username,type=BYTE_ARRAY,convertedtype=UTF8" json:"master_username,omitempty" diff:"master_username"`
	MonitoringInterval                 int32                                 `bson:"monitoring_interval,omitempty" ion:"monitoring_interval" dynamodbav:"monitoring_interval,omitempty" parquet:"name=monitoring_interval,type=INT32" json:"monitoring_interval,omitempty" diff:"monitoring_interval"`
	MonitoringRoleArn                  string                                `bson:"monitoring_role_arn,omitempty" ion:"monitoring_role_arn" dynamodbav:"monitoring_role_arn,omitempty" parquet:"name=monitoring_role_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"monitoring_role_arn,omitempty" diff:"monitoring_role_arn"`
	MultiAZ                            bool                                  `bson:"multi_az,omitempty" ion:"multi_az" dynamodbav:"multi_az" parquet:"name=multi_az,type=BOOLEAN" json:"multi_az,omitempty" diff:"multi_az"`
	PendingModifiedValues              *ClusterPendingModifiedValues         `bson:"pending_modified_values,omitempty" ion:"pending_modified_values" dynamodbav:"pending_modified_values,omitempty" parquet:"name=pending_modified_values" json:"pending_modified_values,omitempty" diff:"pending_modified_values"`
	PercentProgress                    string                                `bson:"percent_progress,omitempty" ion:"percent_progress" dynamodbav:"percent_progress,omitempty" parquet:"name=percent_progress,type=BYTE_ARRAY,convertedtype=UTF8" json:"percent_progress,omitempty" diff:"percent_progress"`
	PerformanceInsightsEnabled         bool                                  `bson:"performance_insights_enabled,omitempty" ion:"performance_insights_enabled" dynamodbav:"performance_insights_enabled" parquet:"name=performance_insights_enabled,type=BOOLEAN" json:"performance_insights_enabled,omitempty" diff:"performance_insights_enabled"`
	PerformanceInsightsKMSKeyId        string                                `bson:"performance_insights_kms_key_id,omitempty" ion:"performance_insights_kms_key_id" dynamodbav:"performance_insights_kms_key_id,omitempty" parquet:"name=performance_insights_kms_key_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"performance_insights_kms_key_id,omitempty" diff:"performance_insights_kms_key_id"`
	PerformanceInsightsRetentionPeriod int32                                 `bson:"performance_insights_retention_period,omitempty" ion:"performance_insights_retention_period" dynamodbav:"performance_insights_retention_period,omitempty" parquet:"name=performance_insights_retention_period,type=INT32" json:"performance_insights_retention_period,omitempty" diff:"performance_insights_retention_period"`
	Port                               int32                                 `bson:"port,omitempty" ion:"port" dynamodbav:"port,omitempty" parquet:"name=port,type=INT32" json:"port,omitempty" diff:"port"`
	PreferredBackupWindow              string                                `bson:"preferred_backup_window,omitempty" ion:"preferred_backup_window" dynamodbav:"preferred_backup_window,omitempty" parquet:"name=preferred_backup_window,type=BYTE_ARRAY,convertedtype=UTF8" json:"preferred_backup_window,omitempty" diff:"preferred_backup_window"`
	PreferredMaintenanceWindow         string                                `bson:"preferred_maintenance_window,omitempty" ion:"preferred_maintenance_window" dynamodbav:"preferred_maintenance_window,omitempty" parquet:"name=preferred_maintenance_window,type=BYTE_ARRAY,convertedtype=UTF8" json:"preferred_maintenance_window,omitempty" diff:"preferred_maintenance_window"`
	PubliclyAccessible                 bool                                  `bson:"publicly_accessible,omitempty" ion:"publicly_accessible" dynamodbav:"publicly_accessible" parquet:"name=publicly_accessible,type=BOOLEAN" json:"publicly_accessible,omitempty" diff:"publicly_accessible"`
	ReadReplicaIdentifiers             []string                              `bson:"read_replica_identifiers,omitempty" ion:"read_replica_identifiers" dynamodbav:"read_replica_identifiers,omitempty" parquet:"name=read_replica_identifiers,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"read_replica_identifiers,omitempty" diff:"read_replica_identifiers"`
	ReaderEndpoint                     string                                `bson:"reader_endpoint,omitempty" ion:"reader_endpoint" dynamodbav:"reader_endpoint,omitempty" parquet:"name=reader_endpoint,type=BYTE_ARRAY,convertedtype=UTF8" json:"reader_endpoint,omitempty" diff:"reader_endpoint"`
	ReplicationSourceIdentifier        string                                `bson:"replication_source_identifier,omitempty" ion:"replication_source_identifier" dynamodbav:"replication_source_identifier,omitempty" parquet:"name=replication_source_identifier,type=BYTE_ARRAY,convertedtype=UTF8" json:"replication_source_identifier,omitempty" diff:"replication_source_identifier"`
	ScalingConfigurationInfo           *ScalingConfigurationInfo             `bson:"scaling_configuration_info,omitempty" ion:"scaling_configuration_info" dynamodbav:"scaling_configuration_info,omitempty" parquet:"name=scaling_configuration_info" json:"scaling_configuration_info,omitempty" diff:"scaling_configuration_info"`
	ServerlessV2ScalingConfiguration   *ServerlessV2ScalingConfigurationInfo `bson:"serverless_v2_scaling_configuration,omitempty" ion:"serverless_v2_scaling_configuration" dynamodbav:"serverless_v2_scaling_configuration,omitempty" parquet:"name=serverless_v2_scaling_configuration" json:"serverless_v2_scaling_configuration,omitempty" diff:"serverless_v2_scaling_configuration"`
	Status                             string                                `bson:"status,omitempty" ion:"status" dynamodbav:"status,omitempty" parquet:"name=status,type=BYTE_ARRAY,convertedtype=UTF8" json:"status,omitempty" diff:"status"`
	StorageEncrypted                   bool                                  `bson:"storage_encrypted,omitempty" ion:"storage_encrypted" dynamodbav:"storage_encrypted" parquet:"name=storage_encrypted,type=BOOLEAN" json:"storage_encrypted,omitempty" diff:"storage_encrypted"`
	StorageType                        string                                `bson:"storage_type,omitempty" ion:"storage_type" dynamodbav:"storage_type,omitempty" parquet:"name=storage_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"storage_type,omitempty" diff:"storage_type"`
	Tags                               map[string]string                     `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
	VpcSecurityGroups                  []*VpcSecurityGroupMembership         `bson:"vpc_security_groups,omitempty" ion:"vpc_security_groups" dynamodbav:"vpc_security_groups,omitempty" parquet:"name=vpc_security_groups,type=MAP,convertedtype=LIST" json:"vpc_security_groups,omitempty" diff:"vpc_security_groups"`
	AccountId                          string                                `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region                             string                                `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime                         int64                                 `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID                      string                                `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
}
