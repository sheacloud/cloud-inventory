//AUTOGENERATED CODE DO NOT EDIT
package elasticache

type CacheCluster struct {
	ARN                                string                          `bson:"arn,omitempty" ion:"arn" dynamodbav:"arn,omitempty" parquet:"name=arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"arn,omitempty" diff:"arn,identifier"`
	AtRestEncryptionEnabled            bool                            `bson:"at_rest_encryption_enabled,omitempty" ion:"at_rest_encryption_enabled" dynamodbav:"at_rest_encryption_enabled" parquet:"name=at_rest_encryption_enabled,type=BOOLEAN" json:"at_rest_encryption_enabled,omitempty" diff:"at_rest_encryption_enabled"`
	AuthTokenEnabled                   bool                            `bson:"auth_token_enabled,omitempty" ion:"auth_token_enabled" dynamodbav:"auth_token_enabled" parquet:"name=auth_token_enabled,type=BOOLEAN" json:"auth_token_enabled,omitempty" diff:"auth_token_enabled"`
	AuthTokenLastModifiedDate          int64                           `bson:"auth_token_last_modified_date,omitempty" ion:"auth_token_last_modified_date" dynamodbav:"auth_token_last_modified_date,omitempty" parquet:"name=auth_token_last_modified_date,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"auth_token_last_modified_date,omitempty" diff:"auth_token_last_modified_date"`
	AutoMinorVersionUpgrade            bool                            `bson:"auto_minor_version_upgrade,omitempty" ion:"auto_minor_version_upgrade" dynamodbav:"auto_minor_version_upgrade" parquet:"name=auto_minor_version_upgrade,type=BOOLEAN" json:"auto_minor_version_upgrade,omitempty" diff:"auto_minor_version_upgrade"`
	CacheClusterCreateTime             int64                           `bson:"cache_cluster_create_time,omitempty" ion:"cache_cluster_create_time" dynamodbav:"cache_cluster_create_time,omitempty" parquet:"name=cache_cluster_create_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"cache_cluster_create_time,omitempty" diff:"cache_cluster_create_time"`
	CacheClusterId                     string                          `bson:"cache_cluster_id,omitempty" ion:"cache_cluster_id" dynamodbav:"cache_cluster_id,omitempty" parquet:"name=cache_cluster_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"cache_cluster_id,omitempty" diff:"cache_cluster_id"`
	CacheClusterStatus                 string                          `bson:"cache_cluster_status,omitempty" ion:"cache_cluster_status" dynamodbav:"cache_cluster_status,omitempty" parquet:"name=cache_cluster_status,type=BYTE_ARRAY,convertedtype=UTF8" json:"cache_cluster_status,omitempty" diff:"cache_cluster_status"`
	CacheNodeType                      string                          `bson:"cache_node_type,omitempty" ion:"cache_node_type" dynamodbav:"cache_node_type,omitempty" parquet:"name=cache_node_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"cache_node_type,omitempty" diff:"cache_node_type"`
	CacheNodes                         []*CacheNode                    `bson:"cache_nodes,omitempty" ion:"cache_nodes" dynamodbav:"cache_nodes,omitempty" parquet:"name=cache_nodes,type=MAP,convertedtype=LIST" json:"cache_nodes,omitempty" diff:"cache_nodes"`
	CacheParameterGroup                *CacheParameterGroupStatus      `bson:"cache_parameter_group,omitempty" ion:"cache_parameter_group" dynamodbav:"cache_parameter_group,omitempty" parquet:"name=cache_parameter_group" json:"cache_parameter_group,omitempty" diff:"cache_parameter_group"`
	CacheSecurityGroups                []*CacheSecurityGroupMembership `bson:"cache_security_groups,omitempty" ion:"cache_security_groups" dynamodbav:"cache_security_groups,omitempty" parquet:"name=cache_security_groups,type=MAP,convertedtype=LIST" json:"cache_security_groups,omitempty" diff:"cache_security_groups"`
	CacheSubnetGroupName               string                          `bson:"cache_subnet_group_name,omitempty" ion:"cache_subnet_group_name" dynamodbav:"cache_subnet_group_name,omitempty" parquet:"name=cache_subnet_group_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"cache_subnet_group_name,omitempty" diff:"cache_subnet_group_name"`
	ClientDownloadLandingPage          string                          `bson:"client_download_landing_page,omitempty" ion:"client_download_landing_page" dynamodbav:"client_download_landing_page,omitempty" parquet:"name=client_download_landing_page,type=BYTE_ARRAY,convertedtype=UTF8" json:"client_download_landing_page,omitempty" diff:"client_download_landing_page"`
	ConfigurationEndpoint              *Endpoint                       `bson:"configuration_endpoint,omitempty" ion:"configuration_endpoint" dynamodbav:"configuration_endpoint,omitempty" parquet:"name=configuration_endpoint" json:"configuration_endpoint,omitempty" diff:"configuration_endpoint"`
	Engine                             string                          `bson:"engine,omitempty" ion:"engine" dynamodbav:"engine,omitempty" parquet:"name=engine,type=BYTE_ARRAY,convertedtype=UTF8" json:"engine,omitempty" diff:"engine"`
	EngineVersion                      string                          `bson:"engine_version,omitempty" ion:"engine_version" dynamodbav:"engine_version,omitempty" parquet:"name=engine_version,type=BYTE_ARRAY,convertedtype=UTF8" json:"engine_version,omitempty" diff:"engine_version"`
	LogDeliveryConfigurations          []*LogDeliveryConfiguration     `bson:"log_delivery_configurations,omitempty" ion:"log_delivery_configurations" dynamodbav:"log_delivery_configurations,omitempty" parquet:"name=log_delivery_configurations,type=MAP,convertedtype=LIST" json:"log_delivery_configurations,omitempty" diff:"log_delivery_configurations"`
	NotificationConfiguration          *NotificationConfiguration      `bson:"notification_configuration,omitempty" ion:"notification_configuration" dynamodbav:"notification_configuration,omitempty" parquet:"name=notification_configuration" json:"notification_configuration,omitempty" diff:"notification_configuration"`
	NumCacheNodes                      int32                           `bson:"num_cache_nodes,omitempty" ion:"num_cache_nodes" dynamodbav:"num_cache_nodes,omitempty" parquet:"name=num_cache_nodes,type=INT32" json:"num_cache_nodes,omitempty" diff:"num_cache_nodes"`
	PendingModifiedValues              *PendingModifiedValues          `bson:"pending_modified_values,omitempty" ion:"pending_modified_values" dynamodbav:"pending_modified_values,omitempty" parquet:"name=pending_modified_values" json:"pending_modified_values,omitempty" diff:"pending_modified_values"`
	PreferredAvailabilityZone          string                          `bson:"preferred_availability_zone,omitempty" ion:"preferred_availability_zone" dynamodbav:"preferred_availability_zone,omitempty" parquet:"name=preferred_availability_zone,type=BYTE_ARRAY,convertedtype=UTF8" json:"preferred_availability_zone,omitempty" diff:"preferred_availability_zone"`
	PreferredMaintenanceWindow         string                          `bson:"preferred_maintenance_window,omitempty" ion:"preferred_maintenance_window" dynamodbav:"preferred_maintenance_window,omitempty" parquet:"name=preferred_maintenance_window,type=BYTE_ARRAY,convertedtype=UTF8" json:"preferred_maintenance_window,omitempty" diff:"preferred_maintenance_window"`
	PreferredOutpostArn                string                          `bson:"preferred_outpost_arn,omitempty" ion:"preferred_outpost_arn" dynamodbav:"preferred_outpost_arn,omitempty" parquet:"name=preferred_outpost_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"preferred_outpost_arn,omitempty" diff:"preferred_outpost_arn"`
	ReplicationGroupId                 string                          `bson:"replication_group_id,omitempty" ion:"replication_group_id" dynamodbav:"replication_group_id,omitempty" parquet:"name=replication_group_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"replication_group_id,omitempty" diff:"replication_group_id"`
	ReplicationGroupLogDeliveryEnabled bool                            `bson:"replication_group_log_delivery_enabled,omitempty" ion:"replication_group_log_delivery_enabled" dynamodbav:"replication_group_log_delivery_enabled" parquet:"name=replication_group_log_delivery_enabled,type=BOOLEAN" json:"replication_group_log_delivery_enabled,omitempty" diff:"replication_group_log_delivery_enabled"`
	SecurityGroups                     []*SecurityGroupMembership      `bson:"security_groups,omitempty" ion:"security_groups" dynamodbav:"security_groups,omitempty" parquet:"name=security_groups,type=MAP,convertedtype=LIST" json:"security_groups,omitempty" diff:"security_groups"`
	SnapshotRetentionLimit             int32                           `bson:"snapshot_retention_limit,omitempty" ion:"snapshot_retention_limit" dynamodbav:"snapshot_retention_limit,omitempty" parquet:"name=snapshot_retention_limit,type=INT32" json:"snapshot_retention_limit,omitempty" diff:"snapshot_retention_limit"`
	SnapshotWindow                     string                          `bson:"snapshot_window,omitempty" ion:"snapshot_window" dynamodbav:"snapshot_window,omitempty" parquet:"name=snapshot_window,type=BYTE_ARRAY,convertedtype=UTF8" json:"snapshot_window,omitempty" diff:"snapshot_window"`
	TransitEncryptionEnabled           bool                            `bson:"transit_encryption_enabled,omitempty" ion:"transit_encryption_enabled" dynamodbav:"transit_encryption_enabled" parquet:"name=transit_encryption_enabled,type=BOOLEAN" json:"transit_encryption_enabled,omitempty" diff:"transit_encryption_enabled"`
	AccountId                          string                          `bson:"account_id,omitempty" ion:"account_id" dynamodbav:"account_id,omitempty" parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id,omitempty" diff:"account_id"`
	Region                             string                          `bson:"region,omitempty" ion:"region" dynamodbav:"region,omitempty" parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region,omitempty" diff:"region"`
	ReportTime                         int64                           `bson:"report_time,omitempty" ion:"report_time" dynamodbav:"report_time,omitempty" parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time,omitempty" diff:"report_time,immutable"`
	InventoryUUID                      string                          `bson:"_id,omitempty" ion:"_id" dynamodbav:"_id,omitempty" parquet:"name=inventory_uuid,type=BYTE_ARRAY,convertedtype=UTF8" json:"_id,omitempty" diff:"-"`
	Tags                               map[string]string               `bson:"tags,omitempty" ion:"tags" dynamodbav:"tags,omitempty" parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags,omitempty" diff:"tags"`
}
