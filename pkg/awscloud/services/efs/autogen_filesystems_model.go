//AUTOGENERATED CODE DO NOT EDIT
package efs

import (
	"time"
)

type FileSystemDescription struct {
	CreationTime                 *time.Time        `json:"-"`
	CreationToken                string            `parquet:"name=creation_token,type=BYTE_ARRAY,convertedtype=UTF8" json:"creation_token" diff:"creation_token"`
	FileSystemId                 string            `parquet:"name=file_system_id,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"file_system_id" diff:"file_system_id,identifier"`
	LifeCycleState               string            `parquet:"name=life_cycle_state,type=BYTE_ARRAY,convertedtype=UTF8" json:"life_cycle_state" diff:"life_cycle_state"`
	NumberOfMountTargets         int32             `parquet:"name=number_of_mount_targets,type=INT32" json:"number_of_mount_targets" diff:"number_of_mount_targets"`
	OwnerId                      string            `parquet:"name=owner_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"owner_id" diff:"owner_id"`
	PerformanceMode              string            `parquet:"name=performance_mode,type=BYTE_ARRAY,convertedtype=UTF8" json:"performance_mode" diff:"performance_mode"`
	SizeInBytes                  *FileSystemSize   `parquet:"name=size_in_bytes" json:"size_in_bytes" diff:"size_in_bytes"`
	Tags                         map[string]string `parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags" diff:"tags"`
	AvailabilityZoneId           string            `parquet:"name=availability_zone_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"availability_zone_id" diff:"availability_zone_id"`
	AvailabilityZoneName         string            `parquet:"name=availability_zone_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"availability_zone_name" diff:"availability_zone_name"`
	Encrypted                    bool              `parquet:"name=encrypted,type=BOOLEAN" json:"encrypted" diff:"encrypted"`
	FileSystemArn                string            `parquet:"name=file_system_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"file_system_arn" diff:"file_system_arn"`
	KmsKeyId                     string            `parquet:"name=kms_key_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"kms_key_id" diff:"kms_key_id"`
	Name                         string            `parquet:"name=name,type=BYTE_ARRAY,convertedtype=UTF8" json:"name" diff:"name"`
	ProvisionedThroughputInMibps float64           `parquet:"name=provisioned_throughput_in_mibps,type=DOUBLE" json:"provisioned_throughput_in_mibps" diff:"provisioned_throughput_in_mibps"`
	ThroughputMode               string            `parquet:"name=throughput_mode,type=BYTE_ARRAY,convertedtype=UTF8" json:"throughput_mode" diff:"throughput_mode"`
	AccountId                    string            `parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id" diff:"account_id"`
	Region                       string            `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region" diff:"region"`
	ReportTime                   int64             `parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time" diff:"report_time,immutable"`
	CreationTimeMilli            int64             `parquet:"name=creation_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"creation_time" diff:"creation_time"`
}

func (x *FileSystemDescription) GetReportTime() int64 {
	return x.ReportTime
}
