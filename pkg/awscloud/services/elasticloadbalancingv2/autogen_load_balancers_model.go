//AUTOGENERATED CODE DO NOT EDIT
package elasticloadbalancingv2

import (
	"time"
)

type LoadBalancer struct {
	AvailabilityZones     []*AvailabilityZone `parquet:"name=availability_zones,type=MAP,convertedtype=LIST" json:"availability_zones" diff:"availability_zones"`
	CanonicalHostedZoneId string              `parquet:"name=canonical_hosted_zone_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"canonical_hosted_zone_id" diff:"canonical_hosted_zone_id"`
	CreatedTime           *time.Time          `json:"-"`
	CustomerOwnedIpv4Pool string              `parquet:"name=customer_owned_ipv4_pool,type=BYTE_ARRAY,convertedtype=UTF8" json:"customer_owned_ipv4_pool" diff:"customer_owned_ipv4_pool"`
	DNSName               string              `parquet:"name=dns_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"dns_name" diff:"dns_name"`
	IpAddressType         string              `parquet:"name=ip_address_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"ip_address_type" diff:"ip_address_type"`
	LoadBalancerArn       string              `parquet:"name=load_balancer_arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"load_balancer_arn" diff:"load_balancer_arn,identifier"`
	LoadBalancerName      string              `parquet:"name=load_balancer_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"load_balancer_name" diff:"load_balancer_name"`
	Scheme                string              `parquet:"name=scheme,type=BYTE_ARRAY,convertedtype=UTF8" json:"scheme" diff:"scheme"`
	SecurityGroups        []string            `parquet:"name=security_groups,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"security_groups" diff:"security_groups"`
	State                 *LoadBalancerState  `parquet:"name=state" json:"state" diff:"state"`
	Type                  string              `parquet:"name=type,type=BYTE_ARRAY,convertedtype=UTF8" json:"type" diff:"type"`
	VpcId                 string              `parquet:"name=vpc_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"vpc_id" diff:"vpc_id"`
	AccountId             string              `parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id" diff:"account_id"`
	Region                string              `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region" diff:"region"`
	ReportTime            int64               `parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time" diff:"report_time,immutable"`
	Tags                  map[string]string   `parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags" diff:"tags"`
	Listeners             []*Listener         `parquet:"name=listeners,type=MAP,convertedtype=LIST" json:"listeners" diff:"listeners"`
	CreatedTimeMilli      int64               `parquet:"name=created_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"created_time" diff:"created_time"`
}

func (x *LoadBalancer) GetReportTime() int64 {
	return x.ReportTime
}
