//AUTOGENERATED CODE DO NOT EDIT
package ec2

import (
	"time"
)

type ReservedInstances struct {
	AvailabilityZone string `parquet:"name=availability_zone,type=BYTE_ARRAY,convertedtype=UTF8"`
	CurrencyCode string `parquet:"name=currency_code,type=BYTE_ARRAY,convertedtype=UTF8"`
	Duration int64 `parquet:"name=duration,type=INT64"`
	End *time.Time 
	FixedPrice float32 `parquet:"name=fixed_price,type=FLOAT"`
	InstanceCount int32 `parquet:"name=instance_count,type=INT32"`
	InstanceTenancy string `parquet:"name=instance_tenancy,type=BYTE_ARRAY,convertedtype=UTF8"`
	InstanceType string `parquet:"name=instance_type,type=BYTE_ARRAY,convertedtype=UTF8"`
	OfferingClass string `parquet:"name=offering_class,type=BYTE_ARRAY,convertedtype=UTF8"`
	OfferingType string `parquet:"name=offering_type,type=BYTE_ARRAY,convertedtype=UTF8"`
	ProductDescription string `parquet:"name=product_description,type=BYTE_ARRAY,convertedtype=UTF8"`
	RecurringCharges []*RecurringCharge `parquet:"name=recurring_charges,type=MAP,convertedtype=LIST"`
	ReservedInstancesId string `parquet:"name=reserved_instances_id,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true"`
	Scope string `parquet:"name=scope,type=BYTE_ARRAY,convertedtype=UTF8"`
	Start *time.Time 
	State string `parquet:"name=state,type=BYTE_ARRAY,convertedtype=UTF8"`
	TagsOld []*Tag `parquet:"name=tags_old,type=MAP,convertedtype=LIST"`
	UsagePrice float32 `parquet:"name=usage_price,type=FLOAT"`
	AccountId string `parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8"`
	Region string `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8"`
	ReportTime int64 `parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS"`
	EndMilli int64 `parquet:"name=end,type=INT64,convertedtype=TIMESTAMP_MILLIS"`
	StartMilli int64 `parquet:"name=start,type=INT64,convertedtype=TIMESTAMP_MILLIS"`
	Tags map[string]string `parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8"`
}

