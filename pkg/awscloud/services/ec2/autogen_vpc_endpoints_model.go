//AUTOGENERATED CODE DO NOT EDIT
package ec2

import (
	"time"
)

type VpcEndpoint struct {
	CreationTimestamp      *time.Time                 `json:"-"`
	DnsEntries             []*DnsEntry                `parquet:"name=dns_entries,type=MAP,convertedtype=LIST" json:"dns_entries" diff:"dns_entries"`
	Groups                 []*SecurityGroupIdentifier `parquet:"name=groups,type=MAP,convertedtype=LIST" json:"groups" diff:"groups"`
	LastError              *LastError                 `parquet:"name=last_error" json:"last_error" diff:"last_error"`
	NetworkInterfaceIds    []string                   `parquet:"name=network_interface_ids,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"network_interface_ids" diff:"network_interface_ids"`
	OwnerId                string                     `parquet:"name=owner_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"owner_id" diff:"owner_id"`
	PolicyDocument         string                     `parquet:"name=policy_document,type=BYTE_ARRAY,convertedtype=UTF8" json:"policy_document" diff:"policy_document"`
	PrivateDnsEnabled      bool                       `parquet:"name=private_dns_enabled,type=BOOLEAN" json:"private_dns_enabled" diff:"private_dns_enabled"`
	RequesterManaged       bool                       `parquet:"name=requester_managed,type=BOOLEAN" json:"requester_managed" diff:"requester_managed"`
	RouteTableIds          []string                   `parquet:"name=route_table_ids,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"route_table_ids" diff:"route_table_ids"`
	ServiceName            string                     `parquet:"name=service_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"service_name" diff:"service_name"`
	State                  string                     `parquet:"name=state,type=BYTE_ARRAY,convertedtype=UTF8" json:"state" diff:"state"`
	SubnetIds              []string                   `parquet:"name=subnet_ids,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"subnet_ids" diff:"subnet_ids"`
	Tags                   map[string]string          `parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags" diff:"tags"`
	VpcEndpointId          string                     `parquet:"name=vpc_endpoint_id,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"vpc_endpoint_id" diff:"vpc_endpoint_id,identifier"`
	VpcEndpointType        string                     `parquet:"name=vpc_endpoint_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"vpc_endpoint_type" diff:"vpc_endpoint_type"`
	VpcId                  string                     `parquet:"name=vpc_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"vpc_id" diff:"vpc_id"`
	AccountId              string                     `parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id" diff:"account_id"`
	Region                 string                     `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region" diff:"region"`
	ReportTime             int64                      `parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time" diff:"report_time,immutable"`
	CreationTimestampMilli int64                      `parquet:"name=creation_timestamp,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"creation_timestamp" diff:"creation_timestamp"`
}

func (x *VpcEndpoint) GetReportTime() int64 {
	return x.ReportTime
}
