//AUTOGENERATED CODE DO NOT EDIT
package ec2

type InstanceTypeInfo struct {
	AutoRecoverySupported         bool                      `parquet:"name=auto_recovery_supported,type=BOOLEAN" json:"auto_recovery_supported" diff:"auto_recovery_supported"`
	BareMetal                     bool                      `parquet:"name=bare_metal,type=BOOLEAN" json:"bare_metal" diff:"bare_metal"`
	BurstablePerformanceSupported bool                      `parquet:"name=burstable_performance_supported,type=BOOLEAN" json:"burstable_performance_supported" diff:"burstable_performance_supported"`
	CurrentGeneration             bool                      `parquet:"name=current_generation,type=BOOLEAN" json:"current_generation" diff:"current_generation"`
	DedicatedHostsSupported       bool                      `parquet:"name=dedicated_hosts_supported,type=BOOLEAN" json:"dedicated_hosts_supported" diff:"dedicated_hosts_supported"`
	EbsInfo                       *EbsInfo                  `parquet:"name=ebs_info" json:"ebs_info" diff:"ebs_info"`
	FpgaInfo                      *FpgaInfo                 `parquet:"name=fpga_info" json:"fpga_info" diff:"fpga_info"`
	FreeTierEligible              bool                      `parquet:"name=free_tier_eligible,type=BOOLEAN" json:"free_tier_eligible" diff:"free_tier_eligible"`
	GpuInfo                       *GpuInfo                  `parquet:"name=gpu_info" json:"gpu_info" diff:"gpu_info"`
	HibernationSupported          bool                      `parquet:"name=hibernation_supported,type=BOOLEAN" json:"hibernation_supported" diff:"hibernation_supported"`
	Hypervisor                    string                    `parquet:"name=hypervisor,type=BYTE_ARRAY,convertedtype=UTF8" json:"hypervisor" diff:"hypervisor"`
	InferenceAcceleratorInfo      *InferenceAcceleratorInfo `parquet:"name=inference_accelerator_info" json:"inference_accelerator_info" diff:"inference_accelerator_info"`
	InstanceStorageInfo           *InstanceStorageInfo      `parquet:"name=instance_storage_info" json:"instance_storage_info" diff:"instance_storage_info"`
	InstanceStorageSupported      bool                      `parquet:"name=instance_storage_supported,type=BOOLEAN" json:"instance_storage_supported" diff:"instance_storage_supported"`
	InstanceType                  string                    `parquet:"name=instance_type,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"instance_type" diff:"instance_type,identifier"`
	MemoryInfo                    *MemoryInfo               `parquet:"name=memory_info" json:"memory_info" diff:"memory_info"`
	NetworkInfo                   *NetworkInfo              `parquet:"name=network_info" json:"network_info" diff:"network_info"`
	PlacementGroupInfo            *PlacementGroupInfo       `parquet:"name=placement_group_info" json:"placement_group_info" diff:"placement_group_info"`
	ProcessorInfo                 *ProcessorInfo            `parquet:"name=processor_info" json:"processor_info" diff:"processor_info"`
	SupportedBootModes            []string                  `parquet:"name=supported_boot_modes,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"supported_boot_modes" diff:"supported_boot_modes"`
	SupportedRootDeviceTypes      []string                  `parquet:"name=supported_root_device_types,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"supported_root_device_types" diff:"supported_root_device_types"`
	SupportedUsageClasses         []string                  `parquet:"name=supported_usage_classes,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"supported_usage_classes" diff:"supported_usage_classes"`
	SupportedVirtualizationTypes  []string                  `parquet:"name=supported_virtualization_types,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"supported_virtualization_types" diff:"supported_virtualization_types"`
	VCpuInfo                      *VCpuInfo                 `parquet:"name=v_cpu_info" json:"v_cpu_info" diff:"v_cpu_info"`
	AccountId                     string                    `parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id" diff:"account_id"`
	Region                        string                    `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region" diff:"region"`
	ReportTime                    int64                     `parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time" diff:"report_time,immutable"`
}

func (x *InstanceTypeInfo) GetReportTime() int64 {
	return x.ReportTime
}
