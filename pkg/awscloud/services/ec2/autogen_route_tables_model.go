//AUTOGENERATED CODE DO NOT EDIT
package ec2

type RouteTable struct {
	Associations    []*RouteTableAssociation `parquet:"name=associations,type=MAP,convertedtype=LIST" json:"associations" diff:"associations"`
	OwnerId         string                   `parquet:"name=owner_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"owner_id" diff:"owner_id"`
	PropagatingVgws []*PropagatingVgw        `parquet:"name=propagating_vgws,type=MAP,convertedtype=LIST" json:"propagating_vgws" diff:"propagating_vgws"`
	RouteTableId    string                   `parquet:"name=route_table_id,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"route_table_id" diff:"route_table_id,identifier"`
	Routes          []*Route                 `parquet:"name=routes,type=MAP,convertedtype=LIST" json:"routes" diff:"routes"`
	Tags            map[string]string        `parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags" diff:"tags"`
	VpcId           string                   `parquet:"name=vpc_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"vpc_id" diff:"vpc_id"`
	AccountId       string                   `parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id" diff:"account_id"`
	Region          string                   `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region" diff:"region"`
	ReportTime      int64                    `parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time" diff:"report_time,immutable"`
}

func (x *RouteTable) GetReportTime() int64 {
	return x.ReportTime
}
