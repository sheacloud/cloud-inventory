//AUTOGENERATED CODE DO NOT EDIT
package ec2

type VpnGateway struct {
	AmazonSideAsn    int64             `parquet:"name=amazon_side_asn,type=INT64" json:"amazon_side_asn" diff:"amazon_side_asn"`
	AvailabilityZone string            `parquet:"name=availability_zone,type=BYTE_ARRAY,convertedtype=UTF8" json:"availability_zone" diff:"availability_zone"`
	State            string            `parquet:"name=state,type=BYTE_ARRAY,convertedtype=UTF8" json:"state" diff:"state"`
	Tags             map[string]string `parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags" diff:"tags"`
	Type             string            `parquet:"name=type,type=BYTE_ARRAY,convertedtype=UTF8" json:"type" diff:"type"`
	VpcAttachments   []*VpcAttachment  `parquet:"name=vpc_attachments,type=MAP,convertedtype=LIST" json:"vpc_attachments" diff:"vpc_attachments"`
	VpnGatewayId     string            `parquet:"name=vpn_gateway_id,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"vpn_gateway_id" diff:"vpn_gateway_id,identifier"`
	AccountId        string            `parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id" diff:"account_id"`
	Region           string            `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region" diff:"region"`
	ReportTime       int64             `parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time" diff:"report_time,immutable"`
}

func (x *VpnGateway) GetReportTime() int64 {
	return x.ReportTime
}
