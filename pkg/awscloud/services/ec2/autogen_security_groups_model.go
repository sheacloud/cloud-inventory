//AUTOGENERATED CODE DO NOT EDIT
package ec2

type SecurityGroup struct {
	Description         string            `parquet:"name=description,type=BYTE_ARRAY,convertedtype=UTF8" json:"description" diff:"description"`
	GroupId             string            `parquet:"name=group_id,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"group_id" diff:"group_id,identifier"`
	GroupName           string            `parquet:"name=group_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"group_name" diff:"group_name"`
	IpPermissions       []*IpPermission   `parquet:"name=ip_permissions,type=MAP,convertedtype=LIST" json:"ip_permissions" diff:"ip_permissions"`
	IpPermissionsEgress []*IpPermission   `parquet:"name=ip_permissions_egress,type=MAP,convertedtype=LIST" json:"ip_permissions_egress" diff:"ip_permissions_egress"`
	OwnerId             string            `parquet:"name=owner_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"owner_id" diff:"owner_id"`
	Tags                map[string]string `parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags" diff:"tags"`
	VpcId               string            `parquet:"name=vpc_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"vpc_id" diff:"vpc_id"`
	AccountId           string            `parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id" diff:"account_id"`
	Region              string            `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region" diff:"region"`
	ReportTime          int64             `parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time" diff:"report_time,immutable"`
}

func (x *SecurityGroup) GetReportTime() int64 {
	return x.ReportTime
}
