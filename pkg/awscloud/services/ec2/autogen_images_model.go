//AUTOGENERATED CODE DO NOT EDIT
package ec2



type Image struct {
	Architecture string `parquet:"name=architecture,type=BYTE_ARRAY,convertedtype=UTF8"`
	BlockDeviceMappings []*BlockDeviceMapping `parquet:"name=block_device_mappings,type=MAP,convertedtype=LIST"`
	BootMode string `parquet:"name=boot_mode,type=BYTE_ARRAY,convertedtype=UTF8"`
	CreationDate string `parquet:"name=creation_date,type=BYTE_ARRAY,convertedtype=UTF8"`
	DeprecationTime string `parquet:"name=deprecation_time,type=BYTE_ARRAY,convertedtype=UTF8"`
	Description string `parquet:"name=description,type=BYTE_ARRAY,convertedtype=UTF8"`
	EnaSupport bool `parquet:"name=ena_support,type=BOOLEAN"`
	Hypervisor string `parquet:"name=hypervisor,type=BYTE_ARRAY,convertedtype=UTF8"`
	ImageId string `parquet:"name=image_id,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true"`
	ImageLocation string `parquet:"name=image_location,type=BYTE_ARRAY,convertedtype=UTF8"`
	ImageOwnerAlias string `parquet:"name=image_owner_alias,type=BYTE_ARRAY,convertedtype=UTF8"`
	ImageType string `parquet:"name=image_type,type=BYTE_ARRAY,convertedtype=UTF8"`
	KernelId string `parquet:"name=kernel_id,type=BYTE_ARRAY,convertedtype=UTF8"`
	Name string `parquet:"name=name,type=BYTE_ARRAY,convertedtype=UTF8"`
	OwnerId string `parquet:"name=owner_id,type=BYTE_ARRAY,convertedtype=UTF8"`
	Platform string `parquet:"name=platform,type=BYTE_ARRAY,convertedtype=UTF8"`
	PlatformDetails string `parquet:"name=platform_details,type=BYTE_ARRAY,convertedtype=UTF8"`
	ProductCodes []*ProductCode `parquet:"name=product_codes,type=MAP,convertedtype=LIST"`
	Public bool `parquet:"name=public,type=BOOLEAN"`
	RamdiskId string `parquet:"name=ramdisk_id,type=BYTE_ARRAY,convertedtype=UTF8"`
	RootDeviceName string `parquet:"name=root_device_name,type=BYTE_ARRAY,convertedtype=UTF8"`
	RootDeviceType string `parquet:"name=root_device_type,type=BYTE_ARRAY,convertedtype=UTF8"`
	SriovNetSupport string `parquet:"name=sriov_net_support,type=BYTE_ARRAY,convertedtype=UTF8"`
	State string `parquet:"name=state,type=BYTE_ARRAY,convertedtype=UTF8"`
	StateReason *StateReason `parquet:"name=state_reason"`
	TagsOld []*Tag `parquet:"name=tags_old,type=MAP,convertedtype=LIST"`
	UsageOperation string `parquet:"name=usage_operation,type=BYTE_ARRAY,convertedtype=UTF8"`
	VirtualizationType string `parquet:"name=virtualization_type,type=BYTE_ARRAY,convertedtype=UTF8"`
	AccountId string `parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8"`
	Region string `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8"`
	ReportTime int64 `parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS"`
	Tags map[string]string `parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8"`
}

