//AUTOGENERATED CODE DO NOT EDIT
package ec2

type ManagedPrefixList struct {
	AddressFamily  string            `parquet:"name=address_family,type=BYTE_ARRAY,convertedtype=UTF8" json:"address_family" diff:"address_family"`
	MaxEntries     int32             `parquet:"name=max_entries,type=INT32" json:"max_entries" diff:"max_entries"`
	OwnerId        string            `parquet:"name=owner_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"owner_id" diff:"owner_id"`
	PrefixListArn  string            `parquet:"name=prefix_list_arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"prefix_list_arn" diff:"prefix_list_arn,identifier"`
	PrefixListId   string            `parquet:"name=prefix_list_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"prefix_list_id" diff:"prefix_list_id"`
	PrefixListName string            `parquet:"name=prefix_list_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"prefix_list_name" diff:"prefix_list_name"`
	State          string            `parquet:"name=state,type=BYTE_ARRAY,convertedtype=UTF8" json:"state" diff:"state"`
	StateMessage   string            `parquet:"name=state_message,type=BYTE_ARRAY,convertedtype=UTF8" json:"state_message" diff:"state_message"`
	Tags           map[string]string `parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags" diff:"tags"`
	Version        int64             `parquet:"name=version,type=INT64" json:"version" diff:"version"`
	AccountId      string            `parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id" diff:"account_id"`
	Region         string            `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region" diff:"region"`
	ReportTime     int64             `parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time" diff:"report_time,immutable"`
}

func (x *ManagedPrefixList) GetReportTime() int64 {
	return x.ReportTime
}
