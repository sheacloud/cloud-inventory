//AUTOGENERATED CODE DO NOT EDIT
package rds

import (
	"time"
)

type DBCluster struct {
	ActivityStreamKinesisStreamName    string                        `parquet:"name=activity_stream_kinesis_stream_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"activity_stream_kinesis_stream_name" diff:"activity_stream_kinesis_stream_name"`
	ActivityStreamKmsKeyId             string                        `parquet:"name=activity_stream_kms_key_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"activity_stream_kms_key_id" diff:"activity_stream_kms_key_id"`
	ActivityStreamMode                 string                        `parquet:"name=activity_stream_mode,type=BYTE_ARRAY,convertedtype=UTF8" json:"activity_stream_mode" diff:"activity_stream_mode"`
	ActivityStreamStatus               string                        `parquet:"name=activity_stream_status,type=BYTE_ARRAY,convertedtype=UTF8" json:"activity_stream_status" diff:"activity_stream_status"`
	AllocatedStorage                   int32                         `parquet:"name=allocated_storage,type=INT32" json:"allocated_storage" diff:"allocated_storage"`
	AssociatedRoles                    []*DBClusterRole              `parquet:"name=associated_roles,type=MAP,convertedtype=LIST" json:"associated_roles" diff:"associated_roles"`
	AutoMinorVersionUpgrade            bool                          `parquet:"name=auto_minor_version_upgrade,type=BOOLEAN" json:"auto_minor_version_upgrade" diff:"auto_minor_version_upgrade"`
	AutomaticRestartTime               *time.Time                    `json:"-"`
	AvailabilityZones                  []string                      `parquet:"name=availability_zones,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"availability_zones" diff:"availability_zones"`
	BacktrackConsumedChangeRecords     int64                         `parquet:"name=backtrack_consumed_change_records,type=INT64" json:"backtrack_consumed_change_records" diff:"backtrack_consumed_change_records"`
	BacktrackWindow                    int64                         `parquet:"name=backtrack_window,type=INT64" json:"backtrack_window" diff:"backtrack_window"`
	BackupRetentionPeriod              int32                         `parquet:"name=backup_retention_period,type=INT32" json:"backup_retention_period" diff:"backup_retention_period"`
	Capacity                           int32                         `parquet:"name=capacity,type=INT32" json:"capacity" diff:"capacity"`
	CharacterSetName                   string                        `parquet:"name=character_set_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"character_set_name" diff:"character_set_name"`
	CloneGroupId                       string                        `parquet:"name=clone_group_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"clone_group_id" diff:"clone_group_id"`
	ClusterCreateTime                  *time.Time                    `json:"-"`
	CopyTagsToSnapshot                 bool                          `parquet:"name=copy_tags_to_snapshot,type=BOOLEAN" json:"copy_tags_to_snapshot" diff:"copy_tags_to_snapshot"`
	CrossAccountClone                  bool                          `parquet:"name=cross_account_clone,type=BOOLEAN" json:"cross_account_clone" diff:"cross_account_clone"`
	CustomEndpoints                    []string                      `parquet:"name=custom_endpoints,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"custom_endpoints" diff:"custom_endpoints"`
	DBClusterArn                       string                        `parquet:"name=db_cluster_arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"db_cluster_arn" diff:"db_cluster_arn,identifier"`
	DBClusterIdentifier                string                        `parquet:"name=db_cluster_identifier,type=BYTE_ARRAY,convertedtype=UTF8" json:"db_cluster_identifier" diff:"db_cluster_identifier"`
	DBClusterInstanceClass             string                        `parquet:"name=db_cluster_instance_class,type=BYTE_ARRAY,convertedtype=UTF8" json:"db_cluster_instance_class" diff:"db_cluster_instance_class"`
	DBClusterMembers                   []*DBClusterMember            `parquet:"name=db_cluster_members,type=MAP,convertedtype=LIST" json:"db_cluster_members" diff:"db_cluster_members"`
	DBClusterOptionGroupMemberships    []*DBClusterOptionGroupStatus `parquet:"name=db_cluster_option_group_memberships,type=MAP,convertedtype=LIST" json:"db_cluster_option_group_memberships" diff:"db_cluster_option_group_memberships"`
	DBClusterParameterGroup            string                        `parquet:"name=db_cluster_parameter_group,type=BYTE_ARRAY,convertedtype=UTF8" json:"db_cluster_parameter_group" diff:"db_cluster_parameter_group"`
	DBSubnetGroup                      string                        `parquet:"name=db_subnet_group,type=BYTE_ARRAY,convertedtype=UTF8" json:"db_subnet_group" diff:"db_subnet_group"`
	DatabaseName                       string                        `parquet:"name=database_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"database_name" diff:"database_name"`
	DbClusterResourceId                string                        `parquet:"name=db_cluster_resource_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"db_cluster_resource_id" diff:"db_cluster_resource_id"`
	DeletionProtection                 bool                          `parquet:"name=deletion_protection,type=BOOLEAN" json:"deletion_protection" diff:"deletion_protection"`
	DomainMemberships                  []*DomainMembership           `parquet:"name=domain_memberships,type=MAP,convertedtype=LIST" json:"domain_memberships" diff:"domain_memberships"`
	EarliestBacktrackTime              *time.Time                    `json:"-"`
	EarliestRestorableTime             *time.Time                    `json:"-"`
	EnabledCloudwatchLogsExports       []string                      `parquet:"name=enabled_cloudwatch_logs_exports,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"enabled_cloudwatch_logs_exports" diff:"enabled_cloudwatch_logs_exports"`
	Endpoint                           string                        `parquet:"name=endpoint,type=BYTE_ARRAY,convertedtype=UTF8" json:"endpoint" diff:"endpoint"`
	Engine                             string                        `parquet:"name=engine,type=BYTE_ARRAY,convertedtype=UTF8" json:"engine" diff:"engine"`
	EngineMode                         string                        `parquet:"name=engine_mode,type=BYTE_ARRAY,convertedtype=UTF8" json:"engine_mode" diff:"engine_mode"`
	EngineVersion                      string                        `parquet:"name=engine_version,type=BYTE_ARRAY,convertedtype=UTF8" json:"engine_version" diff:"engine_version"`
	GlobalWriteForwardingRequested     bool                          `parquet:"name=global_write_forwarding_requested,type=BOOLEAN" json:"global_write_forwarding_requested" diff:"global_write_forwarding_requested"`
	GlobalWriteForwardingStatus        string                        `parquet:"name=global_write_forwarding_status,type=BYTE_ARRAY,convertedtype=UTF8" json:"global_write_forwarding_status" diff:"global_write_forwarding_status"`
	HostedZoneId                       string                        `parquet:"name=hosted_zone_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"hosted_zone_id" diff:"hosted_zone_id"`
	HttpEndpointEnabled                bool                          `parquet:"name=http_endpoint_enabled,type=BOOLEAN" json:"http_endpoint_enabled" diff:"http_endpoint_enabled"`
	IAMDatabaseAuthenticationEnabled   bool                          `parquet:"name=iam_database_authentication_enabled,type=BOOLEAN" json:"iam_database_authentication_enabled" diff:"iam_database_authentication_enabled"`
	Iops                               int32                         `parquet:"name=iops,type=INT32" json:"iops" diff:"iops"`
	KmsKeyId                           string                        `parquet:"name=kms_key_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"kms_key_id" diff:"kms_key_id"`
	LatestRestorableTime               *time.Time                    `json:"-"`
	MasterUsername                     string                        `parquet:"name=master_username,type=BYTE_ARRAY,convertedtype=UTF8" json:"master_username" diff:"master_username"`
	MonitoringInterval                 int32                         `parquet:"name=monitoring_interval,type=INT32" json:"monitoring_interval" diff:"monitoring_interval"`
	MonitoringRoleArn                  string                        `parquet:"name=monitoring_role_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"monitoring_role_arn" diff:"monitoring_role_arn"`
	MultiAZ                            bool                          `parquet:"name=multi_az,type=BOOLEAN" json:"multi_az" diff:"multi_az"`
	PendingModifiedValues              *ClusterPendingModifiedValues `parquet:"name=pending_modified_values" json:"pending_modified_values" diff:"pending_modified_values"`
	PercentProgress                    string                        `parquet:"name=percent_progress,type=BYTE_ARRAY,convertedtype=UTF8" json:"percent_progress" diff:"percent_progress"`
	PerformanceInsightsEnabled         bool                          `parquet:"name=performance_insights_enabled,type=BOOLEAN" json:"performance_insights_enabled" diff:"performance_insights_enabled"`
	PerformanceInsightsKMSKeyId        string                        `parquet:"name=performance_insights_kms_key_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"performance_insights_kms_key_id" diff:"performance_insights_kms_key_id"`
	PerformanceInsightsRetentionPeriod int32                         `parquet:"name=performance_insights_retention_period,type=INT32" json:"performance_insights_retention_period" diff:"performance_insights_retention_period"`
	Port                               int32                         `parquet:"name=port,type=INT32" json:"port" diff:"port"`
	PreferredBackupWindow              string                        `parquet:"name=preferred_backup_window,type=BYTE_ARRAY,convertedtype=UTF8" json:"preferred_backup_window" diff:"preferred_backup_window"`
	PreferredMaintenanceWindow         string                        `parquet:"name=preferred_maintenance_window,type=BYTE_ARRAY,convertedtype=UTF8" json:"preferred_maintenance_window" diff:"preferred_maintenance_window"`
	PubliclyAccessible                 bool                          `parquet:"name=publicly_accessible,type=BOOLEAN" json:"publicly_accessible" diff:"publicly_accessible"`
	ReadReplicaIdentifiers             []string                      `parquet:"name=read_replica_identifiers,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"read_replica_identifiers" diff:"read_replica_identifiers"`
	ReaderEndpoint                     string                        `parquet:"name=reader_endpoint,type=BYTE_ARRAY,convertedtype=UTF8" json:"reader_endpoint" diff:"reader_endpoint"`
	ReplicationSourceIdentifier        string                        `parquet:"name=replication_source_identifier,type=BYTE_ARRAY,convertedtype=UTF8" json:"replication_source_identifier" diff:"replication_source_identifier"`
	ScalingConfigurationInfo           *ScalingConfigurationInfo     `parquet:"name=scaling_configuration_info" json:"scaling_configuration_info" diff:"scaling_configuration_info"`
	Status                             string                        `parquet:"name=status,type=BYTE_ARRAY,convertedtype=UTF8" json:"status" diff:"status"`
	StorageEncrypted                   bool                          `parquet:"name=storage_encrypted,type=BOOLEAN" json:"storage_encrypted" diff:"storage_encrypted"`
	StorageType                        string                        `parquet:"name=storage_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"storage_type" diff:"storage_type"`
	Tags                               map[string]string             `parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags" diff:"tags"`
	VpcSecurityGroups                  []*VpcSecurityGroupMembership `parquet:"name=vpc_security_groups,type=MAP,convertedtype=LIST" json:"vpc_security_groups" diff:"vpc_security_groups"`
	AccountId                          string                        `parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id" diff:"account_id"`
	Region                             string                        `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region" diff:"region"`
	ReportTime                         int64                         `parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time" diff:"report_time,immutable"`
	AutomaticRestartTimeMilli          int64                         `parquet:"name=automatic_restart_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"automatic_restart_time" diff:"automatic_restart_time"`
	ClusterCreateTimeMilli             int64                         `parquet:"name=cluster_create_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"cluster_create_time" diff:"cluster_create_time"`
	EarliestBacktrackTimeMilli         int64                         `parquet:"name=earliest_backtrack_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"earliest_backtrack_time" diff:"earliest_backtrack_time"`
	EarliestRestorableTimeMilli        int64                         `parquet:"name=earliest_restorable_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"earliest_restorable_time" diff:"earliest_restorable_time"`
	LatestRestorableTimeMilli          int64                         `parquet:"name=latest_restorable_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"latest_restorable_time" diff:"latest_restorable_time"`
}

func (x *DBCluster) GetReportTime() int64 {
	return x.ReportTime
}
