//AUTOGENERATED CODE DO NOT EDIT
package dynamodb

import (
	"time"
)

type TableDescription struct {
	ArchivalSummary        *ArchivalSummary                   `parquet:"name=archival_summary" json:"archival_summary" diff:"archival_summary"`
	AttributeDefinitions   []*AttributeDefinition             `parquet:"name=attribute_definitions,type=MAP,convertedtype=LIST" json:"attribute_definitions" diff:"attribute_definitions"`
	BillingModeSummary     *BillingModeSummary                `parquet:"name=billing_mode_summary" json:"billing_mode_summary" diff:"billing_mode_summary"`
	CreationDateTime       *time.Time                         `json:"-"`
	GlobalSecondaryIndexes []*GlobalSecondaryIndexDescription `parquet:"name=global_secondary_indexes,type=MAP,convertedtype=LIST" json:"global_secondary_indexes" diff:"global_secondary_indexes"`
	GlobalTableVersion     string                             `parquet:"name=global_table_version,type=BYTE_ARRAY,convertedtype=UTF8" json:"global_table_version" diff:"global_table_version"`
	ItemCount              int64                              `parquet:"name=item_count,type=INT64" json:"item_count" diff:"item_count"`
	KeySchema              []*KeySchemaElement                `parquet:"name=key_schema,type=MAP,convertedtype=LIST" json:"key_schema" diff:"key_schema"`
	LatestStreamArn        string                             `parquet:"name=latest_stream_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"latest_stream_arn" diff:"latest_stream_arn"`
	LatestStreamLabel      string                             `parquet:"name=latest_stream_label,type=BYTE_ARRAY,convertedtype=UTF8" json:"latest_stream_label" diff:"latest_stream_label"`
	LocalSecondaryIndexes  []*LocalSecondaryIndexDescription  `parquet:"name=local_secondary_indexes,type=MAP,convertedtype=LIST" json:"local_secondary_indexes" diff:"local_secondary_indexes"`
	ProvisionedThroughput  *ProvisionedThroughputDescription  `parquet:"name=provisioned_throughput" json:"provisioned_throughput" diff:"provisioned_throughput"`
	Replicas               []*ReplicaDescription              `parquet:"name=replicas,type=MAP,convertedtype=LIST" json:"replicas" diff:"replicas"`
	RestoreSummary         *RestoreSummary                    `parquet:"name=restore_summary" json:"restore_summary" diff:"restore_summary"`
	SSEDescription         *SSEDescription                    `parquet:"name=sse_description" json:"sse_description" diff:"sse_description"`
	StreamSpecification    *StreamSpecification               `parquet:"name=stream_specification" json:"stream_specification" diff:"stream_specification"`
	TableArn               string                             `parquet:"name=table_arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"table_arn" diff:"table_arn,identifier"`
	TableClassSummary      *TableClassSummary                 `parquet:"name=table_class_summary" json:"table_class_summary" diff:"table_class_summary"`
	TableId                string                             `parquet:"name=table_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"table_id" diff:"table_id"`
	TableName              string                             `parquet:"name=table_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"table_name" diff:"table_name"`
	TableSizeBytes         int64                              `parquet:"name=table_size_bytes,type=INT64" json:"table_size_bytes" diff:"table_size_bytes"`
	TableStatus            string                             `parquet:"name=table_status,type=BYTE_ARRAY,convertedtype=UTF8" json:"table_status" diff:"table_status"`
	AccountId              string                             `parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id" diff:"account_id"`
	Region                 string                             `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region" diff:"region"`
	ReportTime             int64                              `parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time" diff:"report_time,immutable"`
	Tags                   map[string]string                  `parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags" diff:"tags"`
	CreationDateTimeMilli  int64                              `parquet:"name=creation_date_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"creation_date_time" diff:"creation_date_time"`
}

func (x *TableDescription) GetReportTime() int64 {
	return x.ReportTime
}
