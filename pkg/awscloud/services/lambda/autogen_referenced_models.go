//AUTOGENERATED CODE DO NOT EDIT
package lambda

type DeadLetterConfig struct {
	TargetArn string `parquet:"name=target_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"target_arn" diff:"target_arn"`
}

type FileSystemConfig struct {
	Arn            string `parquet:"name=arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"arn" diff:"arn"`
	LocalMountPath string `parquet:"name=local_mount_path,type=BYTE_ARRAY,convertedtype=UTF8" json:"local_mount_path" diff:"local_mount_path"`
}

type ImageConfigResponse struct {
	Error       *ImageConfigError `parquet:"name=error" json:"error" diff:"error"`
	ImageConfig *ImageConfig      `parquet:"name=image_config" json:"image_config" diff:"image_config"`
}

type ImageConfigError struct {
	ErrorCode string `parquet:"name=error_code,type=BYTE_ARRAY,convertedtype=UTF8" json:"error_code" diff:"error_code"`
	Message   string `parquet:"name=message,type=BYTE_ARRAY,convertedtype=UTF8" json:"message" diff:"message"`
}

type ImageConfig struct {
	Command          []string `parquet:"name=command,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"command" diff:"command"`
	EntryPoint       []string `parquet:"name=entry_point,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"entry_point" diff:"entry_point"`
	WorkingDirectory string   `parquet:"name=working_directory,type=BYTE_ARRAY,convertedtype=UTF8" json:"working_directory" diff:"working_directory"`
}

type Layer struct {
	Arn                      string `parquet:"name=arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"arn" diff:"arn"`
	CodeSize                 int64  `parquet:"name=code_size,type=INT64" json:"code_size" diff:"code_size"`
	SigningJobArn            string `parquet:"name=signing_job_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"signing_job_arn" diff:"signing_job_arn"`
	SigningProfileVersionArn string `parquet:"name=signing_profile_version_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"signing_profile_version_arn" diff:"signing_profile_version_arn"`
}

type TracingConfigResponse struct {
	Mode string `parquet:"name=mode,type=BYTE_ARRAY,convertedtype=UTF8" json:"mode" diff:"mode"`
}

type VpcConfigResponse struct {
	SecurityGroupIds []string `parquet:"name=security_group_ids,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"security_group_ids" diff:"security_group_ids"`
	SubnetIds        []string `parquet:"name=subnet_ids,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"subnet_ids" diff:"subnet_ids"`
	VpcId            string   `parquet:"name=vpc_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"vpc_id" diff:"vpc_id"`
}
