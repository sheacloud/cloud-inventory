//AUTOGENERATED CODE DO NOT EDIT
package lambda

type FunctionConfiguration struct {
	Architectures              []string               `parquet:"name=architectures,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8" json:"architectures" diff:"architectures"`
	CodeSha256                 string                 `parquet:"name=code_sha256,type=BYTE_ARRAY,convertedtype=UTF8" json:"code_sha256" diff:"code_sha256"`
	CodeSize                   int64                  `parquet:"name=code_size,type=INT64" json:"code_size" diff:"code_size"`
	DeadLetterConfig           *DeadLetterConfig      `parquet:"name=dead_letter_config" json:"dead_letter_config" diff:"dead_letter_config"`
	Description                string                 `parquet:"name=description,type=BYTE_ARRAY,convertedtype=UTF8" json:"description" diff:"description"`
	FileSystemConfigs          []*FileSystemConfig    `parquet:"name=file_system_configs,type=MAP,convertedtype=LIST" json:"file_system_configs" diff:"file_system_configs"`
	FunctionArn                string                 `parquet:"name=function_arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"function_arn" diff:"function_arn,identifier"`
	FunctionName               string                 `parquet:"name=function_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"function_name" diff:"function_name"`
	Handler                    string                 `parquet:"name=handler,type=BYTE_ARRAY,convertedtype=UTF8" json:"handler" diff:"handler"`
	ImageConfigResponse        *ImageConfigResponse   `parquet:"name=image_config_response" json:"image_config_response" diff:"image_config_response"`
	KMSKeyArn                  string                 `parquet:"name=kms_key_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"kms_key_arn" diff:"kms_key_arn"`
	LastModified               string                 `parquet:"name=last_modified,type=BYTE_ARRAY,convertedtype=UTF8" json:"last_modified" diff:"last_modified"`
	LastUpdateStatus           string                 `parquet:"name=last_update_status,type=BYTE_ARRAY,convertedtype=UTF8" json:"last_update_status" diff:"last_update_status"`
	LastUpdateStatusReason     string                 `parquet:"name=last_update_status_reason,type=BYTE_ARRAY,convertedtype=UTF8" json:"last_update_status_reason" diff:"last_update_status_reason"`
	LastUpdateStatusReasonCode string                 `parquet:"name=last_update_status_reason_code,type=BYTE_ARRAY,convertedtype=UTF8" json:"last_update_status_reason_code" diff:"last_update_status_reason_code"`
	Layers                     []*Layer               `parquet:"name=layers,type=MAP,convertedtype=LIST" json:"layers" diff:"layers"`
	MasterArn                  string                 `parquet:"name=master_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"master_arn" diff:"master_arn"`
	MemorySize                 int32                  `parquet:"name=memory_size,type=INT32" json:"memory_size" diff:"memory_size"`
	PackageType                string                 `parquet:"name=package_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"package_type" diff:"package_type"`
	RevisionId                 string                 `parquet:"name=revision_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"revision_id" diff:"revision_id"`
	Role                       string                 `parquet:"name=role,type=BYTE_ARRAY,convertedtype=UTF8" json:"role" diff:"role"`
	Runtime                    string                 `parquet:"name=runtime,type=BYTE_ARRAY,convertedtype=UTF8" json:"runtime" diff:"runtime"`
	SigningJobArn              string                 `parquet:"name=signing_job_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"signing_job_arn" diff:"signing_job_arn"`
	SigningProfileVersionArn   string                 `parquet:"name=signing_profile_version_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"signing_profile_version_arn" diff:"signing_profile_version_arn"`
	State                      string                 `parquet:"name=state,type=BYTE_ARRAY,convertedtype=UTF8" json:"state" diff:"state"`
	StateReason                string                 `parquet:"name=state_reason,type=BYTE_ARRAY,convertedtype=UTF8" json:"state_reason" diff:"state_reason"`
	StateReasonCode            string                 `parquet:"name=state_reason_code,type=BYTE_ARRAY,convertedtype=UTF8" json:"state_reason_code" diff:"state_reason_code"`
	Timeout                    int32                  `parquet:"name=timeout,type=INT32" json:"timeout" diff:"timeout"`
	TracingConfig              *TracingConfigResponse `parquet:"name=tracing_config" json:"tracing_config" diff:"tracing_config"`
	Version                    string                 `parquet:"name=version,type=BYTE_ARRAY,convertedtype=UTF8" json:"version" diff:"version"`
	VpcConfig                  *VpcConfigResponse     `parquet:"name=vpc_config" json:"vpc_config" diff:"vpc_config"`
	AccountId                  string                 `parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id" diff:"account_id"`
	Region                     string                 `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region" diff:"region"`
	ReportTime                 int64                  `parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time" diff:"report_time,immutable"`
}

func (x *FunctionConfiguration) GetReportTime() int64 {
	return x.ReportTime
}
