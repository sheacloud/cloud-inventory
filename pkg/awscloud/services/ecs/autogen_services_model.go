//AUTOGENERATED CODE DO NOT EDIT
package ecs

import (
	"time"
)

type Service struct {
	CapacityProviderStrategy []*CapacityProviderStrategyItem `parquet:"name=capacity_provider_strategy,type=MAP,convertedtype=LIST"`
	ClusterArn string `parquet:"name=cluster_arn,type=BYTE_ARRAY,convertedtype=UTF8"`
	CreatedAt *time.Time 
	CreatedBy string `parquet:"name=created_by,type=BYTE_ARRAY,convertedtype=UTF8"`
	DeploymentConfiguration *DeploymentConfiguration `parquet:"name=deployment_configuration"`
	DeploymentController *DeploymentController `parquet:"name=deployment_controller"`
	Deployments []*Deployment `parquet:"name=deployments,type=MAP,convertedtype=LIST"`
	DesiredCount int32 `parquet:"name=desired_count,type=INT32"`
	EnableECSManagedTags bool `parquet:"name=enable_ecs_managed_tags,type=BOOLEAN"`
	EnableExecuteCommand bool `parquet:"name=enable_execute_command,type=BOOLEAN"`
	HealthCheckGracePeriodSeconds int32 `parquet:"name=health_check_grace_period_seconds,type=INT32"`
	LaunchType string `parquet:"name=launch_type,type=BYTE_ARRAY,convertedtype=UTF8"`
	LoadBalancers []*LoadBalancer `parquet:"name=load_balancers,type=MAP,convertedtype=LIST"`
	NetworkConfiguration *NetworkConfiguration `parquet:"name=network_configuration"`
	PendingCount int32 `parquet:"name=pending_count,type=INT32"`
	PlacementConstraints []*PlacementConstraint `parquet:"name=placement_constraints,type=MAP,convertedtype=LIST"`
	PlacementStrategy []*PlacementStrategy `parquet:"name=placement_strategy,type=MAP,convertedtype=LIST"`
	PlatformFamily string `parquet:"name=platform_family,type=BYTE_ARRAY,convertedtype=UTF8"`
	PlatformVersion string `parquet:"name=platform_version,type=BYTE_ARRAY,convertedtype=UTF8"`
	PropagateTags string `parquet:"name=propagate_tags,type=BYTE_ARRAY,convertedtype=UTF8"`
	RoleArn string `parquet:"name=role_arn,type=BYTE_ARRAY,convertedtype=UTF8"`
	RunningCount int32 `parquet:"name=running_count,type=INT32"`
	SchedulingStrategy string `parquet:"name=scheduling_strategy,type=BYTE_ARRAY,convertedtype=UTF8"`
	ServiceArn string `parquet:"name=service_arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true"`
	ServiceName string `parquet:"name=service_name,type=BYTE_ARRAY,convertedtype=UTF8"`
	ServiceRegistries []*ServiceRegistry `parquet:"name=service_registries,type=MAP,convertedtype=LIST"`
	Status string `parquet:"name=status,type=BYTE_ARRAY,convertedtype=UTF8"`
	TagsOld []*Tag `parquet:"name=tags_old,type=MAP,convertedtype=LIST"`
	TaskDefinition string `parquet:"name=task_definition,type=BYTE_ARRAY,convertedtype=UTF8"`
	TaskSets []*TaskSet `parquet:"name=task_sets,type=MAP,convertedtype=LIST"`
	AccountId string `parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8"`
	Region string `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8"`
	ReportTime int64 `parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS"`
	CreatedAtMilli int64 `parquet:"name=created_at,type=INT64,convertedtype=TIMESTAMP_MILLIS"`
	Tags map[string]string `parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8"`
}

