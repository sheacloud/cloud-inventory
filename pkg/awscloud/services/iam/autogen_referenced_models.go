//AUTOGENERATED CODE DO NOT EDIT
package iam

import (
	"time"
)

type AttachedPolicy struct {
	PolicyArn string `parquet:"name=policy_arn,type=BYTE_ARRAY,convertedtype=UTF8"`
	PolicyName string `parquet:"name=policy_name,type=BYTE_ARRAY,convertedtype=UTF8"`
}

type Tag struct {
	Key string `parquet:"name=key,type=BYTE_ARRAY,convertedtype=UTF8"`
	Value string `parquet:"name=value,type=BYTE_ARRAY,convertedtype=UTF8"`
}

type AttachedPermissionsBoundary struct {
	PermissionsBoundaryArn string `parquet:"name=permissions_boundary_arn,type=BYTE_ARRAY,convertedtype=UTF8"`
	PermissionsBoundaryType string `parquet:"name=permissions_boundary_type,type=BYTE_ARRAY,convertedtype=UTF8"`
}

type RoleLastUsed struct {
	LastUsedDate *time.Time 
	Region string `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8"`
	LastUsedDateMilli int64 `parquet:"name=last_used_date,type=INT64,convertedtype=TIMESTAMP_MILLIS"`
}

type AccessKeyMetadata struct {
	AccessKeyId string `parquet:"name=access_key_id,type=BYTE_ARRAY,convertedtype=UTF8"`
	CreateDate *time.Time 
	Status string `parquet:"name=status,type=BYTE_ARRAY,convertedtype=UTF8"`
	CreateDateMilli int64 `parquet:"name=create_date,type=INT64,convertedtype=TIMESTAMP_MILLIS"`
}

type LoginProfile struct {
	CreateDate *time.Time 
	PasswordResetRequired bool `parquet:"name=password_reset_required,type=BOOLEAN"`
	CreateDateMilli int64 `parquet:"name=create_date,type=INT64,convertedtype=TIMESTAMP_MILLIS"`
}


