//AUTOGENERATED CODE DO NOT EDIT
package iam

import (
	"time"
)

type AttachedPolicy struct {
	PolicyArn  string `parquet:"name=policy_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"policy_arn" diff:"policy_arn"`
	PolicyName string `parquet:"name=policy_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"policy_name" diff:"policy_name"`
}

type Tag struct {
	Key   string `parquet:"name=key,type=BYTE_ARRAY,convertedtype=UTF8" json:"key" diff:"key"`
	Value string `parquet:"name=value,type=BYTE_ARRAY,convertedtype=UTF8" json:"value" diff:"value"`
}

type AttachedPermissionsBoundary struct {
	PermissionsBoundaryArn  string `parquet:"name=permissions_boundary_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"permissions_boundary_arn" diff:"permissions_boundary_arn"`
	PermissionsBoundaryType string `parquet:"name=permissions_boundary_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"permissions_boundary_type" diff:"permissions_boundary_type"`
}

type RoleLastUsed struct {
	LastUsedDate      *time.Time
	Region            string `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region" diff:"region"`
	LastUsedDateMilli int64  `parquet:"name=last_used_date,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"last_used_date" diff:"last_used_date"`
}

type AccessKeyMetadata struct {
	AccessKeyId     string `parquet:"name=access_key_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"access_key_id" diff:"access_key_id"`
	CreateDate      *time.Time
	Status          string `parquet:"name=status,type=BYTE_ARRAY,convertedtype=UTF8" json:"status" diff:"status"`
	CreateDateMilli int64  `parquet:"name=create_date,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"create_date" diff:"create_date"`
}

type LoginProfile struct {
	CreateDate            *time.Time
	PasswordResetRequired bool  `parquet:"name=password_reset_required,type=BOOLEAN" json:"password_reset_required" diff:"password_reset_required"`
	CreateDateMilli       int64 `parquet:"name=create_date,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"create_date" diff:"create_date"`
}
