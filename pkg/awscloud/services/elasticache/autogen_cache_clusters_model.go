//AUTOGENERATED CODE DO NOT EDIT
package elasticache

import (
	"time"
)

type CacheCluster struct {
	ARN                                string `parquet:"name=arn,type=BYTE_ARRAY,convertedtype=UTF8" inventory_primary_key:"true" json:"arn" diff:"arn,identifier"`
	AtRestEncryptionEnabled            bool   `parquet:"name=at_rest_encryption_enabled,type=BOOLEAN" json:"at_rest_encryption_enabled" diff:"at_rest_encryption_enabled"`
	AuthTokenEnabled                   bool   `parquet:"name=auth_token_enabled,type=BOOLEAN" json:"auth_token_enabled" diff:"auth_token_enabled"`
	AuthTokenLastModifiedDate          *time.Time
	AutoMinorVersionUpgrade            bool `parquet:"name=auto_minor_version_upgrade,type=BOOLEAN" json:"auto_minor_version_upgrade" diff:"auto_minor_version_upgrade"`
	CacheClusterCreateTime             *time.Time
	CacheClusterId                     string                          `parquet:"name=cache_cluster_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"cache_cluster_id" diff:"cache_cluster_id"`
	CacheClusterStatus                 string                          `parquet:"name=cache_cluster_status,type=BYTE_ARRAY,convertedtype=UTF8" json:"cache_cluster_status" diff:"cache_cluster_status"`
	CacheNodeType                      string                          `parquet:"name=cache_node_type,type=BYTE_ARRAY,convertedtype=UTF8" json:"cache_node_type" diff:"cache_node_type"`
	CacheNodes                         []*CacheNode                    `parquet:"name=cache_nodes,type=MAP,convertedtype=LIST" json:"cache_nodes" diff:"cache_nodes"`
	CacheParameterGroup                *CacheParameterGroupStatus      `parquet:"name=cache_parameter_group" json:"cache_parameter_group" diff:"cache_parameter_group"`
	CacheSecurityGroups                []*CacheSecurityGroupMembership `parquet:"name=cache_security_groups,type=MAP,convertedtype=LIST" json:"cache_security_groups" diff:"cache_security_groups"`
	CacheSubnetGroupName               string                          `parquet:"name=cache_subnet_group_name,type=BYTE_ARRAY,convertedtype=UTF8" json:"cache_subnet_group_name" diff:"cache_subnet_group_name"`
	ClientDownloadLandingPage          string                          `parquet:"name=client_download_landing_page,type=BYTE_ARRAY,convertedtype=UTF8" json:"client_download_landing_page" diff:"client_download_landing_page"`
	ConfigurationEndpoint              *Endpoint                       `parquet:"name=configuration_endpoint" json:"configuration_endpoint" diff:"configuration_endpoint"`
	Engine                             string                          `parquet:"name=engine,type=BYTE_ARRAY,convertedtype=UTF8" json:"engine" diff:"engine"`
	EngineVersion                      string                          `parquet:"name=engine_version,type=BYTE_ARRAY,convertedtype=UTF8" json:"engine_version" diff:"engine_version"`
	LogDeliveryConfigurations          []*LogDeliveryConfiguration     `parquet:"name=log_delivery_configurations,type=MAP,convertedtype=LIST" json:"log_delivery_configurations" diff:"log_delivery_configurations"`
	NotificationConfiguration          *NotificationConfiguration      `parquet:"name=notification_configuration" json:"notification_configuration" diff:"notification_configuration"`
	NumCacheNodes                      int32                           `parquet:"name=num_cache_nodes,type=INT32" json:"num_cache_nodes" diff:"num_cache_nodes"`
	PendingModifiedValues              *PendingModifiedValues          `parquet:"name=pending_modified_values" json:"pending_modified_values" diff:"pending_modified_values"`
	PreferredAvailabilityZone          string                          `parquet:"name=preferred_availability_zone,type=BYTE_ARRAY,convertedtype=UTF8" json:"preferred_availability_zone" diff:"preferred_availability_zone"`
	PreferredMaintenanceWindow         string                          `parquet:"name=preferred_maintenance_window,type=BYTE_ARRAY,convertedtype=UTF8" json:"preferred_maintenance_window" diff:"preferred_maintenance_window"`
	PreferredOutpostArn                string                          `parquet:"name=preferred_outpost_arn,type=BYTE_ARRAY,convertedtype=UTF8" json:"preferred_outpost_arn" diff:"preferred_outpost_arn"`
	ReplicationGroupId                 string                          `parquet:"name=replication_group_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"replication_group_id" diff:"replication_group_id"`
	ReplicationGroupLogDeliveryEnabled bool                            `parquet:"name=replication_group_log_delivery_enabled,type=BOOLEAN" json:"replication_group_log_delivery_enabled" diff:"replication_group_log_delivery_enabled"`
	SecurityGroups                     []*SecurityGroupMembership      `parquet:"name=security_groups,type=MAP,convertedtype=LIST" json:"security_groups" diff:"security_groups"`
	SnapshotRetentionLimit             int32                           `parquet:"name=snapshot_retention_limit,type=INT32" json:"snapshot_retention_limit" diff:"snapshot_retention_limit"`
	SnapshotWindow                     string                          `parquet:"name=snapshot_window,type=BYTE_ARRAY,convertedtype=UTF8" json:"snapshot_window" diff:"snapshot_window"`
	TransitEncryptionEnabled           bool                            `parquet:"name=transit_encryption_enabled,type=BOOLEAN" json:"transit_encryption_enabled" diff:"transit_encryption_enabled"`
	AccountId                          string                          `parquet:"name=account_id,type=BYTE_ARRAY,convertedtype=UTF8" json:"account_id" diff:"account_id"`
	Region                             string                          `parquet:"name=region,type=BYTE_ARRAY,convertedtype=UTF8" json:"region" diff:"region"`
	ReportTime                         int64                           `parquet:"name=report_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"report_time" diff:"report_time,immutable"`
	Tags                               map[string]string               `parquet:"name=tags,type=MAP,keytype=BYTE_ARRAY,valuetype=BYTE_ARRAY,keyconvertedtype=UTF8,valueconvertedtype=UTF8" json:"tags" diff:"tags"`
	AuthTokenLastModifiedDateMilli     int64                           `parquet:"name=auth_token_last_modified_date,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"auth_token_last_modified_date" diff:"auth_token_last_modified_date"`
	CacheClusterCreateTimeMilli        int64                           `parquet:"name=cache_cluster_create_time,type=INT64,convertedtype=TIMESTAMP_MILLIS" json:"cache_cluster_create_time" diff:"cache_cluster_create_time"`
}

func (x *CacheCluster) GetReportTime() int64 {
	return x.ReportTime
}
