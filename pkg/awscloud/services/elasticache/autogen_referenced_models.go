//AUTOGENERATED CODE DO NOT EDIT
package elasticache

import (
	"time"
)

type CacheNode struct {
	CacheNodeCreateTime *time.Time 
	CacheNodeId string `parquet:"name=cache_node_id,type=BYTE_ARRAY,convertedtype=UTF8"`
	CacheNodeStatus string `parquet:"name=cache_node_status,type=BYTE_ARRAY,convertedtype=UTF8"`
	CustomerAvailabilityZone string `parquet:"name=customer_availability_zone,type=BYTE_ARRAY,convertedtype=UTF8"`
	CustomerOutpostArn string `parquet:"name=customer_outpost_arn,type=BYTE_ARRAY,convertedtype=UTF8"`
	Endpoint *Endpoint `parquet:"name=endpoint"`
	ParameterGroupStatus string `parquet:"name=parameter_group_status,type=BYTE_ARRAY,convertedtype=UTF8"`
	SourceCacheNodeId string `parquet:"name=source_cache_node_id,type=BYTE_ARRAY,convertedtype=UTF8"`
	CacheNodeCreateTimeMilli int64 `parquet:"name=cache_node_create_time,type=INT64,convertedtype=TIMESTAMP_MILLIS"`
}

type Endpoint struct {
	Address string `parquet:"name=address,type=BYTE_ARRAY,convertedtype=UTF8"`
	Port int32 `parquet:"name=port,type=INT32"`
}

type CacheParameterGroupStatus struct {
	CacheNodeIdsToReboot []string `parquet:"name=cache_node_ids_to_reboot,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8"`
	CacheParameterGroupName string `parquet:"name=cache_parameter_group_name,type=BYTE_ARRAY,convertedtype=UTF8"`
	ParameterApplyStatus string `parquet:"name=parameter_apply_status,type=BYTE_ARRAY,convertedtype=UTF8"`
}

type CacheSecurityGroupMembership struct {
	CacheSecurityGroupName string `parquet:"name=cache_security_group_name,type=BYTE_ARRAY,convertedtype=UTF8"`
	Status string `parquet:"name=status,type=BYTE_ARRAY,convertedtype=UTF8"`
}

type LogDeliveryConfiguration struct {
	DestinationDetails *DestinationDetails `parquet:"name=destination_details"`
	DestinationType string `parquet:"name=destination_type,type=BYTE_ARRAY,convertedtype=UTF8"`
	LogFormat string `parquet:"name=log_format,type=BYTE_ARRAY,convertedtype=UTF8"`
	LogType string `parquet:"name=log_type,type=BYTE_ARRAY,convertedtype=UTF8"`
	Message string `parquet:"name=message,type=BYTE_ARRAY,convertedtype=UTF8"`
	Status string `parquet:"name=status,type=BYTE_ARRAY,convertedtype=UTF8"`
}

type DestinationDetails struct {
	CloudWatchLogsDetails *CloudWatchLogsDestinationDetails `parquet:"name=cloud_watch_logs_details"`
	KinesisFirehoseDetails *KinesisFirehoseDestinationDetails `parquet:"name=kinesis_firehose_details"`
}

type CloudWatchLogsDestinationDetails struct {
	LogGroup string `parquet:"name=log_group,type=BYTE_ARRAY,convertedtype=UTF8"`
}

type KinesisFirehoseDestinationDetails struct {
	DeliveryStream string `parquet:"name=delivery_stream,type=BYTE_ARRAY,convertedtype=UTF8"`
}

type NotificationConfiguration struct {
	TopicArn string `parquet:"name=topic_arn,type=BYTE_ARRAY,convertedtype=UTF8"`
	TopicStatus string `parquet:"name=topic_status,type=BYTE_ARRAY,convertedtype=UTF8"`
}

type PendingModifiedValues struct {
	AuthTokenStatus string `parquet:"name=auth_token_status,type=BYTE_ARRAY,convertedtype=UTF8"`
	CacheNodeIdsToRemove []string `parquet:"name=cache_node_ids_to_remove,type=MAP,convertedtype=LIST,valuetype=BYTE_ARRAY,valueconvertedtype=UTF8"`
	CacheNodeType string `parquet:"name=cache_node_type,type=BYTE_ARRAY,convertedtype=UTF8"`
	EngineVersion string `parquet:"name=engine_version,type=BYTE_ARRAY,convertedtype=UTF8"`
	LogDeliveryConfigurations []*PendingLogDeliveryConfiguration `parquet:"name=log_delivery_configurations,type=MAP,convertedtype=LIST"`
	NumCacheNodes int32 `parquet:"name=num_cache_nodes,type=INT32"`
}

type PendingLogDeliveryConfiguration struct {
	DestinationDetails *DestinationDetails `parquet:"name=destination_details"`
	DestinationType string `parquet:"name=destination_type,type=BYTE_ARRAY,convertedtype=UTF8"`
	LogFormat string `parquet:"name=log_format,type=BYTE_ARRAY,convertedtype=UTF8"`
	LogType string `parquet:"name=log_type,type=BYTE_ARRAY,convertedtype=UTF8"`
}

type SecurityGroupMembership struct {
	SecurityGroupId string `parquet:"name=security_group_id,type=BYTE_ARRAY,convertedtype=UTF8"`
	Status string `parquet:"name=status,type=BYTE_ARRAY,convertedtype=UTF8"`
}


