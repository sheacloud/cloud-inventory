//AUTOGENERATED CODE DO NOT EDIT
package dynamodb

import (
	"context"
	"github.com/aws/aws-sdk-go-v2/feature/dynamodb/attributevalue"
	dynamo "github.com/aws/aws-sdk-go-v2/service/dynamodb"
	"github.com/aws/aws-sdk-go-v2/service/dynamodb/types"
	"github.com/sheacloud/cloud-inventory/internal/db"
	"github.com/sheacloud/cloud-inventory/pkg/aws/apigatewayv2"
	"time"
)

type DynamoDBApiGatewayV2DAO struct {
	client     *dynamo.Client
	maxRetries int
}

func (dao *DynamoDBApiGatewayV2DAO) ListApis(ctx context.Context, reportTime time.Time, accountID, region *string, limit, offset *int64) ([]*apigatewayv2.Api, error) {
	tableName := "cloud-inventory-aws-apigatewayv2-apis"
	items, _, err := ListItems(ctx, dao.client, tableName, reportTime, "api_id", nil)
	if err != nil {
		return nil, err
	}
	var resources []*apigatewayv2.Api
	err = attributevalue.UnmarshalListOfMaps(items, &resources)
	if err != nil {
		return nil, err
	}
	return resources, nil
}

func (dao *DynamoDBApiGatewayV2DAO) GetApi(ctx context.Context, reportTime time.Time, id string) (*apigatewayv2.Api, error) {
	tableName := "cloud-inventory-aws-apigatewayv2-apis"
	item, err := GetItem(ctx, dao.client, tableName, reportTime, id, "api_id")
	if err != nil {
		return nil, err
	}
	var resource *apigatewayv2.Api
	err = attributevalue.UnmarshalMap(item, &resource)
	if err != nil {
		return nil, err
	}
	return resource, nil
}

func (dao *DynamoDBApiGatewayV2DAO) PutApis(ctx context.Context, resources []*apigatewayv2.Api) error {
	items := make([]map[string]types.AttributeValue, len(resources))
	for i, resource := range resources {
		item, err := attributevalue.MarshalMap(resource)
		if err != nil {
			return err
		}
		items[i] = item
	}
	return BatchWriteItems(ctx, dao.client, dao.maxRetries, "cloud-inventory-aws-apigatewayv2-apis", items)
}

func (dao *DynamoDBApiGatewayV2DAO) GetApiReportTimes(ctx context.Context, reportDate time.Time) ([]string, error) {
	return DistinctReportTimes(ctx, dao.client, reportDate, "aws", "apigatewayv2", "apis")
}

func (dao *DynamoDBApiGatewayV2DAO) GetReferencedApiReportTime(ctx context.Context, reportDate time.Time, timeSelection db.TimeSelection, timeReference time.Time) (*time.Time, error) {
	return GetReportTime(ctx, dao.client, reportDate, timeSelection, timeReference, "aws", "apigatewayv2", "apis")
}
