//AUTOGENERATED CODE DO NOT EDIT
package mongo

import (
	"context"
	"github.com/sheacloud/cloud-inventory/internal/db"
	"github.com/sheacloud/cloud-inventory/pkg/meta"
	"go.mongodb.org/mongo-driver/mongo"
)

type MongoDAO struct {
	db     *mongo.Database
	awsDao *MongoAWSDAO
}

func (dao *MongoDAO) AWS() db.AWSDAO {
	return dao.awsDao
}

func (dao *MongoDAO) WriteInventoryResults(ctx context.Context, metadata *meta.InventoryResults) error {
	_, err := dao.db.Collection("inventory_results").InsertOne(ctx, metadata)
	return err
}

func (dao *MongoDAO) WriteIngestionTimestamp(ctx context.Context, metadata *meta.IngestionTimestamp) error {
	_, err := dao.db.Collection("ingestion_timestamps").InsertOne(ctx, metadata)
	return err
}

type MongoAWSDAO struct {
	db                        *mongo.Database
	apigatewayDAO             db.ApiGatewayDAO
	apigatewayv2DAO           db.ApiGatewayV2DAO
	backupDAO                 db.BackupDAO
	cloudtrailDAO             db.CloudTrailDAO
	cloudwatchlogsDAO         db.CloudWatchLogsDAO
	dynamodbDAO               db.DynamoDBDAO
	ec2DAO                    db.EC2DAO
	ecsDAO                    db.ECSDAO
	efsDAO                    db.EFSDAO
	elasticacheDAO            db.ElastiCacheDAO
	elasticloadbalancingDAO   db.ElasticLoadBalancingDAO
	elasticloadbalancingv2DAO db.ElasticLoadBalancingV2DAO
	iamDAO                    db.IAMDAO
	lambdaDAO                 db.LambdaDAO
	rdsDAO                    db.RDSDAO
	redshiftDAO               db.RedshiftDAO
	route53DAO                db.Route53DAO
	s3DAO                     db.S3DAO
	snsDAO                    db.SNSDAO
	sqsDAO                    db.SQSDAO
	storagegatewayDAO         db.StorageGatewayDAO
}

func (dao *MongoAWSDAO) ApiGateway() db.ApiGatewayDAO {
	return dao.apigatewayDAO
}
func (dao *MongoAWSDAO) ApiGatewayV2() db.ApiGatewayV2DAO {
	return dao.apigatewayv2DAO
}
func (dao *MongoAWSDAO) Backup() db.BackupDAO {
	return dao.backupDAO
}
func (dao *MongoAWSDAO) CloudTrail() db.CloudTrailDAO {
	return dao.cloudtrailDAO
}
func (dao *MongoAWSDAO) CloudWatchLogs() db.CloudWatchLogsDAO {
	return dao.cloudwatchlogsDAO
}
func (dao *MongoAWSDAO) DynamoDB() db.DynamoDBDAO {
	return dao.dynamodbDAO
}
func (dao *MongoAWSDAO) EC2() db.EC2DAO {
	return dao.ec2DAO
}
func (dao *MongoAWSDAO) ECS() db.ECSDAO {
	return dao.ecsDAO
}
func (dao *MongoAWSDAO) EFS() db.EFSDAO {
	return dao.efsDAO
}
func (dao *MongoAWSDAO) ElastiCache() db.ElastiCacheDAO {
	return dao.elasticacheDAO
}
func (dao *MongoAWSDAO) ElasticLoadBalancing() db.ElasticLoadBalancingDAO {
	return dao.elasticloadbalancingDAO
}
func (dao *MongoAWSDAO) ElasticLoadBalancingV2() db.ElasticLoadBalancingV2DAO {
	return dao.elasticloadbalancingv2DAO
}
func (dao *MongoAWSDAO) IAM() db.IAMDAO {
	return dao.iamDAO
}
func (dao *MongoAWSDAO) Lambda() db.LambdaDAO {
	return dao.lambdaDAO
}
func (dao *MongoAWSDAO) RDS() db.RDSDAO {
	return dao.rdsDAO
}
func (dao *MongoAWSDAO) Redshift() db.RedshiftDAO {
	return dao.redshiftDAO
}
func (dao *MongoAWSDAO) Route53() db.Route53DAO {
	return dao.route53DAO
}
func (dao *MongoAWSDAO) S3() db.S3DAO {
	return dao.s3DAO
}
func (dao *MongoAWSDAO) SNS() db.SNSDAO {
	return dao.snsDAO
}
func (dao *MongoAWSDAO) SQS() db.SQSDAO {
	return dao.sqsDAO
}
func (dao *MongoAWSDAO) StorageGateway() db.StorageGatewayDAO {
	return dao.storagegatewayDAO
}

func NewMongoDAO(db *mongo.Database) *MongoDAO {
	return &MongoDAO{
		db:     db,
		awsDao: NewMongoAWSDAO(db),
	}
}

func NewMongoAWSDAO(db *mongo.Database) *MongoAWSDAO {
	return &MongoAWSDAO{
		db:                        db,
		apigatewayDAO:             &MongoApiGatewayDAO{db: db},
		apigatewayv2DAO:           &MongoApiGatewayV2DAO{db: db},
		backupDAO:                 &MongoBackupDAO{db: db},
		cloudtrailDAO:             &MongoCloudTrailDAO{db: db},
		cloudwatchlogsDAO:         &MongoCloudWatchLogsDAO{db: db},
		dynamodbDAO:               &MongoDynamoDBDAO{db: db},
		ec2DAO:                    &MongoEC2DAO{db: db},
		ecsDAO:                    &MongoECSDAO{db: db},
		efsDAO:                    &MongoEFSDAO{db: db},
		elasticacheDAO:            &MongoElastiCacheDAO{db: db},
		elasticloadbalancingDAO:   &MongoElasticLoadBalancingDAO{db: db},
		elasticloadbalancingv2DAO: &MongoElasticLoadBalancingV2DAO{db: db},
		iamDAO:                    &MongoIAMDAO{db: db},
		lambdaDAO:                 &MongoLambdaDAO{db: db},
		rdsDAO:                    &MongoRDSDAO{db: db},
		redshiftDAO:               &MongoRedshiftDAO{db: db},
		route53DAO:                &MongoRoute53DAO{db: db},
		s3DAO:                     &MongoS3DAO{db: db},
		snsDAO:                    &MongoSNSDAO{db: db},
		sqsDAO:                    &MongoSQSDAO{db: db},
		storagegatewayDAO:         &MongoStorageGatewayDAO{db: db},
	}
}
