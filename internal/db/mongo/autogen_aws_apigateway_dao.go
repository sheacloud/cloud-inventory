//AUTOGENERATED CODE DO NOT EDIT
package mongo

import (
	"context"
	"github.com/sheacloud/cloud-inventory/internal/db"
	"github.com/sheacloud/cloud-inventory/pkg/aws/apigateway"
	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/mongo"
	"time"
)

type MongoApiGatewayDAO struct {
	db *mongo.Database
}

func (dao *MongoApiGatewayDAO) ListRestApis(ctx context.Context, reportTime time.Time, accountID, region *string, limit, offset *int64) ([]*apigateway.RestApi, error) {
	filter := bson.D{
		bson.E{"report_time", reportTime},
	}
	if accountID != nil {
		filter = append(filter, bson.E{Key: "account_id", Value: *accountID})
	}
	if region != nil {
		filter = append(filter, bson.E{Key: "region", Value: *region})
	}

	var results []*apigateway.RestApi
	cursor, err := dao.db.Collection("aws_apigateway_rest_apis").Find(ctx, filter)
	if err != nil {
		return nil, err
	}

	err = cursor.All(ctx, &results)
	if err != nil {
		return nil, err
	}

	return results, nil
}

func (dao *MongoApiGatewayDAO) GetRestApi(ctx context.Context, reportTime time.Time, id string) (*apigateway.RestApi, error) {
	filter := bson.D{
		bson.E{"report_time", reportTime},
		bson.E{"id", id},
	}

	var result *apigateway.RestApi
	err := dao.db.Collection("aws_apigateway_rest_apis").FindOne(ctx, filter).Decode(&result)

	return result, err
}

func (dao *MongoApiGatewayDAO) PutRestApis(ctx context.Context, resources []*apigateway.RestApi) error {
	if len(resources) == 0 {
		return nil
	}
	writes := make([]interface{}, len(resources))
	for i, resource := range resources {
		writes[i] = resource
	}
	_, err := dao.db.Collection("aws.apigateway.rest_apis").InsertMany(ctx, writes)

	return err
}

func (dao *MongoApiGatewayDAO) GetRestApiReportTimes(ctx context.Context, reportDate time.Time) ([]string, error) {
	return DistinctReportTimes(ctx, dao.db.Collection("aws_apigateway_rest_apis"), reportDate)
}

func (dao *MongoApiGatewayDAO) GetReferencedRestApiReportTime(ctx context.Context, reportDate time.Time, timeSelection db.TimeSelection, timeReference time.Time) (*time.Time, error) {
	return GetReportTime(ctx, dao.db.Collection("aws_apigateway_rest_apis"), reportDate, timeSelection, timeReference)
}
